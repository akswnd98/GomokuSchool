/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={757:(e,t,n)=>{e.exports=n(666)},720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=l(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=l(e,e<0?-1:0,!1),i&&(a[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return k}else{if(e<=-f)return N;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=o(u(n,8)),s=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var p=o(u(n,l));s=s.mul(p).add(o(h))}else s=(s=s.mul(a)).add(o(h))}return s.unsigned=t,s}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var p=4294967296,d=p*p,f=d/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var v=i(-1);n.NEG_ONE=v;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var N=l(0,-2147483648,!1);n.MIN_VALUE=N;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(N)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=o(u(e,6),this.unsigned),s=this,i="";;){var l=s.div(a),c=(s.sub(l.mul(a)).toInt()>>>0).toString(e);if((s=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(N)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1==(1&this.low)},I.isEven=function(){return 0==(1&this.low)},I.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(N)?N:this.not().add(b)},I.neg=I.negate,I.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,p=0,d=0,f=0;return d+=(f+=s+(65535&e.low))>>>16,p+=(d+=a+u)>>>16,c+=(p+=n+o)>>>16,c+=t+i,l((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},I.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(N))return e.isOdd()?N:g;if(e.eq(N))return this.isOdd()?N:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,p=e.low>>>16,d=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*d)>>>16,y+=(b+=s*d)>>>16,b&=65535,y+=(b+=i*p)>>>16,f+=(y+=a*d)>>>16,y&=65535,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*d+a*p+s*c+i*u,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;s=y}else{if(this.eq(N))return e.eq(b)||e.eq(v)?N:e.eq(N)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(N))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),p=o(n),d=p.mul(e);d.isNegative()||d.gt(a);)d=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),s=s.add(p),a=a.sub(d)}return s},I.div=I.divide,I.modulo=function(e){return r(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return l(~this.low,~this.high,this.unsigned)},I.and=function(e){return r(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return r(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return r(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,s){for(var i,o,l=a(e),u=1;u<arguments.length;u++){for(var c in i=Object(arguments[u]))n.call(i,c)&&(l[c]=i[c]);if(t){o=t(i);for(var h=0;h<o.length;h++)r.call(i,o[h])&&(l[o[h]]=i[o[h]])}}return l}},448:(e,t,n)=>{"use strict";var r=n(294),a=n(418),s=n(840);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var o=new Set,l={};function u(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(l[e]=t,e=0;e<t.length;e++)o.add(t[e])}var h=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),p=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,d=Object.prototype.hasOwnProperty,f={},m={};function g(e,t,n,r,a,s,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=i}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];y[t]=new g(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var b=/[\-:]([a-z])/g;function x(e){return e[1].toUpperCase()}function v(e,t,n,r){var a=y.hasOwnProperty(t)?y[t]:null;(null!==a?0===a.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!d.call(m,e)||!d.call(f,e)&&(p.test(e)?m[e]=!0:(f[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(b,x);y[t]=new g(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(b,x);y[t]=new g(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(b,x);y[t]=new g(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var w=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,k=60103,N=60106,I=60107,S=60108,C=60114,T=60109,$=60110,E=60112,R=60113,A=60120,_=60115,F=60116,D=60121,O=60128,M=60129,L=60130,z=60131;if("function"==typeof Symbol&&Symbol.for){var P=Symbol.for;k=P("react.element"),N=P("react.portal"),I=P("react.fragment"),S=P("react.strict_mode"),C=P("react.profiler"),T=P("react.provider"),$=P("react.context"),E=P("react.forward_ref"),R=P("react.suspense"),A=P("react.suspense_list"),_=P("react.memo"),F=P("react.lazy"),D=P("react.block"),P("react.scope"),O=P("react.opaque.id"),M=P("react.debug_trace_mode"),L=P("react.offscreen"),z=P("react.legacy_hidden")}var B,W="function"==typeof Symbol&&Symbol.iterator;function V(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=W&&e[W]||e["@@iterator"])?e:null}function U(e){if(void 0===B)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);B=t&&t[1]||""}return"\n"+B+e}var G=!1;function H(e,t){if(!e||G)return"";G=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),s=r.stack.split("\n"),i=a.length-1,o=s.length-1;1<=i&&0<=o&&a[i]!==s[o];)o--;for(;1<=i&&0<=o;i--,o--)if(a[i]!==s[o]){if(1!==i||1!==o)do{if(i--,0>--o||a[i]!==s[o])return"\n"+a[i].replace(" at new "," at ")}while(1<=i&&0<=o);break}}}finally{G=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?U(e):""}function j(e){switch(e.tag){case 5:return U(e.type);case 16:return U("Lazy");case 13:return U("Suspense");case 19:return U("SuspenseList");case 0:case 2:case 15:return H(e.type,!1);case 11:return H(e.type.render,!1);case 22:return H(e.type._render,!1);case 1:return H(e.type,!0);default:return""}}function q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case I:return"Fragment";case N:return"Portal";case C:return"Profiler";case S:return"StrictMode";case R:return"Suspense";case A:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case $:return(e.displayName||"Context")+".Consumer";case T:return(e._context.displayName||"Context")+".Provider";case E:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case _:return q(e.type);case D:return q(e._render);case F:t=e._payload,e=e._init;try{return q(e(t))}catch(e){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function X(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Y(e){e._valueTracker||(e._valueTracker=function(e){var t=X(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=X(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Z(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&Z(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function se(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function oe(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function le(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function ue(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ce(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var he="http://www.w3.org/1999/xhtml";function pe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function de(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?pe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var fe,me,ge=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((fe=fe||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=fe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ye(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var be={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},xe=["Webkit","ms","Moz","O"];function ve(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||be.hasOwnProperty(e)&&be[e]?(""+t).trim():t+"px"}function we(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=ve(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(be).forEach((function(e){xe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),be[t]=be[e]}))}));var ke=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ne(e,t){if(t){if(ke[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(i(62))}}function Ie(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Se(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,Te=null,$e=null;function Ee(e){if(e=na(e)){if("function"!=typeof Ce)throw Error(i(280));var t=e.stateNode;t&&(t=aa(t),Ce(e.stateNode,e.type,t))}}function Re(e){Te?$e?$e.push(e):$e=[e]:Te=e}function Ae(){if(Te){var e=Te,t=$e;if($e=Te=null,Ee(e),t)for(e=0;e<t.length;e++)Ee(t[e])}}function _e(e,t){return e(t)}function Fe(e,t,n,r,a){return e(t,n,r,a)}function De(){}var Oe=_e,Me=!1,Le=!1;function ze(){null===Te&&null===$e||(De(),Ae())}function Pe(e,t){var n=e.stateNode;if(null===n)return null;var r=aa(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(i(231,t,typeof n));return n}var Be=!1;if(h)try{var We={};Object.defineProperty(We,"passive",{get:function(){Be=!0}}),window.addEventListener("test",We,We),window.removeEventListener("test",We,We)}catch(me){Be=!1}function Ve(e,t,n,r,a,s,i,o,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(e){this.onError(e)}}var Ue=!1,Ge=null,He=!1,je=null,qe={onError:function(e){Ue=!0,Ge=e}};function Ke(e,t,n,r,a,s,i,o,l){Ue=!1,Ge=null,Ve.apply(qe,arguments)}function Xe(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ye(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Qe(e){if(Xe(e)!==e)throw Error(i(188))}function Ze(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=Xe(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var s=a.alternate;if(null===s){if(null!==(r=a.return)){n=r;continue}break}if(a.child===s.child){for(s=a.child;s;){if(s===n)return Qe(a),e;if(s===r)return Qe(a),t;s=s.sibling}throw Error(i(188))}if(n.return!==r.return)n=a,r=s;else{for(var o=!1,l=a.child;l;){if(l===n){o=!0,n=a,r=s;break}if(l===r){o=!0,r=a,n=s;break}l=l.sibling}if(!o){for(l=s.child;l;){if(l===n){o=!0,n=s,r=a;break}if(l===r){o=!0,r=s,n=a;break}l=l.sibling}if(!o)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Je(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,at=!1,st=[],it=null,ot=null,lt=null,ut=new Map,ct=new Map,ht=[],pt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function dt(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function ft(e,t){switch(e){case"focusin":case"focusout":it=null;break;case"dragenter":case"dragleave":ot=null;break;case"mouseover":case"mouseout":lt=null;break;case"pointerover":case"pointerout":ut.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ct.delete(t.pointerId)}}function mt(e,t,n,r,a,s){return null===e||e.nativeEvent!==s?(e=dt(t,n,r,a,s),null!==t&&null!==(t=na(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function gt(e){var t=ta(e.target);if(null!==t){var n=Xe(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ye(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){s.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function yt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=na(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function bt(e,t,n){yt(e)&&n.delete(t)}function xt(){for(at=!1;0<st.length;){var e=st[0];if(null!==e.blockedOn){null!==(e=na(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&st.shift()}null!==it&&yt(it)&&(it=null),null!==ot&&yt(ot)&&(ot=null),null!==lt&&yt(lt)&&(lt=null),ut.forEach(bt),ct.forEach(bt)}function vt(e,t){e.blockedOn===t&&(e.blockedOn=null,at||(at=!0,s.unstable_scheduleCallback(s.unstable_NormalPriority,xt)))}function wt(e){function t(t){return vt(t,e)}if(0<st.length){vt(st[0],e);for(var n=1;n<st.length;n++){var r=st[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==it&&vt(it,e),null!==ot&&vt(ot,e),null!==lt&&vt(lt,e),ut.forEach(t),ct.forEach(t),n=0;n<ht.length;n++)(r=ht[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ht.length&&null===(n=ht[0]).blockedOn;)gt(n),null===n.blockedOn&&ht.shift()}function kt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Nt={animationend:kt("Animation","AnimationEnd"),animationiteration:kt("Animation","AnimationIteration"),animationstart:kt("Animation","AnimationStart"),transitionend:kt("Transition","TransitionEnd")},It={},St={};function Ct(e){if(It[e])return It[e];if(!Nt[e])return e;var t,n=Nt[e];for(t in n)if(n.hasOwnProperty(t)&&t in St)return It[e]=n[t];return e}h&&(St=document.createElement("div").style,"AnimationEvent"in window||(delete Nt.animationend.animation,delete Nt.animationiteration.animation,delete Nt.animationstart.animation),"TransitionEvent"in window||delete Nt.transitionend.transition);var Tt=Ct("animationend"),$t=Ct("animationiteration"),Et=Ct("animationstart"),Rt=Ct("transitionend"),At=new Map,_t=new Map,Ft=["abort","abort",Tt,"animationEnd",$t,"animationIteration",Et,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Rt,"transitionEnd","waiting","waiting"];function Dt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),_t.set(r,t),At.set(r,a),u(a,[r])}}(0,s.unstable_now)();var Ot=8;function Mt(e){if(0!=(1&e))return Ot=15,1;if(0!=(2&e))return Ot=14,2;if(0!=(4&e))return Ot=13,4;var t=24&e;return 0!==t?(Ot=12,t):0!=(32&e)?(Ot=11,32):0!=(t=192&e)?(Ot=10,t):0!=(256&e)?(Ot=9,256):0!=(t=3584&e)?(Ot=8,t):0!=(4096&e)?(Ot=7,4096):0!=(t=4186112&e)?(Ot=6,t):0!=(t=62914560&e)?(Ot=5,t):67108864&e?(Ot=4,67108864):0!=(134217728&e)?(Ot=3,134217728):0!=(t=805306368&e)?(Ot=2,t):0!=(1073741824&e)?(Ot=1,1073741824):(Ot=8,e)}function Lt(e,t){var n=e.pendingLanes;if(0===n)return Ot=0;var r=0,a=0,s=e.expiredLanes,i=e.suspendedLanes,o=e.pingedLanes;if(0!==s)r=s,a=Ot=15;else if(0!=(s=134217727&n)){var l=s&~i;0!==l?(r=Mt(l),a=Ot):0!=(o&=s)&&(r=Mt(o),a=Ot)}else 0!=(s=n&~i)?(r=Mt(s),a=Ot):0!==o&&(r=Mt(o),a=Ot);if(0===r)return 0;if(r=n&((0>(r=31-Ut(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&i)){if(Mt(t),a<=Ot)return t;Ot=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-Ut(t)),r|=e[n],t&=~a;return r}function zt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Pt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Bt(24&~t))?Pt(10,t):e;case 10:return 0===(e=Bt(192&~t))?Pt(8,t):e;case 8:return 0===(e=Bt(3584&~t))&&0===(e=Bt(4186112&~t))&&(e=512),e;case 2:return 0===(t=Bt(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function Bt(e){return e&-e}function Wt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Vt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Ut(t)]=n}var Ut=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Gt(e)/Ht|0)|0},Gt=Math.log,Ht=Math.LN2,jt=s.unstable_UserBlockingPriority,qt=s.unstable_runWithPriority,Kt=!0;function Xt(e,t,n,r){Me||De();var a=Qt,s=Me;Me=!0;try{Fe(a,e,t,n,r)}finally{(Me=s)||ze()}}function Yt(e,t,n,r){qt(jt,Qt.bind(null,e,t,n,r))}function Qt(e,t,n,r){var a;if(Kt)if((a=0==(4&t))&&0<st.length&&-1<pt.indexOf(e))e=dt(null,e,t,n,r),st.push(e);else{var s=Zt(e,t,n,r);if(null===s)a&&ft(e,r);else{if(a){if(-1<pt.indexOf(e))return e=dt(s,e,t,n,r),void st.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return it=mt(it,e,t,n,r,a),!0;case"dragenter":return ot=mt(ot,e,t,n,r,a),!0;case"mouseover":return lt=mt(lt,e,t,n,r,a),!0;case"pointerover":var s=a.pointerId;return ut.set(s,mt(ut.get(s)||null,e,t,n,r,a)),!0;case"gotpointercapture":return s=a.pointerId,ct.set(s,mt(ct.get(s)||null,e,t,n,r,a)),!0}return!1}(s,e,t,n,r))return;ft(e,r)}Dr(e,t,r,null,n)}}}function Zt(e,t,n,r){var a=Se(r);if(null!==(a=ta(a))){var s=Xe(a);if(null===s)a=null;else{var i=s.tag;if(13===i){if(null!==(a=Ye(s)))return a;a=null}else if(3===i){if(s.stateNode.hydrate)return 3===s.tag?s.stateNode.containerInfo:null;a=null}else s!==a&&(a=null)}}return Dr(e,t,r,a,n),null}var Jt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,a="value"in Jt?Jt.value:Jt.textContent,s=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[s-t];t++);return tn=a.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function an(){return!0}function sn(){return!1}function on(e){function t(t,n,r,a,s){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?an:sn,this.isPropagationStopped=sn,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=an)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=an)},persist:function(){},isPersistent:an}),t}var ln,un,cn,hn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},pn=on(hn),dn=a({},hn,{view:0,detail:0}),fn=on(dn),mn=a({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Tn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(ln=e.screenX-cn.screenX,un=e.screenY-cn.screenY):un=ln=0,cn=e),ln)},movementY:function(e){return"movementY"in e?e.movementY:un}}),gn=on(mn),yn=on(a({},mn,{dataTransfer:0})),bn=on(a({},dn,{relatedTarget:0})),xn=on(a({},hn,{animationName:0,elapsedTime:0,pseudoElement:0})),vn=a({},hn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),wn=on(vn),kn=on(a({},hn,{data:0})),Nn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},In={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Tn(){return Cn}var $n=a({},dn,{key:function(e){if(e.key){var t=Nn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?In[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Tn,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),En=on($n),Rn=on(a({},mn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),An=on(a({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Tn})),_n=on(a({},hn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Fn=a({},mn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Dn=on(Fn),On=[9,13,27,32],Mn=h&&"CompositionEvent"in window,Ln=null;h&&"documentMode"in document&&(Ln=document.documentMode);var zn=h&&"TextEvent"in window&&!Ln,Pn=h&&(!Mn||Ln&&8<Ln&&11>=Ln),Bn=String.fromCharCode(32),Wn=!1;function Vn(e,t){switch(e){case"keyup":return-1!==On.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Gn=!1,Hn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function jn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Hn[e.type]:"textarea"===t}function qn(e,t,n,r){Re(r),0<(t=Mr(t,"onChange")).length&&(n=new pn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Kn=null,Xn=null;function Yn(e){$r(e,0)}function Qn(e){if(Q(ra(e)))return e}function Zn(e,t){if("change"===e)return t}var Jn=!1;if(h){var er;if(h){var tr="oninput"in document;if(!tr){var nr=document.createElement("div");nr.setAttribute("oninput","return;"),tr="function"==typeof nr.oninput}er=tr}else er=!1;Jn=er&&(!document.documentMode||9<document.documentMode)}function rr(){Kn&&(Kn.detachEvent("onpropertychange",ar),Xn=Kn=null)}function ar(e){if("value"===e.propertyName&&Qn(Xn)){var t=[];if(qn(t,Xn,e,Se(e)),e=Yn,Me)e(t);else{Me=!0;try{_e(e,t)}finally{Me=!1,ze()}}}}function sr(e,t,n){"focusin"===e?(rr(),Xn=n,(Kn=t).attachEvent("onpropertychange",ar)):"focusout"===e&&rr()}function ir(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Qn(Xn)}function or(e,t){if("click"===e)return Qn(t)}function lr(e,t){if("input"===e||"change"===e)return Qn(t)}var ur="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},cr=Object.prototype.hasOwnProperty;function hr(e,t){if(ur(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!cr.call(t,n[r])||!ur(e[n[r]],t[n[r]]))return!1;return!0}function pr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dr(e,t){var n,r=pr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=pr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function mr(){for(var e=window,t=Z();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Z((e=t.contentWindow).document)}return t}function gr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var yr=h&&"documentMode"in document&&11>=document.documentMode,br=null,xr=null,vr=null,wr=!1;function kr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;wr||null==br||br!==Z(r)||(r="selectionStart"in(r=br)&&gr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},vr&&hr(vr,r)||(vr=r,0<(r=Mr(xr,"onSelect")).length&&(t=new pn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=br)))}Dt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Dt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Dt(Ft,2);for(var Nr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ir=0;Ir<Nr.length;Ir++)_t.set(Nr[Ir],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Sr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Cr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Sr));function Tr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,s,o,l,u){if(Ke.apply(this,arguments),Ue){if(!Ue)throw Error(i(198));var c=Ge;Ue=!1,Ge=null,He||(He=!0,je=c)}}(r,t,void 0,e),e.currentTarget=null}function $r(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var s=void 0;if(t)for(var i=r.length-1;0<=i;i--){var o=r[i],l=o.instance,u=o.currentTarget;if(o=o.listener,l!==s&&a.isPropagationStopped())break e;Tr(a,o,u),s=l}else for(i=0;i<r.length;i++){if(l=(o=r[i]).instance,u=o.currentTarget,o=o.listener,l!==s&&a.isPropagationStopped())break e;Tr(a,o,u),s=l}}}if(He)throw e=je,He=!1,je=null,e}function Er(e,t){var n=sa(t),r=e+"__bubble";n.has(r)||(Fr(t,e,2,!1),n.add(r))}var Rr="_reactListening"+Math.random().toString(36).slice(2);function Ar(e){e[Rr]||(e[Rr]=!0,o.forEach((function(t){Cr.has(t)||_r(t,!1,e,null),_r(t,!0,e,null)})))}function _r(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,s=n;if("selectionchange"===e&&9!==n.nodeType&&(s=n.ownerDocument),null!==r&&!t&&Cr.has(e)){if("scroll"!==e)return;a|=2,s=r}var i=sa(s),o=e+"__"+(t?"capture":"bubble");i.has(o)||(t&&(a|=4),Fr(s,e,a,t),i.add(o))}function Fr(e,t,n,r){var a=_t.get(t);switch(void 0===a?2:a){case 0:a=Xt;break;case 1:a=Yt;break;default:a=Qt}n=a.bind(null,t,n,e),a=void 0,!Be||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Dr(e,t,n,r,a){var s=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var o=r.stateNode.containerInfo;if(o===a||8===o.nodeType&&o.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var l=i.tag;if((3===l||4===l)&&((l=i.stateNode.containerInfo)===a||8===l.nodeType&&l.parentNode===a))return;i=i.return}for(;null!==o;){if(null===(i=ta(o)))return;if(5===(l=i.tag)||6===l){r=s=i;continue e}o=o.parentNode}}r=r.return}!function(e,t,n){if(Le)return e();Le=!0;try{Oe(e,t,n)}finally{Le=!1,ze()}}((function(){var r=s,a=Se(n),i=[];e:{var o=At.get(e);if(void 0!==o){var l=pn,u=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":l=En;break;case"focusin":u="focus",l=bn;break;case"focusout":u="blur",l=bn;break;case"beforeblur":case"afterblur":l=bn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=gn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=yn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=An;break;case Tt:case $t:case Et:l=xn;break;case Rt:l=_n;break;case"scroll":l=fn;break;case"wheel":l=Dn;break;case"copy":case"cut":case"paste":l=wn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=Rn}var c=0!=(4&t),h=!c&&"scroll"===e,p=c?null!==o?o+"Capture":null:o;c=[];for(var d,f=r;null!==f;){var m=(d=f).stateNode;if(5===d.tag&&null!==m&&(d=m,null!==p&&null!=(m=Pe(f,p))&&c.push(Or(f,m,d))),h)break;f=f.return}0<c.length&&(o=new l(o,u,null,n,a),i.push({event:o,listeners:c}))}}if(0==(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(u=n.relatedTarget||n.fromElement)||!ta(u)&&!u[Jr])&&(l||o)&&(o=a.window===a?a:(o=a.ownerDocument)?o.defaultView||o.parentWindow:window,l?(l=r,null!==(u=(u=n.relatedTarget||n.toElement)?ta(u):null)&&(u!==(h=Xe(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(l=null,u=r),l!==u)){if(c=gn,m="onMouseLeave",p="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(c=Rn,m="onPointerLeave",p="onPointerEnter",f="pointer"),h=null==l?o:ra(l),d=null==u?o:ra(u),(o=new c(m,f+"leave",l,n,a)).target=h,o.relatedTarget=d,m=null,ta(a)===r&&((c=new c(p,f+"enter",u,n,a)).target=d,c.relatedTarget=h,m=c),h=m,l&&u)e:{for(p=u,f=0,d=c=l;d;d=Lr(d))f++;for(d=0,m=p;m;m=Lr(m))d++;for(;0<f-d;)c=Lr(c),f--;for(;0<d-f;)p=Lr(p),d--;for(;f--;){if(c===p||null!==p&&c===p.alternate)break e;c=Lr(c),p=Lr(p)}c=null}else c=null;null!==l&&zr(i,o,l,c,!1),null!==u&&null!==h&&zr(i,h,u,c,!0)}if("select"===(l=(o=r?ra(r):window).nodeName&&o.nodeName.toLowerCase())||"input"===l&&"file"===o.type)var g=Zn;else if(jn(o))if(Jn)g=lr;else{g=ir;var y=sr}else(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(g=or);switch(g&&(g=g(e,r))?qn(i,g,n,a):(y&&y(e,o,r),"focusout"===e&&(y=o._wrapperState)&&y.controlled&&"number"===o.type&&ae(o,"number",o.value)),y=r?ra(r):window,e){case"focusin":(jn(y)||"true"===y.contentEditable)&&(br=y,xr=r,vr=null);break;case"focusout":vr=xr=br=null;break;case"mousedown":wr=!0;break;case"contextmenu":case"mouseup":case"dragend":wr=!1,kr(i,n,a);break;case"selectionchange":if(yr)break;case"keydown":case"keyup":kr(i,n,a)}var b;if(Mn)e:{switch(e){case"compositionstart":var x="onCompositionStart";break e;case"compositionend":x="onCompositionEnd";break e;case"compositionupdate":x="onCompositionUpdate";break e}x=void 0}else Gn?Vn(e,n)&&(x="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(x="onCompositionStart");x&&(Pn&&"ko"!==n.locale&&(Gn||"onCompositionStart"!==x?"onCompositionEnd"===x&&Gn&&(b=nn()):(en="value"in(Jt=a)?Jt.value:Jt.textContent,Gn=!0)),0<(y=Mr(r,x)).length&&(x=new kn(x,e,null,n,a),i.push({event:x,listeners:y}),(b||null!==(b=Un(n)))&&(x.data=b))),(b=zn?function(e,t){switch(e){case"compositionend":return Un(t);case"keypress":return 32!==t.which?null:(Wn=!0,Bn);case"textInput":return(e=t.data)===Bn&&Wn?null:e;default:return null}}(e,n):function(e,t){if(Gn)return"compositionend"===e||!Mn&&Vn(e,t)?(e=nn(),tn=en=Jt=null,Gn=!1,e):null;switch(e){default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Pn&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=Mr(r,"onBeforeInput")).length&&(a=new kn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=b)}$r(i,t)}))}function Or(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Mr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,s=a.stateNode;5===a.tag&&null!==s&&(a=s,null!=(s=Pe(e,n))&&r.unshift(Or(e,s,a)),null!=(s=Pe(e,t))&&r.push(Or(e,s,a))),e=e.return}return r}function Lr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function zr(e,t,n,r,a){for(var s=t._reactName,i=[];null!==n&&n!==r;){var o=n,l=o.alternate,u=o.stateNode;if(null!==l&&l===r)break;5===o.tag&&null!==u&&(o=u,a?null!=(l=Pe(n,s))&&i.unshift(Or(n,l,o)):a||null!=(l=Pe(n,s))&&i.push(Or(n,l,o))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}function Pr(){}var Br=null,Wr=null;function Vr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Ur(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Gr="function"==typeof setTimeout?setTimeout:void 0,Hr="function"==typeof clearTimeout?clearTimeout:void 0;function jr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function qr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Kr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Xr=0,Yr=Math.random().toString(36).slice(2),Qr="__reactFiber$"+Yr,Zr="__reactProps$"+Yr,Jr="__reactContainer$"+Yr,ea="__reactEvents$"+Yr;function ta(e){var t=e[Qr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Jr]||n[Qr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Kr(e);null!==e;){if(n=e[Qr])return n;e=Kr(e)}return t}n=(e=n).parentNode}return null}function na(e){return!(e=e[Qr]||e[Jr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ra(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function aa(e){return e[Zr]||null}function sa(e){var t=e[ea];return void 0===t&&(t=e[ea]=new Set),t}var ia=[],oa=-1;function la(e){return{current:e}}function ua(e){0>oa||(e.current=ia[oa],ia[oa]=null,oa--)}function ca(e,t){oa++,ia[oa]=e.current,e.current=t}var ha={},pa=la(ha),da=la(!1),fa=ha;function ma(e,t){var n=e.type.contextTypes;if(!n)return ha;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,s={};for(a in n)s[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function ga(e){return null!=e.childContextTypes}function ya(){ua(da),ua(pa)}function ba(e,t,n){if(pa.current!==ha)throw Error(i(168));ca(pa,t),ca(da,n)}function xa(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var s in r=r.getChildContext())if(!(s in e))throw Error(i(108,q(t)||"Unknown",s));return a({},n,r)}function va(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ha,fa=pa.current,ca(pa,e),ca(da,da.current),!0}function wa(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=xa(e,t,fa),r.__reactInternalMemoizedMergedChildContext=e,ua(da),ua(pa),ca(pa,e)):ua(da),ca(da,n)}var ka=null,Na=null,Ia=s.unstable_runWithPriority,Sa=s.unstable_scheduleCallback,Ca=s.unstable_cancelCallback,Ta=s.unstable_shouldYield,$a=s.unstable_requestPaint,Ea=s.unstable_now,Ra=s.unstable_getCurrentPriorityLevel,Aa=s.unstable_ImmediatePriority,_a=s.unstable_UserBlockingPriority,Fa=s.unstable_NormalPriority,Da=s.unstable_LowPriority,Oa=s.unstable_IdlePriority,Ma={},La=void 0!==$a?$a:function(){},za=null,Pa=null,Ba=!1,Wa=Ea(),Va=1e4>Wa?Ea:function(){return Ea()-Wa};function Ua(){switch(Ra()){case Aa:return 99;case _a:return 98;case Fa:return 97;case Da:return 96;case Oa:return 95;default:throw Error(i(332))}}function Ga(e){switch(e){case 99:return Aa;case 98:return _a;case 97:return Fa;case 96:return Da;case 95:return Oa;default:throw Error(i(332))}}function Ha(e,t){return e=Ga(e),Ia(e,t)}function ja(e,t,n){return e=Ga(e),Sa(e,t,n)}function qa(){if(null!==Pa){var e=Pa;Pa=null,Ca(e)}Ka()}function Ka(){if(!Ba&&null!==za){Ba=!0;var e=0;try{var t=za;Ha(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),za=null}catch(t){throw null!==za&&(za=za.slice(e+1)),Sa(Aa,qa),t}finally{Ba=!1}}}var Xa=w.ReactCurrentBatchConfig;function Ya(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Qa=la(null),Za=null,Ja=null,es=null;function ts(){es=Ja=Za=null}function ns(e){var t=Qa.current;ua(Qa),e.type._context._currentValue=t}function rs(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function as(e,t){Za=e,es=Ja=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Oi=!0),e.firstContext=null)}function ss(e,t){if(es!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(es=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ja){if(null===Za)throw Error(i(308));Ja=t,Za.dependencies={lanes:0,firstContext:t,responders:null}}else Ja=Ja.next=t;return e._currentValue}var is=!1;function os(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ls(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function us(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function cs(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function hs(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?a=s=i:s=s.next=i,n=n.next}while(null!==n);null===s?a=s=t:s=s.next=t}else a=s=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:s,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function ps(e,t,n,r){var s=e.updateQueue;is=!1;var i=s.firstBaseUpdate,o=s.lastBaseUpdate,l=s.shared.pending;if(null!==l){s.shared.pending=null;var u=l,c=u.next;u.next=null,null===o?i=c:o.next=c,o=u;var h=e.alternate;if(null!==h){var p=(h=h.updateQueue).lastBaseUpdate;p!==o&&(null===p?h.firstBaseUpdate=c:p.next=c,h.lastBaseUpdate=u)}}if(null!==i){for(p=s.baseState,o=0,h=c=u=null;;){l=i.lane;var d=i.eventTime;if((r&l)===l){null!==h&&(h=h.next={eventTime:d,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var f=e,m=i;switch(l=t,d=n,m.tag){case 1:if("function"==typeof(f=m.payload)){p=f.call(d,p,l);break e}p=f;break e;case 3:f.flags=-4097&f.flags|64;case 0:if(null==(l="function"==typeof(f=m.payload)?f.call(d,p,l):f))break e;p=a({},p,l);break e;case 2:is=!0}}null!==i.callback&&(e.flags|=32,null===(l=s.effects)?s.effects=[i]:l.push(i))}else d={eventTime:d,lane:l,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===h?(c=h=d,u=p):h=h.next=d,o|=l;if(null===(i=i.next)){if(null===(l=s.shared.pending))break;i=l.next,l.next=null,s.lastBaseUpdate=l,s.shared.pending=null}}null===h&&(u=p),s.baseState=u,s.firstBaseUpdate=c,s.lastBaseUpdate=h,zo|=o,e.lanes=o,e.memoizedState=p}}function ds(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(i(191,a));a.call(r)}}}var fs=(new r.Component).refs;function ms(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var gs={isMounted:function(e){return!!(e=e._reactInternals)&&Xe(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ul(),a=cl(e),s=us(r,a);s.payload=t,null!=n&&(s.callback=n),cs(e,s),hl(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ul(),a=cl(e),s=us(r,a);s.tag=1,s.payload=t,null!=n&&(s.callback=n),cs(e,s),hl(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ul(),r=cl(e),a=us(n,r);a.tag=2,null!=t&&(a.callback=t),cs(e,a),hl(e,r,n)}};function ys(e,t,n,r,a,s,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,s,i):!(t.prototype&&t.prototype.isPureReactComponent&&hr(n,r)&&hr(a,s))}function bs(e,t,n){var r=!1,a=ha,s=t.contextType;return"object"==typeof s&&null!==s?s=ss(s):(a=ga(t)?fa:pa.current,s=(r=null!=(r=t.contextTypes))?ma(e,a):ha),t=new t(n,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=gs,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=s),t}function xs(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&gs.enqueueReplaceState(t,t.state,null)}function vs(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=fs,os(e);var s=t.contextType;"object"==typeof s&&null!==s?a.context=ss(s):(s=ga(t)?fa:pa.current,a.context=ma(e,s)),ps(e,n,a,r),a.state=e.memoizedState,"function"==typeof(s=t.getDerivedStateFromProps)&&(ms(e,t,s,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&gs.enqueueReplaceState(a,a.state,null),ps(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var ws=Array.isArray;function ks(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:(t=function(e){var t=r.refs;t===fs&&(t=r.refs={}),null===e?delete t[a]:t[a]=e},t._stringRef=a,t)}if("string"!=typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function Ns(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function Is(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Ul(e,t)).index=0,e.sibling=null,e}function s(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function o(t){return e&&null===t.alternate&&(t.flags=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=ql(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function u(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=ks(e,t,n),r.return=e,r):((r=Gl(n.type,n.key,n.props,null,e.mode,r)).ref=ks(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Kl(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function h(e,t,n,r,s){return null===t||7!==t.tag?((t=Hl(n,e.mode,r,s)).return=e,t):((t=a(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=ql(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case k:return(n=Gl(t.type,t.key,t.props,null,e.mode,n)).ref=ks(e,null,t),n.return=e,n;case N:return(t=Kl(t,e.mode,n)).return=e,t}if(ws(t)||V(t))return(t=Hl(t,e.mode,n,null)).return=e,t;Ns(e,t)}return null}function d(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case k:return n.key===a?n.type===I?h(e,t,n.props.children,r,a):u(e,t,n,r):null;case N:return n.key===a?c(e,t,n,r):null}if(ws(n)||V(n))return null!==a?null:h(e,t,n,r,null);Ns(e,n)}return null}function f(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case k:return e=e.get(null===r.key?n:r.key)||null,r.type===I?h(t,e,r.props.children,a,r.key):u(t,e,r,a);case N:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(ws(r)||V(r))return h(t,e=e.get(n)||null,r,a,null);Ns(t,r)}return null}function m(a,i,o,l){for(var u=null,c=null,h=i,m=i=0,g=null;null!==h&&m<o.length;m++){h.index>m?(g=h,h=null):g=h.sibling;var y=d(a,h,o[m],l);if(null===y){null===h&&(h=g);break}e&&h&&null===y.alternate&&t(a,h),i=s(y,i,m),null===c?u=y:c.sibling=y,c=y,h=g}if(m===o.length)return n(a,h),u;if(null===h){for(;m<o.length;m++)null!==(h=p(a,o[m],l))&&(i=s(h,i,m),null===c?u=h:c.sibling=h,c=h);return u}for(h=r(a,h);m<o.length;m++)null!==(g=f(h,a,m,o[m],l))&&(e&&null!==g.alternate&&h.delete(null===g.key?m:g.key),i=s(g,i,m),null===c?u=g:c.sibling=g,c=g);return e&&h.forEach((function(e){return t(a,e)})),u}function g(a,o,l,u){var c=V(l);if("function"!=typeof c)throw Error(i(150));if(null==(l=c.call(l)))throw Error(i(151));for(var h=c=null,m=o,g=o=0,y=null,b=l.next();null!==m&&!b.done;g++,b=l.next()){m.index>g?(y=m,m=null):y=m.sibling;var x=d(a,m,b.value,u);if(null===x){null===m&&(m=y);break}e&&m&&null===x.alternate&&t(a,m),o=s(x,o,g),null===h?c=x:h.sibling=x,h=x,m=y}if(b.done)return n(a,m),c;if(null===m){for(;!b.done;g++,b=l.next())null!==(b=p(a,b.value,u))&&(o=s(b,o,g),null===h?c=b:h.sibling=b,h=b);return c}for(m=r(a,m);!b.done;g++,b=l.next())null!==(b=f(m,a,g,b.value,u))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),o=s(b,o,g),null===h?c=b:h.sibling=b,h=b);return e&&m.forEach((function(e){return t(a,e)})),c}return function(e,r,s,l){var u="object"==typeof s&&null!==s&&s.type===I&&null===s.key;u&&(s=s.props.children);var c="object"==typeof s&&null!==s;if(c)switch(s.$$typeof){case k:e:{for(c=s.key,u=r;null!==u;){if(u.key===c){if(7===u.tag){if(s.type===I){n(e,u.sibling),(r=a(u,s.props.children)).return=e,e=r;break e}}else if(u.elementType===s.type){n(e,u.sibling),(r=a(u,s.props)).ref=ks(e,u,s),r.return=e,e=r;break e}n(e,u);break}t(e,u),u=u.sibling}s.type===I?((r=Hl(s.props.children,e.mode,l,s.key)).return=e,e=r):((l=Gl(s.type,s.key,s.props,null,e.mode,l)).ref=ks(e,r,s),l.return=e,e=l)}return o(e);case N:e:{for(u=s.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===s.containerInfo&&r.stateNode.implementation===s.implementation){n(e,r.sibling),(r=a(r,s.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Kl(s,e.mode,l)).return=e,e=r}return o(e)}if("string"==typeof s||"number"==typeof s)return s=""+s,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,s)).return=e,e=r):(n(e,r),(r=ql(s,e.mode,l)).return=e,e=r),o(e);if(ws(s))return m(e,r,s,l);if(V(s))return g(e,r,s,l);if(c&&Ns(e,s),void 0===s&&!u)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,q(e.type)||"Component"))}return n(e,r)}}var Ss=Is(!0),Cs=Is(!1),Ts={},$s=la(Ts),Es=la(Ts),Rs=la(Ts);function As(e){if(e===Ts)throw Error(i(174));return e}function _s(e,t){switch(ca(Rs,t),ca(Es,e),ca($s,Ts),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:de(null,"");break;default:t=de(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ua($s),ca($s,t)}function Fs(){ua($s),ua(Es),ua(Rs)}function Ds(e){As(Rs.current);var t=As($s.current),n=de(t,e.type);t!==n&&(ca(Es,e),ca($s,n))}function Os(e){Es.current===e&&(ua($s),ua(Es))}var Ms=la(0);function Ls(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var zs=null,Ps=null,Bs=!1;function Ws(e,t){var n=Wl(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Vs(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Us(e){if(Bs){var t=Ps;if(t){var n=t;if(!Vs(e,t)){if(!(t=qr(n.nextSibling))||!Vs(e,t))return e.flags=-1025&e.flags|2,Bs=!1,void(zs=e);Ws(zs,n)}zs=e,Ps=qr(t.firstChild)}else e.flags=-1025&e.flags|2,Bs=!1,zs=e}}function Gs(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;zs=e}function Hs(e){if(e!==zs)return!1;if(!Bs)return Gs(e),Bs=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Ur(t,e.memoizedProps))for(t=Ps;t;)Ws(e,t),t=qr(t.nextSibling);if(Gs(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ps=qr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ps=null}}else Ps=zs?qr(e.stateNode.nextSibling):null;return!0}function js(){Ps=zs=null,Bs=!1}var qs=[];function Ks(){for(var e=0;e<qs.length;e++)qs[e]._workInProgressVersionPrimary=null;qs.length=0}var Xs=w.ReactCurrentDispatcher,Ys=w.ReactCurrentBatchConfig,Qs=0,Zs=null,Js=null,ei=null,ti=!1,ni=!1;function ri(){throw Error(i(321))}function ai(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ur(e[n],t[n]))return!1;return!0}function si(e,t,n,r,a,s){if(Qs=s,Zs=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Xs.current=null===e||null===e.memoizedState?Ai:_i,e=n(r,a),ni){s=0;do{if(ni=!1,!(25>s))throw Error(i(301));s+=1,ei=Js=null,t.updateQueue=null,Xs.current=Fi,e=n(r,a)}while(ni)}if(Xs.current=Ri,t=null!==Js&&null!==Js.next,Qs=0,ei=Js=Zs=null,ti=!1,t)throw Error(i(300));return e}function ii(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ei?Zs.memoizedState=ei=e:ei=ei.next=e,ei}function oi(){if(null===Js){var e=Zs.alternate;e=null!==e?e.memoizedState:null}else e=Js.next;var t=null===ei?Zs.memoizedState:ei.next;if(null!==t)ei=t,Js=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Js=e).memoizedState,baseState:Js.baseState,baseQueue:Js.baseQueue,queue:Js.queue,next:null},null===ei?Zs.memoizedState=ei=e:ei=ei.next=e}return ei}function li(e,t){return"function"==typeof t?t(e):t}function ui(e){var t=oi(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=Js,a=r.baseQueue,s=n.pending;if(null!==s){if(null!==a){var o=a.next;a.next=s.next,s.next=o}r.baseQueue=a=s,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var l=o=s=null,u=a;do{var c=u.lane;if((Qs&c)===c)null!==l&&(l=l.next={lane:0,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null}),r=u.eagerReducer===e?u.eagerState:e(r,u.action);else{var h={lane:c,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null};null===l?(o=l=h,s=r):l=l.next=h,Zs.lanes|=c,zo|=c}u=u.next}while(null!==u&&u!==a);null===l?s=r:l.next=o,ur(r,t.memoizedState)||(Oi=!0),t.memoizedState=r,t.baseState=s,t.baseQueue=l,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function ci(e){var t=oi(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,s=t.memoizedState;if(null!==a){n.pending=null;var o=a=a.next;do{s=e(s,o.action),o=o.next}while(o!==a);ur(s,t.memoizedState)||(Oi=!0),t.memoizedState=s,null===t.baseQueue&&(t.baseState=s),n.lastRenderedState=s}return[s,r]}function hi(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Qs&e)===e)&&(t._workInProgressVersionPrimary=r,qs.push(t))),e)return n(t._source);throw qs.push(t),Error(i(350))}function pi(e,t,n,r){var a=Ro;if(null===a)throw Error(i(349));var s=t._getVersion,o=s(t._source),l=Xs.current,u=l.useState((function(){return hi(a,t,n)})),c=u[1],h=u[0];u=ei;var p=e.memoizedState,d=p.refs,f=d.getSnapshot,m=p.source;p=p.subscribe;var g=Zs;return e.memoizedState={refs:d,source:t,subscribe:r},l.useEffect((function(){d.getSnapshot=n,d.setSnapshot=c;var e=s(t._source);if(!ur(o,e)){e=n(t._source),ur(h,e)||(c(e),e=cl(g),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,i=e;0<i;){var l=31-Ut(i),u=1<<l;r[l]|=e,i&=~u}}}),[n,t,r]),l.useEffect((function(){return r(t._source,(function(){var e=d.getSnapshot,n=d.setSnapshot;try{n(e(t._source));var r=cl(g);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),ur(f,n)&&ur(m,t)&&ur(p,r)||((e={pending:null,dispatch:null,lastRenderedReducer:li,lastRenderedState:h}).dispatch=c=Ei.bind(null,Zs,e),u.queue=e,u.baseQueue=null,h=hi(a,t,n),u.memoizedState=u.baseState=h),h}function di(e,t,n){return pi(oi(),e,t,n)}function fi(e){var t=ii();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:li,lastRenderedState:e}).dispatch=Ei.bind(null,Zs,e),[t.memoizedState,e]}function mi(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Zs.updateQueue)?(t={lastEffect:null},Zs.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function gi(e){return e={current:e},ii().memoizedState=e}function yi(){return oi().memoizedState}function bi(e,t,n,r){var a=ii();Zs.flags|=e,a.memoizedState=mi(1|t,n,void 0,void 0===r?null:r)}function xi(e,t,n,r){var a=oi();r=void 0===r?null:r;var s=void 0;if(null!==Js){var i=Js.memoizedState;if(s=i.destroy,null!==r&&ai(r,i.deps))return void mi(t,n,s,r)}Zs.flags|=e,a.memoizedState=mi(1|t,n,s,r)}function vi(e,t){return bi(516,4,e,t)}function wi(e,t){return xi(516,4,e,t)}function ki(e,t){return xi(4,2,e,t)}function Ni(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ii(e,t,n){return n=null!=n?n.concat([e]):null,xi(4,2,Ni.bind(null,t,e),n)}function Si(){}function Ci(e,t){var n=oi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ai(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Ti(e,t){var n=oi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ai(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function $i(e,t){var n=Ua();Ha(98>n?98:n,(function(){e(!0)})),Ha(97<n?97:n,(function(){var n=Ys.transition;Ys.transition=1;try{e(!1),t()}finally{Ys.transition=n}}))}function Ei(e,t,n){var r=ul(),a=cl(e),s={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?s.next=s:(s.next=i.next,i.next=s),t.pending=s,i=e.alternate,e===Zs||null!==i&&i===Zs)ni=ti=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var o=t.lastRenderedState,l=i(o,n);if(s.eagerReducer=i,s.eagerState=l,ur(l,o))return}catch(e){}hl(e,a,r)}}var Ri={readContext:ss,useCallback:ri,useContext:ri,useEffect:ri,useImperativeHandle:ri,useLayoutEffect:ri,useMemo:ri,useReducer:ri,useRef:ri,useState:ri,useDebugValue:ri,useDeferredValue:ri,useTransition:ri,useMutableSource:ri,useOpaqueIdentifier:ri,unstable_isNewReconciler:!1},Ai={readContext:ss,useCallback:function(e,t){return ii().memoizedState=[e,void 0===t?null:t],e},useContext:ss,useEffect:vi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,bi(4,2,Ni.bind(null,t,e),n)},useLayoutEffect:function(e,t){return bi(4,2,e,t)},useMemo:function(e,t){var n=ii();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ii();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Ei.bind(null,Zs,e),[r.memoizedState,e]},useRef:gi,useState:fi,useDebugValue:Si,useDeferredValue:function(e){var t=fi(e),n=t[0],r=t[1];return vi((function(){var t=Ys.transition;Ys.transition=1;try{r(e)}finally{Ys.transition=t}}),[e]),n},useTransition:function(){var e=fi(!1),t=e[0];return gi(e=$i.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=ii();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},pi(r,e,t,n)},useOpaqueIdentifier:function(){if(Bs){var e=!1,t=function(e){return{$$typeof:O,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Xr++).toString(36))),Error(i(355))})),n=fi(t)[1];return 0==(2&Zs.mode)&&(Zs.flags|=516,mi(5,(function(){n("r:"+(Xr++).toString(36))}),void 0,null)),t}return fi(t="r:"+(Xr++).toString(36)),t},unstable_isNewReconciler:!1},_i={readContext:ss,useCallback:Ci,useContext:ss,useEffect:wi,useImperativeHandle:Ii,useLayoutEffect:ki,useMemo:Ti,useReducer:ui,useRef:yi,useState:function(){return ui(li)},useDebugValue:Si,useDeferredValue:function(e){var t=ui(li),n=t[0],r=t[1];return wi((function(){var t=Ys.transition;Ys.transition=1;try{r(e)}finally{Ys.transition=t}}),[e]),n},useTransition:function(){var e=ui(li)[0];return[yi().current,e]},useMutableSource:di,useOpaqueIdentifier:function(){return ui(li)[0]},unstable_isNewReconciler:!1},Fi={readContext:ss,useCallback:Ci,useContext:ss,useEffect:wi,useImperativeHandle:Ii,useLayoutEffect:ki,useMemo:Ti,useReducer:ci,useRef:yi,useState:function(){return ci(li)},useDebugValue:Si,useDeferredValue:function(e){var t=ci(li),n=t[0],r=t[1];return wi((function(){var t=Ys.transition;Ys.transition=1;try{r(e)}finally{Ys.transition=t}}),[e]),n},useTransition:function(){var e=ci(li)[0];return[yi().current,e]},useMutableSource:di,useOpaqueIdentifier:function(){return ci(li)[0]},unstable_isNewReconciler:!1},Di=w.ReactCurrentOwner,Oi=!1;function Mi(e,t,n,r){t.child=null===e?Cs(t,null,n,r):Ss(t,e.child,n,r)}function Li(e,t,n,r,a){n=n.render;var s=t.ref;return as(t,a),r=si(e,t,n,r,s,a),null===e||Oi?(t.flags|=1,Mi(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,to(e,t,a))}function zi(e,t,n,r,a,s){if(null===e){var i=n.type;return"function"!=typeof i||Vl(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Gl(n.type,null,r,t,t.mode,s)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Pi(e,t,i,r,a,s))}return i=e.child,0==(a&s)&&(a=i.memoizedProps,(n=null!==(n=n.compare)?n:hr)(a,r)&&e.ref===t.ref)?to(e,t,s):(t.flags|=1,(e=Ul(i,r)).ref=t.ref,e.return=t,t.child=e)}function Pi(e,t,n,r,a,s){if(null!==e&&hr(e.memoizedProps,r)&&e.ref===t.ref){if(Oi=!1,0==(s&a))return t.lanes=e.lanes,to(e,t,s);0!=(16384&e.flags)&&(Oi=!0)}return Vi(e,t,n,r,s)}function Bi(e,t,n){var r=t.pendingProps,a=r.children,s=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},xl(0,n);else{if(0==(1073741824&n))return e=null!==s?s.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},xl(0,e),null;t.memoizedState={baseLanes:0},xl(0,null!==s?s.baseLanes:n)}else null!==s?(r=s.baseLanes|n,t.memoizedState=null):r=n,xl(0,r);return Mi(e,t,a,n),t.child}function Wi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Vi(e,t,n,r,a){var s=ga(n)?fa:pa.current;return s=ma(t,s),as(t,a),n=si(e,t,n,r,s,a),null===e||Oi?(t.flags|=1,Mi(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,to(e,t,a))}function Ui(e,t,n,r,a){if(ga(n)){var s=!0;va(t)}else s=!1;if(as(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),bs(t,n,r),vs(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,o=t.memoizedProps;i.props=o;var l=i.context,u=n.contextType;u="object"==typeof u&&null!==u?ss(u):ma(t,u=ga(n)?fa:pa.current);var c=n.getDerivedStateFromProps,h="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;h||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==r||l!==u)&&xs(t,i,r,u),is=!1;var p=t.memoizedState;i.state=p,ps(t,r,i,a),l=t.memoizedState,o!==r||p!==l||da.current||is?("function"==typeof c&&(ms(t,n,c,r),l=t.memoizedState),(o=is||ys(t,n,o,r,p,l,u))?(h||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4)):("function"==typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=l),i.props=r,i.state=l,i.context=u,r=o):("function"==typeof i.componentDidMount&&(t.flags|=4),r=!1)}else{i=t.stateNode,ls(e,t),o=t.memoizedProps,u=t.type===t.elementType?o:Ya(t.type,o),i.props=u,h=t.pendingProps,p=i.context,l="object"==typeof(l=n.contextType)&&null!==l?ss(l):ma(t,l=ga(n)?fa:pa.current);var d=n.getDerivedStateFromProps;(c="function"==typeof d||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==h||p!==l)&&xs(t,i,r,l),is=!1,p=t.memoizedState,i.state=p,ps(t,r,i,a);var f=t.memoizedState;o!==h||p!==f||da.current||is?("function"==typeof d&&(ms(t,n,d,r),f=t.memoizedState),(u=is||ys(t,n,u,r,p,f,l))?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,f,l),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,f,l)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=f),i.props=r,i.state=f,i.context=l,r=u):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=256),r=!1)}return Gi(e,t,n,r,s,a)}function Gi(e,t,n,r,a,s){Wi(e,t);var i=0!=(64&t.flags);if(!r&&!i)return a&&wa(t,n,!1),to(e,t,s);r=t.stateNode,Di.current=t;var o=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=Ss(t,e.child,null,s),t.child=Ss(t,null,o,s)):Mi(e,t,o,s),t.memoizedState=r.state,a&&wa(t,n,!0),t.child}function Hi(e){var t=e.stateNode;t.pendingContext?ba(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ba(0,t.context,!1),_s(e,t.containerInfo)}var ji,qi,Ki,Xi={dehydrated:null,retryLane:0};function Yi(e,t,n){var r,a=t.pendingProps,s=Ms.current,i=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&s)),r?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(s|=1),ca(Ms,1&s),null===e?(void 0!==a.fallback&&Us(t),e=a.children,s=a.fallback,i?(e=Qi(t,e,s,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Xi,e):"number"==typeof a.unstable_expectedLoadTime?(e=Qi(t,e,s,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Xi,t.lanes=33554432,e):((n=jl({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,i?(a=function(e,t,n,r,a){var s=t.mode,i=e.child;e=i.sibling;var o={mode:"hidden",children:n};return 0==(2&s)&&t.child!==i?((n=t.child).childLanes=0,n.pendingProps=o,null!==(i=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Ul(i,o),null!==e?r=Ul(e,r):(r=Hl(r,s,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,a.children,a.fallback,n),i=t.child,s=e.child.memoizedState,i.memoizedState=null===s?{baseLanes:n}:{baseLanes:s.baseLanes|n},i.childLanes=e.childLanes&~n,t.memoizedState=Xi,a):(n=function(e,t,n,r){var a=e.child;return e=a.sibling,n=Ul(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,a.children,n),t.memoizedState=null,n))}function Qi(e,t,n,r){var a=e.mode,s=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==s?(s.childLanes=0,s.pendingProps=t):s=jl(t,a,0,null),n=Hl(n,a,r,null),s.return=e,n.return=e,s.sibling=n,e.child=s,n}function Zi(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),rs(e.return,t)}function Ji(e,t,n,r,a,s){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:s}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=a,i.lastEffect=s)}function eo(e,t,n){var r=t.pendingProps,a=r.revealOrder,s=r.tail;if(Mi(e,t,r.children,n),0!=(2&(r=Ms.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Zi(e,n);else if(19===e.tag)Zi(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ca(Ms,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===Ls(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Ji(t,!1,a,n,s,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Ls(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Ji(t,!0,n,null,s,t.lastEffect);break;case"together":Ji(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function to(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),zo|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Ul(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ul(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function no(e,t){if(!Bs)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ro(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return ga(t.type)&&ya(),null;case 3:return Fs(),ua(da),ua(pa),Ks(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Hs(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Os(t);var s=As(Rs.current);if(n=t.type,null!==e&&null!=t.stateNode)qi(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(i(166));return null}if(e=As($s.current),Hs(t)){r=t.stateNode,n=t.type;var o=t.memoizedProps;switch(r[Qr]=t,r[Zr]=o,n){case"dialog":Er("cancel",r),Er("close",r);break;case"iframe":case"object":case"embed":Er("load",r);break;case"video":case"audio":for(e=0;e<Sr.length;e++)Er(Sr[e],r);break;case"source":Er("error",r);break;case"img":case"image":case"link":Er("error",r),Er("load",r);break;case"details":Er("toggle",r);break;case"input":ee(r,o),Er("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},Er("invalid",r);break;case"textarea":le(r,o),Er("invalid",r)}for(var u in Ne(n,o),e=null,o)o.hasOwnProperty(u)&&(s=o[u],"children"===u?"string"==typeof s?r.textContent!==s&&(e=["children",s]):"number"==typeof s&&r.textContent!==""+s&&(e=["children",""+s]):l.hasOwnProperty(u)&&null!=s&&"onScroll"===u&&Er("scroll",r));switch(n){case"input":Y(r),re(r,o,!0);break;case"textarea":Y(r),ce(r);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(r.onclick=Pr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(u=9===s.nodeType?s:s.ownerDocument,e===he&&(e=pe(n)),e===he?"script"===n?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(n,{is:r.is}):(e=u.createElement(n),"select"===n&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,n),e[Qr]=t,e[Zr]=r,ji(e,t),t.stateNode=e,u=Ie(n,r),n){case"dialog":Er("cancel",e),Er("close",e),s=r;break;case"iframe":case"object":case"embed":Er("load",e),s=r;break;case"video":case"audio":for(s=0;s<Sr.length;s++)Er(Sr[s],e);s=r;break;case"source":Er("error",e),s=r;break;case"img":case"image":case"link":Er("error",e),Er("load",e),s=r;break;case"details":Er("toggle",e),s=r;break;case"input":ee(e,r),s=J(e,r),Er("invalid",e);break;case"option":s=se(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},s=a({},r,{value:void 0}),Er("invalid",e);break;case"textarea":le(e,r),s=oe(e,r),Er("invalid",e);break;default:s=r}Ne(n,s);var c=s;for(o in c)if(c.hasOwnProperty(o)){var h=c[o];"style"===o?we(e,h):"dangerouslySetInnerHTML"===o?null!=(h=h?h.__html:void 0)&&ge(e,h):"children"===o?"string"==typeof h?("textarea"!==n||""!==h)&&ye(e,h):"number"==typeof h&&ye(e,""+h):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(l.hasOwnProperty(o)?null!=h&&"onScroll"===o&&Er("scroll",e):null!=h&&v(e,o,h,u))}switch(n){case"input":Y(e),re(e,r,!1);break;case"textarea":Y(e),ce(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(o=r.value)?ie(e,!!r.multiple,o,!1):null!=r.defaultValue&&ie(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof s.onClick&&(e.onclick=Pr)}Vr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Ki(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(i(166));n=As(Rs.current),As($s.current),Hs(t)?(r=t.stateNode,n=t.memoizedProps,r[Qr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Qr]=t,t.stateNode=r)}return null;case 13:return ua(Ms),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Hs(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ms.current)?0===Oo&&(Oo=3):(0!==Oo&&3!==Oo||(Oo=4),null===Ro||0==(134217727&zo)&&0==(134217727&Po)||ml(Ro,_o))),(r||n)&&(t.flags|=4),null);case 4:return Fs(),null===e&&Ar(t.stateNode.containerInfo),null;case 10:return ns(t),null;case 19:if(ua(Ms),null===(r=t.memoizedState))return null;if(o=0!=(64&t.flags),null===(u=r.rendering))if(o)no(r,!1);else{if(0!==Oo||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(u=Ls(e))){for(t.flags|=64,no(r,!1),null!==(o=u.updateQueue)&&(t.updateQueue=o,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(o=n).flags&=2,o.nextEffect=null,o.firstEffect=null,o.lastEffect=null,null===(u=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=u.childLanes,o.lanes=u.lanes,o.child=u.child,o.memoizedProps=u.memoizedProps,o.memoizedState=u.memoizedState,o.updateQueue=u.updateQueue,o.type=u.type,e=u.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ca(Ms,1&Ms.current|2),t.child}e=e.sibling}null!==r.tail&&Va()>Uo&&(t.flags|=64,o=!0,no(r,!1),t.lanes=33554432)}else{if(!o)if(null!==(e=Ls(u))){if(t.flags|=64,o=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),no(r,!0),null===r.tail&&"hidden"===r.tailMode&&!u.alternate&&!Bs)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Va()-r.renderingStartTime>Uo&&1073741824!==n&&(t.flags|=64,o=!0,no(r,!1),t.lanes=33554432);r.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=r.last)?n.sibling=u:t.child=u,r.last=u)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Va(),n.sibling=null,t=Ms.current,ca(Ms,o?1&t|2:1&t),n):null;case 23:case 24:return vl(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function ao(e){switch(e.tag){case 1:ga(e.type)&&ya();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Fs(),ua(da),ua(pa),Ks(),0!=(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return Os(e),null;case 13:return ua(Ms),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return ua(Ms),null;case 4:return Fs(),null;case 10:return ns(e),null;case 23:case 24:return vl(),null;default:return null}}function so(e,t){try{var n="",r=t;do{n+=j(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function io(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}ji=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},qi=function(e,t,n,r){var s=e.memoizedProps;if(s!==r){e=t.stateNode,As($s.current);var i,o=null;switch(n){case"input":s=J(e,s),r=J(e,r),o=[];break;case"option":s=se(e,s),r=se(e,r),o=[];break;case"select":s=a({},s,{value:void 0}),r=a({},r,{value:void 0}),o=[];break;case"textarea":s=oe(e,s),r=oe(e,r),o=[];break;default:"function"!=typeof s.onClick&&"function"==typeof r.onClick&&(e.onclick=Pr)}for(h in Ne(n,r),n=null,s)if(!r.hasOwnProperty(h)&&s.hasOwnProperty(h)&&null!=s[h])if("style"===h){var u=s[h];for(i in u)u.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==h&&"children"!==h&&"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(l.hasOwnProperty(h)?o||(o=[]):(o=o||[]).push(h,null));for(h in r){var c=r[h];if(u=null!=s?s[h]:void 0,r.hasOwnProperty(h)&&c!==u&&(null!=c||null!=u))if("style"===h)if(u){for(i in u)!u.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in c)c.hasOwnProperty(i)&&u[i]!==c[i]&&(n||(n={}),n[i]=c[i])}else n||(o||(o=[]),o.push(h,n)),n=c;else"dangerouslySetInnerHTML"===h?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(o=o||[]).push(h,c)):"children"===h?"string"!=typeof c&&"number"!=typeof c||(o=o||[]).push(h,""+c):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&(l.hasOwnProperty(h)?(null!=c&&"onScroll"===h&&Er("scroll",e),o||u===c||(o=[])):"object"==typeof c&&null!==c&&c.$$typeof===O?c.toString():(o=o||[]).push(h,c))}n&&(o=o||[]).push("style",n);var h=o;(t.updateQueue=h)&&(t.flags|=4)}},Ki=function(e,t,n,r){n!==r&&(t.flags|=4)};var oo="function"==typeof WeakMap?WeakMap:Map;function lo(e,t,n){(n=us(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){qo||(qo=!0,Ko=r),io(0,t)},n}function uo(e,t,n){(n=us(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return io(0,t),r(a)}}var s=e.stateNode;return null!==s&&"function"==typeof s.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Xo?Xo=new Set([this]):Xo.add(this),io(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var co="function"==typeof WeakSet?WeakSet:Set;function ho(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ll(e,t)}else t.current=null}function po(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 5:case 6:case 4:case 17:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Ya(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&jr(t.stateNode.containerInfo))}throw Error(i(163))}function fo(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Dl(n,e),Fl(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Ya(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&ds(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:case 1:e=n.child.stateNode}ds(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Vr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:case 23:case 24:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&wt(n)))))}throw Error(i(163))}function mo(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=ve("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function go(e,t){if(Na&&"function"==typeof Na.onCommitFiberUnmount)try{Na.onCommitFiberUnmount(ka,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Dl(t,n);else{r=t;try{a()}catch(e){Ll(r,e)}}n=n.next}while(n!==e)}break;case 1:if(ho(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Ll(t,e)}break;case 5:ho(t);break;case 4:ko(e,t)}}function yo(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function bo(e){return 5===e.tag||3===e.tag||4===e.tag}function xo(e){e:{for(var t=e.return;null!==t;){if(bo(t))break e;t=t.return}throw Error(i(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.flags&&(ye(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||bo(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?vo(e,n,t):wo(e,n,t)}function vo(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Pr));else if(4!==r&&null!==(e=e.child))for(vo(e,t,n),e=e.sibling;null!==e;)vo(e,t,n),e=e.sibling}function wo(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(wo(e,t,n),e=e.sibling;null!==e;)wo(e,t,n),e=e.sibling}function ko(e,t){for(var n,r,a=t,s=!1;;){if(!s){s=a.return;e:for(;;){if(null===s)throw Error(i(160));switch(n=s.stateNode,s.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}s=s.return}s=!0}if(5===a.tag||6===a.tag){e:for(var o=e,l=a,u=l;;)if(go(o,u),null!==u.child&&4!==u.tag)u.child.return=u,u=u.child;else{if(u===l)break e;for(;null===u.sibling;){if(null===u.return||u.return===l)break e;u=u.return}u.sibling.return=u.return,u=u.sibling}r?(o=n,l=a.stateNode,8===o.nodeType?o.parentNode.removeChild(l):o.removeChild(l)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(go(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(s=!1)}a.sibling.return=a.return,a=a.sibling}}function No(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:case 12:case 17:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var s=t.updateQueue;if(t.updateQueue=null,null!==s){for(n[Zr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Ie(e,a),t=Ie(e,r),a=0;a<s.length;a+=2){var o=s[a],l=s[a+1];"style"===o?we(n,l):"dangerouslySetInnerHTML"===o?ge(n,l):"children"===o?ye(n,l):v(n,o,l,t)}switch(e){case"input":ne(n,r);break;case"textarea":ue(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(s=r.value)?ie(n,!!r.multiple,s,!1):e!==!!r.multiple&&(null!=r.defaultValue?ie(n,!!r.multiple,r.defaultValue,!0):ie(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,wt(n.containerInfo)));case 13:return null!==t.memoizedState&&(Vo=Va(),mo(t.child,!0)),void Io(t);case 19:return void Io(t);case 23:case 24:return void mo(t,null!==t.memoizedState)}throw Error(i(163))}function Io(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new co),t.forEach((function(t){var r=Pl.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function So(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var Co=Math.ceil,To=w.ReactCurrentDispatcher,$o=w.ReactCurrentOwner,Eo=0,Ro=null,Ao=null,_o=0,Fo=0,Do=la(0),Oo=0,Mo=null,Lo=0,zo=0,Po=0,Bo=0,Wo=null,Vo=0,Uo=1/0;function Go(){Uo=Va()+500}var Ho,jo=null,qo=!1,Ko=null,Xo=null,Yo=!1,Qo=null,Zo=90,Jo=[],el=[],tl=null,nl=0,rl=null,al=-1,sl=0,il=0,ol=null,ll=!1;function ul(){return 0!=(48&Eo)?Va():-1!==al?al:al=Va()}function cl(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Ua()?1:2;if(0===sl&&(sl=Lo),0!==Xa.transition){0!==il&&(il=null!==Wo?Wo.pendingLanes:0),e=sl;var t=4186112&~il;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Ua(),e=Pt(0!=(4&Eo)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),sl)}function hl(e,t,n){if(50<nl)throw nl=0,rl=null,Error(i(185));if(null===(e=pl(e,t)))return null;Vt(e,t,n),e===Ro&&(Po|=t,4===Oo&&ml(e,_o));var r=Ua();1===t?0!=(8&Eo)&&0==(48&Eo)?gl(e):(dl(e,n),0===Eo&&(Go(),qa())):(0==(4&Eo)||98!==r&&99!==r||(null===tl?tl=new Set([e]):tl.add(e)),dl(e,n)),Wo=e}function pl(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function dl(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,s=e.expirationTimes,o=e.pendingLanes;0<o;){var l=31-Ut(o),u=1<<l,c=s[l];if(-1===c){if(0==(u&r)||0!=(u&a)){c=t,Mt(u);var h=Ot;s[l]=10<=h?c+250:6<=h?c+5e3:-1}}else c<=t&&(e.expiredLanes|=u);o&=~u}if(r=Lt(e,e===Ro?_o:0),t=Ot,0===r)null!==n&&(n!==Ma&&Ca(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Ma&&Ca(n)}15===t?(n=gl.bind(null,e),null===za?(za=[n],Pa=Sa(Aa,Ka)):za.push(n),n=Ma):14===t?n=ja(99,gl.bind(null,e)):(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),n=ja(n,fl.bind(null,e))),e.callbackPriority=t,e.callbackNode=n}}function fl(e){if(al=-1,il=sl=0,0!=(48&Eo))throw Error(i(327));var t=e.callbackNode;if(_l()&&e.callbackNode!==t)return null;var n=Lt(e,e===Ro?_o:0);if(0===n)return null;var r=n,a=Eo;Eo|=16;var s=Nl();for(Ro===e&&_o===r||(Go(),wl(e,r));;)try{Cl();break}catch(t){kl(e,t)}if(ts(),To.current=s,Eo=a,null!==Ao?r=0:(Ro=null,_o=0,r=Oo),0!=(Lo&Po))wl(e,0);else if(0!==r){if(2===r&&(Eo|=64,e.hydrate&&(e.hydrate=!1,jr(e.containerInfo)),0!==(n=zt(e))&&(r=Il(e,n))),1===r)throw t=Mo,wl(e,0),ml(e,n),dl(e,Va()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(i(345));case 2:case 5:El(e);break;case 3:if(ml(e,n),(62914560&n)===n&&10<(r=Vo+500-Va())){if(0!==Lt(e,0))break;if(((a=e.suspendedLanes)&n)!==n){ul(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Gr(El.bind(null,e),r);break}El(e);break;case 4:if(ml(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var o=31-Ut(n);s=1<<o,(o=r[o])>a&&(a=o),n&=~s}if(n=a,10<(n=(120>(n=Va()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Co(n/1960))-n)){e.timeoutHandle=Gr(El.bind(null,e),n);break}El(e);break;default:throw Error(i(329))}}return dl(e,Va()),e.callbackNode===t?fl.bind(null,e):null}function ml(e,t){for(t&=~Bo,t&=~Po,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Ut(t),r=1<<n;e[n]=-1,t&=~r}}function gl(e){if(0!=(48&Eo))throw Error(i(327));if(_l(),e===Ro&&0!=(e.expiredLanes&_o)){var t=_o,n=Il(e,t);0!=(Lo&Po)&&(n=Il(e,t=Lt(e,t)))}else n=Il(e,t=Lt(e,0));if(0!==e.tag&&2===n&&(Eo|=64,e.hydrate&&(e.hydrate=!1,jr(e.containerInfo)),0!==(t=zt(e))&&(n=Il(e,t))),1===n)throw n=Mo,wl(e,0),ml(e,t),dl(e,Va()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,El(e),dl(e,Va()),null}function yl(e,t){var n=Eo;Eo|=1;try{return e(t)}finally{0===(Eo=n)&&(Go(),qa())}}function bl(e,t){var n=Eo;Eo&=-2,Eo|=8;try{return e(t)}finally{0===(Eo=n)&&(Go(),qa())}}function xl(e,t){ca(Do,Fo),Fo|=t,Lo|=t}function vl(){Fo=Do.current,ua(Do)}function wl(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Hr(n)),null!==Ao)for(n=Ao.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ya();break;case 3:Fs(),ua(da),ua(pa),Ks();break;case 5:Os(r);break;case 4:Fs();break;case 13:case 19:ua(Ms);break;case 10:ns(r);break;case 23:case 24:vl()}n=n.return}Ro=e,Ao=Ul(e.current,null),_o=Fo=Lo=t,Oo=0,Mo=null,Bo=Po=zo=0}function kl(e,t){for(;;){var n=Ao;try{if(ts(),Xs.current=Ri,ti){for(var r=Zs.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}ti=!1}if(Qs=0,ei=Js=Zs=null,ni=!1,$o.current=null,null===n||null===n.return){Oo=1,Mo=t,Ao=null;break}e:{var s=e,i=n.return,o=n,l=t;if(t=_o,o.flags|=2048,o.firstEffect=o.lastEffect=null,null!==l&&"object"==typeof l&&"function"==typeof l.then){var u=l;if(0==(2&o.mode)){var c=o.alternate;c?(o.updateQueue=c.updateQueue,o.memoizedState=c.memoizedState,o.lanes=c.lanes):(o.updateQueue=null,o.memoizedState=null)}var h=0!=(1&Ms.current),p=i;do{var d;if(d=13===p.tag){var f=p.memoizedState;if(null!==f)d=null!==f.dehydrated;else{var m=p.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!h)}}if(d){var g=p.updateQueue;if(null===g){var y=new Set;y.add(u),p.updateQueue=y}else g.add(u);if(0==(2&p.mode)){if(p.flags|=64,o.flags|=16384,o.flags&=-2981,1===o.tag)if(null===o.alternate)o.tag=17;else{var b=us(-1,1);b.tag=2,cs(o,b)}o.lanes|=1;break e}l=void 0,o=t;var x=s.pingCache;if(null===x?(x=s.pingCache=new oo,l=new Set,x.set(u,l)):void 0===(l=x.get(u))&&(l=new Set,x.set(u,l)),!l.has(o)){l.add(o);var v=zl.bind(null,s,u,o);u.then(v,v)}p.flags|=4096,p.lanes=t;break e}p=p.return}while(null!==p);l=Error((q(o.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Oo&&(Oo=2),l=so(l,o),p=i;do{switch(p.tag){case 3:s=l,p.flags|=4096,t&=-t,p.lanes|=t,hs(p,lo(0,s,t));break e;case 1:s=l;var w=p.type,k=p.stateNode;if(0==(64&p.flags)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===Xo||!Xo.has(k)))){p.flags|=4096,t&=-t,p.lanes|=t,hs(p,uo(p,s,t));break e}}p=p.return}while(null!==p)}$l(n)}catch(e){t=e,Ao===n&&null!==n&&(Ao=n=n.return);continue}break}}function Nl(){var e=To.current;return To.current=Ri,null===e?Ri:e}function Il(e,t){var n=Eo;Eo|=16;var r=Nl();for(Ro===e&&_o===t||wl(e,t);;)try{Sl();break}catch(t){kl(e,t)}if(ts(),Eo=n,To.current=r,null!==Ao)throw Error(i(261));return Ro=null,_o=0,Oo}function Sl(){for(;null!==Ao;)Tl(Ao)}function Cl(){for(;null!==Ao&&!Ta();)Tl(Ao)}function Tl(e){var t=Ho(e.alternate,e,Fo);e.memoizedProps=e.pendingProps,null===t?$l(e):Ao=t,$o.current=null}function $l(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=ro(n,t,Fo)))return void(Ao=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Fo)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ao(t)))return n.flags&=2047,void(Ao=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Ao=t);Ao=t=e}while(null!==t);0===Oo&&(Oo=5)}function El(e){var t=Ua();return Ha(99,Rl.bind(null,e,t)),null}function Rl(e,t){do{_l()}while(null!==Qo);if(0!=(48&Eo))throw Error(i(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,s=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var o=e.eventTimes,l=e.expirationTimes;0<s;){var u=31-Ut(s),c=1<<u;a[u]=0,o[u]=-1,l[u]=-1,s&=~c}if(null!==tl&&0==(24&r)&&tl.has(e)&&tl.delete(e),e===Ro&&(Ao=Ro=null,_o=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=Eo,Eo|=32,$o.current=null,Br=Kt,gr(o=mr())){if("selectionStart"in o)l={start:o.selectionStart,end:o.selectionEnd};else e:if(l=(l=o.ownerDocument)&&l.defaultView||window,(c=l.getSelection&&l.getSelection())&&0!==c.rangeCount){l=c.anchorNode,s=c.anchorOffset,u=c.focusNode,c=c.focusOffset;try{l.nodeType,u.nodeType}catch(e){l=null;break e}var h=0,p=-1,d=-1,f=0,m=0,g=o,y=null;t:for(;;){for(var b;g!==l||0!==s&&3!==g.nodeType||(p=h+s),g!==u||0!==c&&3!==g.nodeType||(d=h+c),3===g.nodeType&&(h+=g.nodeValue.length),null!==(b=g.firstChild);)y=g,g=b;for(;;){if(g===o)break t;if(y===l&&++f===s&&(p=h),y===u&&++m===c&&(d=h),null!==(b=g.nextSibling))break;y=(g=y).parentNode}g=b}l=-1===p||-1===d?null:{start:p,end:d}}else l=null;l=l||{start:0,end:0}}else l=null;Wr={focusedElem:o,selectionRange:l},Kt=!1,ol=null,ll=!1,jo=r;do{try{Al()}catch(e){if(null===jo)throw Error(i(330));Ll(jo,e),jo=jo.nextEffect}}while(null!==jo);ol=null,jo=r;do{try{for(o=e;null!==jo;){var x=jo.flags;if(16&x&&ye(jo.stateNode,""),128&x){var v=jo.alternate;if(null!==v){var w=v.ref;null!==w&&("function"==typeof w?w(null):w.current=null)}}switch(1038&x){case 2:xo(jo),jo.flags&=-3;break;case 6:xo(jo),jo.flags&=-3,No(jo.alternate,jo);break;case 1024:jo.flags&=-1025;break;case 1028:jo.flags&=-1025,No(jo.alternate,jo);break;case 4:No(jo.alternate,jo);break;case 8:ko(o,l=jo);var k=l.alternate;yo(l),null!==k&&yo(k)}jo=jo.nextEffect}}catch(e){if(null===jo)throw Error(i(330));Ll(jo,e),jo=jo.nextEffect}}while(null!==jo);if(w=Wr,v=mr(),x=w.focusedElem,o=w.selectionRange,v!==x&&x&&x.ownerDocument&&fr(x.ownerDocument.documentElement,x)){null!==o&&gr(x)&&(v=o.start,void 0===(w=o.end)&&(w=v),"selectionStart"in x?(x.selectionStart=v,x.selectionEnd=Math.min(w,x.value.length)):(w=(v=x.ownerDocument||document)&&v.defaultView||window).getSelection&&(w=w.getSelection(),l=x.textContent.length,k=Math.min(o.start,l),o=void 0===o.end?k:Math.min(o.end,l),!w.extend&&k>o&&(l=o,o=k,k=l),l=dr(x,k),s=dr(x,o),l&&s&&(1!==w.rangeCount||w.anchorNode!==l.node||w.anchorOffset!==l.offset||w.focusNode!==s.node||w.focusOffset!==s.offset)&&((v=v.createRange()).setStart(l.node,l.offset),w.removeAllRanges(),k>o?(w.addRange(v),w.extend(s.node,s.offset)):(v.setEnd(s.node,s.offset),w.addRange(v))))),v=[];for(w=x;w=w.parentNode;)1===w.nodeType&&v.push({element:w,left:w.scrollLeft,top:w.scrollTop});for("function"==typeof x.focus&&x.focus(),x=0;x<v.length;x++)(w=v[x]).element.scrollLeft=w.left,w.element.scrollTop=w.top}Kt=!!Br,Wr=Br=null,e.current=n,jo=r;do{try{for(x=e;null!==jo;){var N=jo.flags;if(36&N&&fo(x,jo.alternate,jo),128&N){v=void 0;var I=jo.ref;if(null!==I){var S=jo.stateNode;jo.tag,v=S,"function"==typeof I?I(v):I.current=v}}jo=jo.nextEffect}}catch(e){if(null===jo)throw Error(i(330));Ll(jo,e),jo=jo.nextEffect}}while(null!==jo);jo=null,La(),Eo=a}else e.current=n;if(Yo)Yo=!1,Qo=e,Zo=t;else for(jo=r;null!==jo;)t=jo.nextEffect,jo.nextEffect=null,8&jo.flags&&((N=jo).sibling=null,N.stateNode=null),jo=t;if(0===(r=e.pendingLanes)&&(Xo=null),1===r?e===rl?nl++:(nl=0,rl=e):nl=0,n=n.stateNode,Na&&"function"==typeof Na.onCommitFiberRoot)try{Na.onCommitFiberRoot(ka,n,void 0,64==(64&n.current.flags))}catch(e){}if(dl(e,Va()),qo)throw qo=!1,e=Ko,Ko=null,e;return 0!=(8&Eo)||qa(),null}function Al(){for(;null!==jo;){var e=jo.alternate;ll||null===ol||(0!=(8&jo.flags)?Je(jo,ol)&&(ll=!0):13===jo.tag&&So(e,jo)&&Je(jo,ol)&&(ll=!0));var t=jo.flags;0!=(256&t)&&po(e,jo),0==(512&t)||Yo||(Yo=!0,ja(97,(function(){return _l(),null}))),jo=jo.nextEffect}}function _l(){if(90!==Zo){var e=97<Zo?97:Zo;return Zo=90,Ha(e,Ol)}return!1}function Fl(e,t){Jo.push(t,e),Yo||(Yo=!0,ja(97,(function(){return _l(),null})))}function Dl(e,t){el.push(t,e),Yo||(Yo=!0,ja(97,(function(){return _l(),null})))}function Ol(){if(null===Qo)return!1;var e=Qo;if(Qo=null,0!=(48&Eo))throw Error(i(331));var t=Eo;Eo|=32;var n=el;el=[];for(var r=0;r<n.length;r+=2){var a=n[r],s=n[r+1],o=a.destroy;if(a.destroy=void 0,"function"==typeof o)try{o()}catch(e){if(null===s)throw Error(i(330));Ll(s,e)}}for(n=Jo,Jo=[],r=0;r<n.length;r+=2){a=n[r],s=n[r+1];try{var l=a.create;a.destroy=l()}catch(e){if(null===s)throw Error(i(330));Ll(s,e)}}for(l=e.current.firstEffect;null!==l;)e=l.nextEffect,l.nextEffect=null,8&l.flags&&(l.sibling=null,l.stateNode=null),l=e;return Eo=t,qa(),!0}function Ml(e,t,n){cs(e,t=lo(0,t=so(n,t),1)),t=ul(),null!==(e=pl(e,1))&&(Vt(e,1,t),dl(e,t))}function Ll(e,t){if(3===e.tag)Ml(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Ml(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Xo||!Xo.has(r))){var a=uo(n,e=so(t,e),1);if(cs(n,a),a=ul(),null!==(n=pl(n,1)))Vt(n,1,a),dl(n,a);else if("function"==typeof r.componentDidCatch&&(null===Xo||!Xo.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function zl(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ul(),e.pingedLanes|=e.suspendedLanes&n,Ro===e&&(_o&n)===n&&(4===Oo||3===Oo&&(62914560&_o)===_o&&500>Va()-Vo?wl(e,0):Bo|=n),dl(e,t)}function Pl(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Ua()?1:2:(0===sl&&(sl=Lo),0===(t=Bt(62914560&~sl))&&(t=4194304))),n=ul(),null!==(e=pl(e,t))&&(Vt(e,t,n),dl(e,n))}function Bl(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Wl(e,t,n,r){return new Bl(e,t,n,r)}function Vl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ul(e,t){var n=e.alternate;return null===n?((n=Wl(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Gl(e,t,n,r,a,s){var o=2;if(r=e,"function"==typeof e)Vl(e)&&(o=1);else if("string"==typeof e)o=5;else e:switch(e){case I:return Hl(n.children,a,s,t);case M:o=8,a|=16;break;case S:o=8,a|=1;break;case C:return(e=Wl(12,n,t,8|a)).elementType=C,e.type=C,e.lanes=s,e;case R:return(e=Wl(13,n,t,a)).type=R,e.elementType=R,e.lanes=s,e;case A:return(e=Wl(19,n,t,a)).elementType=A,e.lanes=s,e;case L:return jl(n,a,s,t);case z:return(e=Wl(24,n,t,a)).elementType=z,e.lanes=s,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case T:o=10;break e;case $:o=9;break e;case E:o=11;break e;case _:o=14;break e;case F:o=16,r=null;break e;case D:o=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Wl(o,n,t,a)).elementType=e,t.type=r,t.lanes=s,t}function Hl(e,t,n,r){return(e=Wl(7,e,r,t)).lanes=n,e}function jl(e,t,n,r){return(e=Wl(23,e,r,t)).elementType=L,e.lanes=n,e}function ql(e,t,n){return(e=Wl(6,e,null,t)).lanes=n,e}function Kl(e,t,n){return(t=Wl(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Xl(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Wt(0),this.expirationTimes=Wt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Wt(0),this.mutableSourceEagerHydrationData=null}function Yl(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:N,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Ql(e,t,n,r){var a=t.current,s=ul(),o=cl(a);e:if(n){t:{if(Xe(n=n._reactInternals)!==n||1!==n.tag)throw Error(i(170));var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(ga(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);throw Error(i(171))}if(1===n.tag){var u=n.type;if(ga(u)){n=xa(n,u,l);break e}}n=l}else n=ha;return null===t.context?t.context=n:t.pendingContext=n,(t=us(s,o)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),cs(a,t),hl(a,o,s),o}function Zl(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Jl(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function eu(e,t){Jl(e,t),(e=e.alternate)&&Jl(e,t)}function tu(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Xl(e,t,null!=n&&!0===n.hydrate),t=Wl(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,os(t),e[Jr]=n.current,Ar(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function nu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function ru(e,t,n,r,a){var s=n._reactRootContainer;if(s){var i=s._internalRoot;if("function"==typeof a){var o=a;a=function(){var e=Zl(i);o.call(e)}}Ql(t,i,e,a)}else{if(s=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new tu(e,0,t?{hydrate:!0}:void 0)}(n,r),i=s._internalRoot,"function"==typeof a){var l=a;a=function(){var e=Zl(i);l.call(e)}}bl((function(){Ql(t,i,e,a)}))}return Zl(i)}function au(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nu(t))throw Error(i(200));return Yl(e,t,null,n)}Ho=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||da.current)Oi=!0;else{if(0==(n&r)){switch(Oi=!1,t.tag){case 3:Hi(t),js();break;case 5:Ds(t);break;case 1:ga(t.type)&&va(t);break;case 4:_s(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;ca(Qa,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Yi(e,t,n):(ca(Ms,1&Ms.current),null!==(t=to(e,t,n))?t.sibling:null);ca(Ms,1&Ms.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return eo(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ca(Ms,Ms.current),r)break;return null;case 23:case 24:return t.lanes=0,Bi(e,t,n)}return to(e,t,n)}Oi=0!=(16384&e.flags)}else Oi=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=ma(t,pa.current),as(t,n),a=si(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ga(r)){var s=!0;va(t)}else s=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,os(t);var o=r.getDerivedStateFromProps;"function"==typeof o&&ms(t,r,o,e),a.updater=gs,t.stateNode=a,a._reactInternals=t,vs(t,r,e,n),t=Gi(null,t,r,!0,s,n)}else t.tag=0,Mi(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(s=a._init)(a._payload),t.type=a,s=t.tag=function(e){if("function"==typeof e)return Vl(e)?1:0;if(null!=e){if((e=e.$$typeof)===E)return 11;if(e===_)return 14}return 2}(a),e=Ya(a,e),s){case 0:t=Vi(null,t,a,e,n);break e;case 1:t=Ui(null,t,a,e,n);break e;case 11:t=Li(null,t,a,e,n);break e;case 14:t=zi(null,t,a,Ya(a.type,e),r,n);break e}throw Error(i(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Vi(e,t,r,a=t.elementType===r?a:Ya(r,a),n);case 1:return r=t.type,a=t.pendingProps,Ui(e,t,r,a=t.elementType===r?a:Ya(r,a),n);case 3:if(Hi(t),r=t.updateQueue,null===e||null===r)throw Error(i(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,ls(e,t),ps(t,r,null,n),(r=t.memoizedState.element)===a)js(),t=to(e,t,n);else{if((s=(a=t.stateNode).hydrate)&&(Ps=qr(t.stateNode.containerInfo.firstChild),zs=t,s=Bs=!0),s){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(s=e[a])._workInProgressVersionPrimary=e[a+1],qs.push(s);for(n=Cs(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Mi(e,t,r,n),js();t=t.child}return t;case 5:return Ds(t),null===e&&Us(t),r=t.type,a=t.pendingProps,s=null!==e?e.memoizedProps:null,o=a.children,Ur(r,a)?o=null:null!==s&&Ur(r,s)&&(t.flags|=16),Wi(e,t),Mi(e,t,o,n),t.child;case 6:return null===e&&Us(t),null;case 13:return Yi(e,t,n);case 4:return _s(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Ss(t,null,r,n):Mi(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Li(e,t,r,a=t.elementType===r?a:Ya(r,a),n);case 7:return Mi(e,t,t.pendingProps,n),t.child;case 8:case 12:return Mi(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,o=t.memoizedProps,s=a.value;var l=t.type._context;if(ca(Qa,l._currentValue),l._currentValue=s,null!==o)if(l=o.value,0==(s=ur(l,s)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(l,s):1073741823))){if(o.children===a.children&&!da.current){t=to(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var u=l.dependencies;if(null!==u){o=l.child;for(var c=u.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&s)){1===l.tag&&((c=us(-1,n&-n)).tag=2,cs(l,c)),l.lanes|=n,null!==(c=l.alternate)&&(c.lanes|=n),rs(l.return,n),u.lanes|=n;break}c=c.next}}else o=10===l.tag&&l.type===t.type?null:l.child;if(null!==o)o.return=l;else for(o=l;null!==o;){if(o===t){o=null;break}if(null!==(l=o.sibling)){l.return=o.return,o=l;break}o=o.return}l=o}Mi(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(s=t.pendingProps).children,as(t,n),r=r(a=ss(a,s.unstable_observedBits)),t.flags|=1,Mi(e,t,r,n),t.child;case 14:return s=Ya(a=t.type,t.pendingProps),zi(e,t,a,s=Ya(a.type,s),r,n);case 15:return Pi(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:Ya(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,ga(r)?(e=!0,va(t)):e=!1,as(t,n),bs(t,r,a),vs(t,r,a,n),Gi(null,t,r,!0,e,n);case 19:return eo(e,t,n);case 23:case 24:return Bi(e,t,n)}throw Error(i(156,t.tag))},tu.prototype.render=function(e){Ql(e,this._internalRoot,null,null)},tu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ql(null,e,null,(function(){t[Jr]=null}))},et=function(e){13===e.tag&&(hl(e,4,ul()),eu(e,4))},tt=function(e){13===e.tag&&(hl(e,67108864,ul()),eu(e,67108864))},nt=function(e){if(13===e.tag){var t=ul(),n=cl(e);hl(e,n,t),eu(e,n)}},rt=function(e,t){return t()},Ce=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=aa(r);if(!a)throw Error(i(90));Q(r),ne(r,a)}}}break;case"textarea":ue(e,n);break;case"select":null!=(t=n.value)&&ie(e,!!n.multiple,t,!1)}},_e=yl,Fe=function(e,t,n,r,a){var s=Eo;Eo|=4;try{return Ha(98,e.bind(null,t,n,r,a))}finally{0===(Eo=s)&&(Go(),qa())}},De=function(){0==(49&Eo)&&(function(){if(null!==tl){var e=tl;tl=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,dl(e,Va())}))}qa()}(),_l())},Oe=function(e,t){var n=Eo;Eo|=2;try{return e(t)}finally{0===(Eo=n)&&(Go(),qa())}};var su={Events:[na,ra,aa,Re,Ae,_l,{current:!1}]},iu={findFiberByHostInstance:ta,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},ou={bundleType:iu.bundleType,version:iu.version,rendererPackageName:iu.rendererPackageName,rendererConfig:iu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ze(e))?null:e.stateNode},findFiberByHostInstance:iu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var lu=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!lu.isDisabled&&lu.supportsFiber)try{ka=lu.inject(ou),Na=lu}catch(me){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=su,t.createPortal=au,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return null===(e=Ze(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Eo;if(0!=(48&n))return e(t);Eo|=1;try{if(e)return Ha(99,e.bind(null,t))}finally{Eo=n,qa()}},t.hydrate=function(e,t,n){if(!nu(t))throw Error(i(200));return ru(null,e,t,!0,n)},t.render=function(e,t,n){if(!nu(t))throw Error(i(200));return ru(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!nu(e))throw Error(i(40));return!!e._reactRootContainer&&(bl((function(){ru(null,null,e,!1,(function(){e._reactRootContainer=null,e[Jr]=null}))})),!0)},t.unstable_batchedUpdates=yl,t.unstable_createPortal=function(e,t){return au(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!nu(n))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return ru(e,t,n,!1,r)},t.version="17.0.2"},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},408:(e,t,n)=>{"use strict";var r=n(418),a=60103,s=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,o=60110,l=60112;t.Suspense=60113;var u=60115,c=60116;if("function"==typeof Symbol&&Symbol.for){var h=Symbol.for;a=h("react.element"),s=h("react.portal"),t.Fragment=h("react.fragment"),t.StrictMode=h("react.strict_mode"),t.Profiler=h("react.profiler"),i=h("react.provider"),o=h("react.context"),l=h("react.forward_ref"),t.Suspense=h("react.suspense"),u=h("react.memo"),c=h("react.lazy")}var p="function"==typeof Symbol&&Symbol.iterator;function d(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||f}function y(){}function b(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||f}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(d(85));this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=g.prototype;var x=b.prototype=new y;x.constructor=b,r(x,g.prototype),x.isPureReactComponent=!0;var v={current:null},w=Object.prototype.hasOwnProperty,k={key:!0,ref:!0,__self:!0,__source:!0};function N(e,t,n){var r,s={},i=null,o=null;if(null!=t)for(r in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(i=""+t.key),t)w.call(t,r)&&!k.hasOwnProperty(r)&&(s[r]=t[r]);var l=arguments.length-2;if(1===l)s.children=n;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];s.children=u}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===s[r]&&(s[r]=l[r]);return{$$typeof:a,type:e,key:i,ref:o,props:s,_owner:v.current}}function I(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var S=/\/+/g;function C(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function T(e,t,n,r,i){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var l=!1;if(null===e)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case a:case s:l=!0}}if(l)return i=i(l=e),e=""===r?"."+C(l,0):r,Array.isArray(i)?(n="",null!=e&&(n=e.replace(S,"$&/")+"/"),T(i,t,n,"",(function(e){return e}))):null!=i&&(I(i)&&(i=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||l&&l.key===i.key?"":(""+i.key).replace(S,"$&/")+"/")+e)),t.push(i)),1;if(l=0,r=""===r?".":r+":",Array.isArray(e))for(var u=0;u<e.length;u++){var c=r+C(o=e[u],u);l+=T(o,t,n,c,i)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),u=0;!(o=e.next()).done;)l+=T(o=o.value,t,n,c=r+C(o,u++),i);else if("object"===o)throw t=""+e,Error(d(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return l}function $(e,t,n){if(null==e)return e;var r=[],a=0;return T(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function E(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var R={current:null};function A(){var e=R.current;if(null===e)throw Error(d(321));return e}var _={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:v,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:$,forEach:function(e,t,n){$(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return $(e,(function(){t++})),t},toArray:function(e){return $(e,(function(e){return e}))||[]},only:function(e){if(!I(e))throw Error(d(143));return e}},t.Component=g,t.PureComponent=b,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=_,t.cloneElement=function(e,t,n){if(null==e)throw Error(d(267,e));var s=r({},e.props),i=e.key,o=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,l=v.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)w.call(t,c)&&!k.hasOwnProperty(c)&&(s[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)s.children=n;else if(1<c){u=Array(c);for(var h=0;h<c;h++)u[h]=arguments[h+2];s.children=u}return{$$typeof:a,type:e.type,key:i,ref:o,props:s,_owner:l}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:o,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=N,t.createFactory=function(e){var t=N.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=I,t.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:E}},t.memo=function(e,t){return{$$typeof:u,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return A().useCallback(e,t)},t.useContext=function(e,t){return A().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return A().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return A().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return A().useLayoutEffect(e,t)},t.useMemo=function(e,t){return A().useMemo(e,t)},t.useReducer=function(e,t,n){return A().useReducer(e,t,n)},t.useRef=function(e){return A().useRef(e)},t.useState=function(e){return A().useState(e)},t.version="17.0.2"},294:(e,t,n)=>{"use strict";e.exports=n(408)},666:e=>{var t=function(e){"use strict";var t,n=Object.prototype,r=n.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},s=a.iterator||"@@iterator",i=a.asyncIterator||"@@asyncIterator",o=a.toStringTag||"@@toStringTag";function l(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(e){l=function(e,t,n){return e[t]=n}}function u(e,t,n,r){var a=t&&t.prototype instanceof g?t:g,s=Object.create(a.prototype),i=new $(r||[]);return s._invoke=function(e,t,n){var r=h;return function(a,s){if(r===d)throw new Error("Generator is already running");if(r===f){if("throw"===a)throw s;return R()}for(n.method=a,n.arg=s;;){var i=n.delegate;if(i){var o=S(i,n);if(o){if(o===m)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===h)throw r=f,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=d;var l=c(e,t,n);if("normal"===l.type){if(r=n.done?f:p,l.arg===m)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(r=f,n.method="throw",n.arg=l.arg)}}}(e,n,i),s}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var h="suspendedStart",p="suspendedYield",d="executing",f="completed",m={};function g(){}function y(){}function b(){}var x={};l(x,s,(function(){return this}));var v=Object.getPrototypeOf,w=v&&v(v(E([])));w&&w!==n&&r.call(w,s)&&(x=w);var k=b.prototype=g.prototype=Object.create(x);function N(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function I(e,t){function n(a,s,i,o){var l=c(e[a],e,s);if("throw"!==l.type){var u=l.arg,h=u.value;return h&&"object"==typeof h&&r.call(h,"__await")?t.resolve(h.__await).then((function(e){n("next",e,i,o)}),(function(e){n("throw",e,i,o)})):t.resolve(h).then((function(e){u.value=e,i(u)}),(function(e){return n("throw",e,i,o)}))}o(l.arg)}var a;this._invoke=function(e,r){function s(){return new t((function(t,a){n(e,r,t,a)}))}return a=a?a.then(s,s):s()}}function S(e,n){var r=e.iterator[n.method];if(r===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=t,S(e,n),"throw"===n.method))return m;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var a=c(r,e.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,m;var s=a.arg;return s?s.done?(n[e.resultName]=s.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,m):s:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function C(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function $(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(C,this),this.reset(!0)}function E(e){if(e){var n=e[s];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,i=function n(){for(;++a<e.length;)if(r.call(e,a))return n.value=e[a],n.done=!1,n;return n.value=t,n.done=!0,n};return i.next=i}}return{next:R}}function R(){return{value:t,done:!0}}return y.prototype=b,l(k,"constructor",b),l(b,"constructor",y),y.displayName=l(b,o,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,l(e,o,"GeneratorFunction")),e.prototype=Object.create(k),e},e.awrap=function(e){return{__await:e}},N(I.prototype),l(I.prototype,i,(function(){return this})),e.AsyncIterator=I,e.async=function(t,n,r,a,s){void 0===s&&(s=Promise);var i=new I(u(t,n,r,a),s);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},N(k),l(k,o,"Generator"),l(k,s,(function(){return this})),l(k,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=E,$.prototype={constructor:$,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(T),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function a(r,a){return o.type="throw",o.arg=e,n.next=r,a&&(n.method="next",n.arg=t),!!a}for(var s=this.tryEntries.length-1;s>=0;--s){var i=this.tryEntries[s],o=i.completion;if("root"===i.tryLoc)return a("end");if(i.tryLoc<=this.prev){var l=r.call(i,"catchLoc"),u=r.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return a(i.catchLoc,!0);if(this.prev<i.finallyLoc)return a(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return a(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return a(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&r.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var s=a;break}}s&&("break"===e||"continue"===e)&&s.tryLoc<=t&&t<=s.finallyLoc&&(s=null);var i=s?s.completion:{};return i.type=e,i.arg=t,s?(this.method="next",this.next=s.finallyLoc,m):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),T(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;T(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:E(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),m}},e}(e.exports);try{regeneratorRuntime=t}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=t:Function("r","regeneratorRuntime = r")(t)}},53:(e,t)=>{"use strict";var n,r,a,s;if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var o=Date,l=o.now();t.unstable_now=function(){return o.now()-l}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,h=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(h,0),e}};n=function(e){null!==u?setTimeout(n,0,e):(u=e,setTimeout(h,0))},r=function(e,t){c=setTimeout(e,t)},a=function(){clearTimeout(c)},t.unstable_shouldYield=function(){return!1},s=t.unstable_forceFrameRate=function(){}}else{var p=window.setTimeout,d=window.clearTimeout;if("undefined"!=typeof console){var f=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof f&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,g=null,y=-1,b=5,x=0;t.unstable_shouldYield=function(){return t.unstable_now()>=x},s=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):b=0<e?Math.floor(1e3/e):5};var v=new MessageChannel,w=v.port2;v.port1.onmessage=function(){if(null!==g){var e=t.unstable_now();x=e+b;try{g(!0,e)?w.postMessage(null):(m=!1,g=null)}catch(e){throw w.postMessage(null),e}}else m=!1},n=function(e){g=e,m||(m=!0,w.postMessage(null))},r=function(e,n){y=p((function(){e(t.unstable_now())}),n)},a=function(){d(y),y=-1}}function k(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<S(a,t)))break e;e[r]=t,e[n]=a,n=r}}function N(e){return void 0===(e=e[0])?null:e}function I(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var s=2*(r+1)-1,i=e[s],o=s+1,l=e[o];if(void 0!==i&&0>S(i,n))void 0!==l&&0>S(l,i)?(e[r]=l,e[o]=n,r=o):(e[r]=i,e[s]=n,r=s);else{if(!(void 0!==l&&0>S(l,n)))break e;e[r]=l,e[o]=n,r=o}}}return t}return null}function S(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var C=[],T=[],$=1,E=null,R=3,A=!1,_=!1,F=!1;function D(e){for(var t=N(T);null!==t;){if(null===t.callback)I(T);else{if(!(t.startTime<=e))break;I(T),t.sortIndex=t.expirationTime,k(C,t)}t=N(T)}}function O(e){if(F=!1,D(e),!_)if(null!==N(C))_=!0,n(M);else{var t=N(T);null!==t&&r(O,t.startTime-e)}}function M(e,n){_=!1,F&&(F=!1,a()),A=!0;var s=R;try{for(D(n),E=N(C);null!==E&&(!(E.expirationTime>n)||e&&!t.unstable_shouldYield());){var i=E.callback;if("function"==typeof i){E.callback=null,R=E.priorityLevel;var o=i(E.expirationTime<=n);n=t.unstable_now(),"function"==typeof o?E.callback=o:E===N(C)&&I(C),D(n)}else I(C);E=N(C)}if(null!==E)var l=!0;else{var u=N(T);null!==u&&r(O,u.startTime-n),l=!1}return l}finally{E=null,R=s,A=!1}}var L=s;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){_||A||(_=!0,n(M))},t.unstable_getCurrentPriorityLevel=function(){return R},t.unstable_getFirstCallbackNode=function(){return N(C)},t.unstable_next=function(e){switch(R){case 1:case 2:case 3:var t=3;break;default:t=R}var n=R;R=t;try{return e()}finally{R=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=L,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=R;R=e;try{return t()}finally{R=n}},t.unstable_scheduleCallback=function(e,s,i){var o=t.unstable_now();switch(i="object"==typeof i&&null!==i&&"number"==typeof(i=i.delay)&&0<i?o+i:o,e){case 1:var l=-1;break;case 2:l=250;break;case 5:l=1073741823;break;case 4:l=1e4;break;default:l=5e3}return e={id:$++,callback:s,priorityLevel:e,startTime:i,expirationTime:l=i+l,sortIndex:-1},i>o?(e.sortIndex=i,k(T,e),null===N(C)&&e===N(T)&&(F?a():F=!0,r(O,i-o))):(e.sortIndex=l,k(C,e),_||A||(_=!0,n(M))),e},t.unstable_wrapCallback=function(e){var t=R;return function(){var n=R;R=t;try{return e.apply(this,arguments)}finally{R=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},377:(e,t,n)=>{var r=n(832),a=n(652),s=n(801),i=n(30),o=n(618),l=n(49),u=n(971);u.alea=r,u.xor128=a,u.xorwow=s,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},832:function(e,t,n){var r;!function(e,a,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},971:(e,t,n)=>{var r;!function(a,s){var i,o=this,l=256,u=s.pow(l,6),c=s.pow(2,52),h=2*c,p=255;function d(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(a)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(s.random=e,t):e})(x,p,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<l;)i[a]=a++;for(a=0;a<l;a++)i[a]=i[s=p&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=p&a+1],n=n*l+i[p&(i[a]=i[s=p&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=d,y(s.random(),a),e.exports){e.exports=d;try{i=n(42)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)},410:()=>{},628:()=>{},601:()=>{},792:()=>{},977:()=>{},42:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/",(()=>{"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:()=>ni,computeFlatOffset:()=>mi,computeOutShape:()=>ai,getNormalizedAxes:()=>li,isSliceContinous:()=>fi,maskToAxes:()=>ri,parseSliceParams:()=>gi,sliceInfo:()=>yi,startForAxis:()=>pi,startIndicesWithElidedDims:()=>ui,stopForAxis:()=>di,stopIndicesWithElidedDims:()=>ci,stridesForAxis:()=>hi,stridesWithElidedDims:()=>si});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>eh,computeOutShape:()=>Jc,segOpComputeOptimalWindowSize:()=>Zc});var r={};n.r(r),n.d(r,{ERF_A1:()=>Ac,ERF_A2:()=>_c,ERF_A3:()=>Fc,ERF_A4:()=>Dc,ERF_A5:()=>Oc,ERF_P:()=>Rc,PARALLELIZE_THRESHOLD:()=>gc,SELU_SCALE:()=>Ec,SELU_SCALEALPHA:()=>$c,applyActivation:()=>Zl,assertAndGetBroadcastShape:()=>wo,assertAxesAreInnerMostDims:()=>Qo,assertParamsConsistent:()=>fc,assignToTypedArray:()=>Wc,axesAreInnerMostDims:()=>qo,calculateShapes:()=>Tc,checkEinsumDimSizes:()=>qc,combineLocations:()=>Ko,complexWithEvenIndex:()=>zc,complexWithOddIndex:()=>Pc,computeConv2DInfo:()=>zi,computeConv3DInfo:()=>Pi,computeDefaultPad:()=>Bi,computeDilation2DInfo:()=>Oi,computeOptimalWindowSize:()=>yc,computeOutAndReduceShapes:()=>Xo,computeOutShape:()=>mc,computePool2DInfo:()=>Mi,computePool3DInfo:()=>Li,convertConv2DDataFormat:()=>qi,decodeEinsumEquation:()=>Hc,eitherStridesOrDilationsAreOne:()=>ji,expandShapeToKeepDim:()=>Yo,exponent:()=>Uc,exponents:()=>Vc,fromStringArrayToUint8:()=>nh,fromUint8ToStringArray:()=>th,getAxesPermutation:()=>Zo,getBroadcastDims:()=>xo,getComplexWithIndex:()=>Bc,getEinsumComputePath:()=>Kc,getEinsumPermutation:()=>jc,getFusedBiasGradient:()=>Ql,getFusedDyActivation:()=>Yl,getImageCenter:()=>bc,getInnerMostAxes:()=>el,getPermuted:()=>vc,getReductionAxes:()=>vo,getReshaped:()=>xc,getReshapedPermuted:()=>wc,getSliceBeginCoords:()=>kc,getSliceSize:()=>Nc,getUndoAxesPermutation:()=>Jo,isIdentityPermutation:()=>Xc,log:()=>Oe,mergeRealAndImagArrays:()=>Mc,prepareAndValidate:()=>Ic,prepareSplitSize:()=>Qc,segment_util:()=>t,shouldFuse:()=>Jl,slice_util:()=>e,splitRealAndImagArrays:()=>Lc,tupleValuesAreOne:()=>Hi,upcastType:()=>Pa,validateInput:()=>Cc,validateUpdateShape:()=>Sc,warn:()=>De});var a={};n.r(a),n.d(a,{json:()=>px});var s={};n.r(s),n.d(s,{json:()=>dx});var i={};n.r(i),n.d(i,{json:()=>fx});var o={};n.r(o),n.d(o,{json:()=>mx});var l={};n.r(l),n.d(l,{json:()=>gx});var u={};n.r(u),n.d(u,{json:()=>yx});var c={};n.r(c),n.d(c,{json:()=>bx});var h={};n.r(h),n.d(h,{json:()=>xx});var p={};n.r(p),n.d(p,{json:()=>vx});var d={};n.r(d),n.d(d,{json:()=>wx});var f={};n.r(f),n.d(f,{json:()=>kx});var m={};n.r(m),n.d(m,{json:()=>Nx});var g={};n.r(g),n.d(g,{json:()=>Ix});var y={};n.r(y),n.d(y,{json:()=>Sx});var b={};n.r(b),n.d(b,{json:()=>Cx});var x={};n.r(x),n.d(x,{json:()=>Tx});var v={};n.r(v),n.d(v,{json:()=>$x});var w={};n.r(w),n.d(w,{json:()=>Ex});var k={};n.r(k),n.d(k,{json:()=>Rx});var N={};n.r(N),n.d(N,{addImpl:()=>Ow,bincountImpl:()=>Tk,bincountReduceImpl:()=>$k,ceilImpl:()=>Ak,concatImpl:()=>Lk,equalImpl:()=>xN,expImpl:()=>RN,expm1Impl:()=>ON,floorImpl:()=>ZN,gatherNdImpl:()=>iI,gatherV2Impl:()=>lI,greaterEqualImpl:()=>dI,greaterImpl:()=>cI,lessEqualImpl:()=>CI,lessImpl:()=>NI,linSpaceImpl:()=>EI,logImpl:()=>AI,maxImpl:()=>jI,maximumImpl:()=>XI,minimumImpl:()=>sS,multiplyImpl:()=>hN,negImpl:()=>mS,notEqualImpl:()=>NS,prodImpl:()=>MS,rangeImpl:()=>zS,rsqrtImpl:()=>YS,sigmoidImpl:()=>kw,simpleAbsImpl:()=>Gw,sliceImpl:()=>Nk,sparseFillEmptyRowsImpl:()=>gC,sparseReshapeImpl:()=>bC,sparseSegmentReductionImpl:()=>vC,sqrtImpl:()=>SC,squaredDifferenceImpl:()=>EC,stridedSliceImpl:()=>DC,stringNGramsImpl:()=>LC,stringSplitImpl:()=>BC,stringToHashBucketFastImpl:()=>VC,subImpl:()=>WN,tileImpl:()=>qC,topKImpl:()=>YC,transposeImpl:()=>Qw,uniqueImpl:()=>nT});var I=n(294),S=n(935);function C(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function $(e,t,n){return t&&T(e.prototype,t),n&&T(e,n),e}function E(e,t){return E=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},E(e,t)}function R(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&E(e,t)}function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function _(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function F(e,t){if(t&&("object"===A(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return _(e)}function D(e){return D=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},D(e)}function O(e,t,n,r,a,s,i){try{var o=e[s](i),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(r,a)}function M(e){return function(){var t=this,n=arguments;return new Promise((function(r,a){var s=e.apply(t,n);function i(e){O(s,r,a,i,o,"next",e)}function o(e){O(s,r,a,i,o,"throw",e)}i(void 0)}))}}function L(e,t,n){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=D(e)););return e}(e,t);if(r){var a=Object.getOwnPropertyDescriptor(r,t);return a.get?a.get.call(n):a.value}},L(e,t,n||e)}var z=n(757),P=n.n(z);function B(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const W=n.p+"6c30d3d33e75090f2d8092efa5adb0b3.png";function V(e){return U.apply(this,arguments)}function U(){return(U=M(P().mark((function e(t){return P().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",new Promise((function(e){var n=new Image;n.onload=function(){e(n)},n.src=t})));case 1:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var G=function(e){R(s,e);var t,n,r,a=(n=s,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=D(n);if(r){var a=D(this).constructor;e=Reflect.construct(t,arguments,a)}else e=t.apply(this,arguments);return F(this,e)});function s(e){var t;return C(this,s),(t=a.call(this,e)).boardCanvasRef=I.createRef(),t}return $(s,[{key:"componentDidMount",value:(t=M(P().mark((function e(){return P().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.boardCanvas=this.boardCanvasRef.current,this.boardContext=this.boardCanvas.getContext("2d"),e.t0=this.boardContext,e.next=5,V(W);case 5:e.t1=e.sent,e.t0.drawImage.call(e.t0,e.t1,0,0);case 7:case"end":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})},{key:"render",value:function(){return I.createElement("div",null,I.createElement("canvas",{width:900,height:900,ref:this.boardCanvasRef}))}}]),s}(I.Component);var H=[[1,0],[1,1],[0,1],[-1,1],[-1,0],[-1,-1],[0,-1],[1,-1]];function j(e,t,n){for(var r=!0,a=0,s=1;s<5;a++,s++)r&&(r=e[t[1]+n[1]*a][t[0]+n[0]*a]===e[t[1]+n[1]*s][t[0]+n[0]*s]);return r}var q=function(e){R(a,e);var t,n,r=(t=a,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=D(t);if(n){var a=D(this).constructor;e=Reflect.construct(r,arguments,a)}else e=r.apply(this,arguments);return F(this,e)});function a(){var e;C(this,a);for(var t=arguments.length,n=new Array(t),s=0;s<t;s++)n[s]=arguments[s];return B(_(e=r.call.apply(r,[this].concat(n))),"boardState",Array(20).fill(0).map((function(){return Array(20).fill(0)}))),e}return $(a,[{key:"checkEnd",value:function(){return e=this.boardState,t=!1,H.forEach((function(n){for(var r=0;r<20;r++)for(var a=0;a<20;a++)if(0!==e[r][a]){var s=[a,r].map((function(e,t){return e+4*n[t]}));if(s.map((function(e){return e<20&&e>=0})).reduce((function(e,t){return e&&t}))&&(console.log(s),j(e,[a,r],n)))return void(t=!0)}})),t;var e,t}},{key:"clearBoard",value:function(){for(var e=0;e<20;e++)for(var t=0;t<20;t++)this.boardState[e][t]=0}}]),a}(function(e){R(a,e);var t,n,r=(t=a,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=D(t);if(n){var a=D(this).constructor;e=Reflect.construct(r,arguments,a)}else e=r.apply(this,arguments);return F(this,e)});function a(){var e;C(this,a);for(var t=arguments.length,n=new Array(t),s=0;s<t;s++)n[s]=arguments[s];return B(_(e=r.call.apply(r,[this].concat(n))),"BOARD_START_POS",1),B(_(e),"BOARD_SPACE",40),B(_(e),"STONE_RADIUS",18),e}return $(a,[{key:"drawBlackStone",value:function(e){this.boardContext.beginPath(),this.boardContext.ellipse(e.x*this.BOARD_SPACE+this.BOARD_START_POS,e.y*this.BOARD_SPACE+this.BOARD_START_POS,this.STONE_RADIUS,this.STONE_RADIUS,0,0,2*Math.PI),this.boardContext.fillStyle="black",this.boardContext.fill(),this.boardContext.closePath()}},{key:"drawWhiteStone",value:function(e){this.boardContext.beginPath(),this.boardContext.ellipse(e.x*this.BOARD_SPACE+this.BOARD_START_POS,e.y*this.BOARD_SPACE+this.BOARD_START_POS,this.STONE_RADIUS,this.STONE_RADIUS,0,0,2*Math.PI),this.boardContext.fillStyle="white",this.boardContext.fill(),this.boardContext.closePath()}},{key:"convertPosToCord",value:function(e){return{x:Math.floor((e.x-this.BOARD_START_POS)/this.BOARD_SPACE),y:Math.floor((e.y-this.BOARD_START_POS)/this.BOARD_SPACE)}}}]),a}(G));class K{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class X{refCount(e){return Y("refCount")}incRef(e){return Y("incRef")}timerAvailable(){return!0}time(e){return Y("time")}read(e){return Y("read")}readSync(e){return Y("readSync")}numDataIds(){return Y("numDataIds")}disposeData(e,t){return Y("disposeData")}write(e,t,n){return Y("write")}move(e,t,n,r,a){return Y("move")}memory(){return Y("memory")}floatPrecision(){return Y("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Y("dispose")}}function Y(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Q(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,ee(e,t,n)}function Z(e,t,n){return Math.max(e,Math.min(t,n))}function J(e){return e%2==0?e:e+1}function ee(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function te(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ne(e,t,n=""){te(ie(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function re(e){te(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ae(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||ye(e)&&!n)for(let r=0;r<e.length;++r)ae(e[r],t,n);else t.push(e);return t}function se(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ie(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function oe(e){return e%1==0}function le(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ue(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ce(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function he(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function pe(e,t){const n=t.length;return te((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),te(e.every((e=>oe(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function de(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:pe(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function fe(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function me(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ge(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function ye(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function be(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function xe(e){return"string"==typeof e||e instanceof String}function ve(e){return"number"==typeof e}function we(e){return Array.isArray(e)?we(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":ve(e)?"float32":xe(e)?"string":"boolean"==typeof e?"bool":"float32"}function ke(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ne(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Ie(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Se(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=Se(e+t*o,i,n,r)}return a}function Ce(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Se(0,e,t,n)}function Te(e,t){const n=$e(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function $e(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Ee(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Ce(e,new Float32Array(n));if("int32"===t)return Ce(e,new Int32Array(n));if("bool"===t)return Ce(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Re(e){e.forEach((t=>{te(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Ae(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function _e(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Fe(e){return e&&e.then&&"function"==typeof e.then}function De(...e){ze().getBool("IS_TEST")||ze().getBool("PROD")||console.warn(...e)}function Oe(...e){ze().getBool("IS_TEST")||ze().getBool("PROD")||console.log(...e)}class Me{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Le,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&De(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];De(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Fe(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function Le(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function ze(){return Be}let Pe,Be=null;function We(){if(null==Pe){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Pe=e}return Pe}function Ve(e,t){const n=function(){const e=We();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Ue="Abs",Ge="Acos",He="Acosh",je="Add",qe="AddN",Ke="All",Xe="Any",Ye="ArgMax",Qe="ArgMin",Ze="Asin",Je="Asinh",et="Atan",tt="Atanh",nt="Atan2",rt="AvgPool",at="AvgPoolGrad",st="AvgPool3D",it="AvgPool3DGrad",ot="BatchMatMul",lt="BatchToSpaceND",ut="Bincount",ct="BroadcastArgs",ht="Cast",pt="Ceil",dt="ClipByValue",ft="Complex",mt="ComplexAbs",gt="Concat",yt="Conv2D",bt="Conv2DBackpropFilter",xt="Conv2DBackpropInput",vt="Conv3D",wt="Conv3DBackpropFilterV2",kt="Conv3DBackpropInputV2",Nt="Cos",It="Cosh",St="Cumsum",Ct="CropAndResize",Tt="DenseBincount",$t="DepthToSpace",Et="DepthwiseConv2dNative",Rt="DepthwiseConv2dNativeBackpropFilter",At="DepthwiseConv2dNativeBackpropInput",_t="Diag",Ft="Dilation2D",Dt="Dilation2DBackpropInput",Ot="Dilation2DBackpropFilter",Mt="RealDiv",Lt="Einsum",zt="Elu",Pt="EluGrad",Bt="Erf",Wt="Equal",Vt="Exp",Ut="ExpandDims",Gt="Expm1",Ht="FFT",jt="Fill",qt="FlipLeftRight",Kt="Floor",Xt="FloorDiv",Yt="FusedBatchNorm",Qt="GatherV2",Zt="GatherNd",Jt="Greater",en="GreaterEqual",tn="Identity",nn="IFFT",rn="Imag",an="IsFinite",sn="IsInf",on="IsNan",ln="LeakyRelu",un="Less",cn="LessEqual",hn="LinSpace",pn="Log",dn="Log1p",fn="LogicalAnd",mn="LogicalNot",gn="LogicalOr",yn="LRN",bn="LRNGrad",xn="Max",vn="Maximum",wn="MaxPool",kn="MaxPoolGrad",Nn="MaxPool3D",In="MaxPool3DGrad",Sn="MaxPoolWithArgmax",Cn="Mean",Tn="Min",$n="Minimum",En="MirrorPad",Rn="Mod",An="Multinomial",_n="Multiply",Fn="Neg",Dn="NotEqual",On="NonMaxSuppressionV3",Mn="NonMaxSuppressionV4",Ln="NonMaxSuppressionV5",zn="OnesLike",Pn="OneHot",Bn="Pack",Wn="PadV2",Vn="Pow",Un="Prelu",Gn="Prod",Hn="Range",jn="Real",qn="Reciprocal",Kn="Relu",Xn="Reshape",Yn="ResizeNearestNeighbor",Qn="ResizeNearestNeighborGrad",Zn="ResizeBilinear",Jn="ResizeBilinearGrad",er="Relu6",tr="Reverse",nr="Round",rr="Rsqrt",ar="ScatterNd",sr="Select",ir="Selu",or="Slice",lr="Sin",ur="Sinh",cr="Sign",hr="Sigmoid",pr="Softplus",dr="Sqrt",fr="Sum",mr="SpaceToBatchND",gr="SplitV",yr="Softmax",br="SparseFillEmptyRows",xr="SparseReshape",vr="SparseSegmentMean",wr="SparseSegmentSum",kr="SparseToDense",Nr="SquaredDifference",Ir="Square",Sr="StridedSlice",Cr="StringNGrams",Tr="StringSplit",$r="StringToHashBucketFast",Er="Sub",Rr="Tan",Ar="Tanh",_r="Tile",Fr="TopK",Dr="Transform",Or="Transpose",Mr="Unique",Lr="Unpack",zr="UnsortedSegmentSum",Pr="ZerosLike",Br="Step",Wr="RotateWithOffset",Vr="_FusedMatMul",Ur="FusedConv2D",Gr="FusedDepthwiseConv2D",Hr=Ve("kernelRegistry",(()=>new Map)),jr=Ve("gradRegistry",(()=>new Map));function qr(e,t){const n=Zr(e,t);return Hr.get(n)}function Kr(e){return jr.get(e)}function Xr(e){const t=Hr.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function Yr(e){const{kernelName:t,backendName:n}=e,r=Zr(t,n);Hr.has(r)&&De(`The kernel '${t}' for backend '${n}' is already registered`),Hr.set(r,e)}function Qr(e){const{kernelName:t}=e;jr.has(t)&&ze().getBool("DEBUG")&&De(`Overriding the gradient for '${t}'`),jr.set(t,e)}function Zr(e,t){return`${t}_${e}`}var Jr=n(720);const ea=n.n(Jr)()||Jr;function ta(e){return ea.fromString(e,!0,16)}const na=ta("c3a5c85c97cb3127"),ra=ta("b492b66fbe98f273"),aa=ta("9ae16a3b2f90404f");function sa(e){return e.xor(e.shru(47))}function ia(e,t,n){const r=e.slice(t,t+n);return ea.fromBytes(Array.from(r),!0,!0)}function oa(e,t){return ia(e,t,8)}function la(e,t){return ia(e,t,4)}function ua(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function ca(e,t,n=ta("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function ha(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=ua(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(ua(a,44)),[a.add(r),s.add(i)]}(oa(e,t),oa(e,t+8),oa(e,t+16),oa(e,t+24),n,r)}function pa(e,t=e.length){const n=ea.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=aa.add(2*t),r=oa(e,0).add(aa),a=oa(e,t-8);return ca(ua(a,37).mul(n).add(r),ua(r,25).add(a).mul(n),n)}if(t>=4){const n=aa.add(2*t);return ca(la(e,0).shl(3).add(t),la(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return sa(aa.mul(n).xor(na.mul(r))).mul(aa)}return aa}(e,t):function(e,t=e.length){const n=aa.add(2*t),r=oa(e,0).mul(ra),a=oa(e,8),s=oa(e,t-8).mul(n),i=oa(e,t-16).mul(aa);return ca(ua(r.add(a),43).add(ua(s,30)).add(i),r.add(ua(a.add(aa),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=aa.add(2*t),r=oa(e,0).mul(aa),a=oa(e,8),s=oa(e,t-8).mul(n),i=oa(e,t-16).mul(aa),o=ua(r.add(a),43).add(ua(s,30)).add(i),l=ca(o,r.add(ua(a.add(aa),18)).add(s),n),u=oa(e,16).mul(n),c=oa(e,24),h=o.add(oa(e,t-32)).mul(n),p=l.add(oa(e,t-24)).mul(n);return ca(ua(u.add(c),43).add(ua(h,30)).add(p),u.add(ua(c.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(ra).add(113),s=sa(a.mul(aa).add(113)).mul(aa),i=[ea.UZERO,ea.UZERO],o=[ea.UZERO,ea.UZERO];r=r.mul(aa).add(oa(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=ua(r.add(a).add(i[0]).add(oa(e,l+8)),37).mul(ra),a=ua(a.add(i[1]).add(oa(e,l+48)),42).mul(ra),r=r.xor(o[1]),a=a.add(i[0]).add(oa(e,l+40)),s=ua(s.add(o[0]),33).mul(ra),i=ha(e,l,i[1].mul(ra),r.add(o[0])),o=ha(e,l+32,s.add(o[1]),a.add(oa(e,l+16))),[s,r]=[r,s],l+=64}while(l!==u);const h=ra.add(s.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=ua(r.add(a).add(i[0]).add(oa(e,l+8)),37).mul(h),a=ua(a.add(i[1]).add(oa(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(oa(e,l+40))),s=ua(s.add(o[0]),33).mul(h),i=ha(e,l,i[1].mul(h),r.add(o[0])),o=ha(e,l+32,s.add(o[1]),a.add(oa(e,l+16))),[s,r]=[r,s],ca(ca(i[0],o[0],h).add(sa(a).mul(na)).add(s),ca(i[1],o[1],h).add(r),h)}function da(e,t){return"string"===t?ga(e):fa([e],t)}function fa(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ae(e)),ze().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function ma(){return ze().platform.now()}function ga(e,t="utf-8"){return t=t||"utf-8",ze().platform.encode(e,t)}function ya(e,t="utf-8"){return t=t||"utf-8",ze().platform.decode(e,t)}class ba{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new va)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=ma();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:ma()-i})}if(ze().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{xa(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function xa(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class va{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?ue(`${r}ms`,9):r.error,o=ue(e,25),l=t.rank,u=t.size,c=ue(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function wa(e,t,n,r){const a=Ie(t),s=function(e,t,n,r){const a=se(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?Sa(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],ka(l[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=Ia(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function ka(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:xe(e)?`'${e}'`:"bool"===n?Na(e):parseFloat(e.toFixed(7)).toString(),ue(r,t)}function Na(e){return 0===e?"false":"true"}function Ia(e,t,n,r,a,s=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[ka(Sa(e)[0],0,n)]:"bool"===n?[Na(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Sa(r),s=Sa(s)),["["+r.map(((e,t)=>ka(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>ka(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Sa(e):Array.from(e)).map(((e,t)=>ka(e,a[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,s=r+h;p.push(...Ia(e.slice(r,s),u,n,c,a,!1))}p.push("...");for(let t=o-3;t<o;t++){const r=t*h,s=r+h;p.push(...Ia(e.slice(r,s),u,n,c,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,s=r+h;p.push(...Ia(e.slice(r,s),u,n,c,a,t===o-1))}const d=2===l?",":"";p[0]="["+p[0]+d;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+d;let f=",\n";for(let e=2;e<l;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function Sa(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Ca{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=se(e),null!=n){const e=n.length;te(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||me(t,this.size),this.strides=Ie(e)}set(e,...t){0===t.length&&(t=[0]),te(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ta().makeTensor(this.values,this.shape,this.dtype)}}let Ta=null,$a=null,Ea=null;class Ra{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=se(e),this.strides=Ie(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return $a.buffer(this.shape,this.dtype,e)}bufferSync(){return $a.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Ce(this.shape,e,"complex64"===this.dtype)}arraySync(){return Ce(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Ta().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>ya(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Ta().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>ya(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Ta().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ta().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return $a.print(this,e)}clone(){return this.throwIfDisposed(),$a.clone(this)}toString(e=!1){return wa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),$a.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ta().makeVariable(this,e,t,n)}}function Aa(){return Ve("Tensor",(()=>Ra))}Object.defineProperty(Ra,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Aa();class _a extends Ra{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ie(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ta().disposeTensor(this),this.dataId=e.dataId,Ta().incRef(this,null)}dispose(){Ta().disposeVariable(this),this.isDisposedInternal=!0}}var Fa,Da,Oa,Ma,La;Object.defineProperty(_a,Symbol.hasInstance,{value:e=>e instanceof Ra&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Fa||(Fa={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Da||(Da={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Oa||(Oa={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Ma||(Ma={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(La||(La={}));const za={float32:Ma,int32:Da,bool:Oa,complex64:La};function Pa(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return za[e][t]}function Ba(e){return Pa(e,"int32")}function Wa(e,t){if(e.dtype===t.dtype)return[e,t];const n=Pa(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Va(e,t){return t.some((t=>t.id===e.id))}function Ua(e){const t=[];return Ga(e,t,new Set),t}function Ga(e,t,n){if(null==e)return;if(e instanceof Ra)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),Ga(r,t,n))}}function Ha(e){return null!=e.kernelName}class ja{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class qa{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ja}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(De(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ba(this.backendInstance),!0}setupRegisteredKernels(){Xr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Xr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof X||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,De(`Initialization of backend ${e} failed`),De(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return De(`Initialization of backend ${e} failed`),De(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return qa.nextTensorId++}nextVariableId(){return qa.nextVariableId++}clone(e){const t=Xa.runKernel(tn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Xa.runKernel(ht,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==qr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Ha(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ha(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const l=qr(t,this.backendName);te(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=Ha(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Kr(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(te(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&xe(e[0])&&(a=e.map((e=>ga(e))));const s=r.write(a,t,n),i=new Ra(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new Ra(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new _a(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*be(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof _a||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*be(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=Kr(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=$e(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Ua(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(te(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));te(a instanceof Ra,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=Te(se(e),"float32");return Xa.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!ie(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Ya);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return te(ke(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;te(t.every((e=>e instanceof Ra)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),te(n.value instanceof Ra,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),te(ke(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];te(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),te(s.every((e=>e instanceof Ra)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=ma(),n=await this.backend.time(e);return n.wallMs=ma()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ja;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Ka(){const e=We();if(null==e._tfengine){const t=new Me(e);e._tfengine=new qa(t)}var t;return t=e._tfengine.ENV,Be=t,Ta=()=>e._tfengine,e._tfengine}qa.nextTensorId=0,qa.nextVariableId=0;const Xa=Ka();function Ya(e,t){const n={a:e,b:t};return Xa.runKernel(je,n)}function Qa(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Za(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Ja=ze();function es(e,t){let n=e;if(ye(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||ye(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&ze().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ts(e,r,[]),r}function ts(e,t,n){if(n=n||[],!Array.isArray(e)&&!ye(e))return void te(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));te(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),te(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)ts(e[t],r,n.concat(t))}function ns(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function rs(e,t,n,r="numeric"){if(e instanceof Ra)return ns(r,e.dtype,t,n),e;let a=we(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),ns(r,a,t,n),null==e||!ye(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=es(e,a);ye(e)||Array.isArray(e)||(e=[e]);const i="string"!==a?fa(e,a):ae(e,[],!0);return Xa.makeTensor(i,s,a)}function as(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>rs(e,`${t}[${a}]`,n,r)))}function ss(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const a=(...e)=>{Xa.startScope(n);try{const t=r(...e);return Fe(t)&&console.error("Cannot return a Promise inside of tidy."),Xa.endScope(t),t}catch(e){throw Xa.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}Ja.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Ja.registerFlag("IS_BROWSER",(()=>Za())),Ja.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Ja.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Ja.registerFlag("PROD",(()=>!1)),Ja.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Ja.getBool("DEBUG"))),Ja.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Ja.registerFlag("IS_TEST",(()=>!1)),Ja.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Ja.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const is=ss({complex_:function(e,t){const n=rs(e,"real","complex"),r=rs(t,"imag","complex");ne(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return Xa.runKernel(ft,a)}});function os(e,t,n,r){if(null==r&&(r=we(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!ye(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Re(t);const e=se(t),r=se(n);te(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==se(t.slice(e));te(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return ye(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?fa(e,r):ae(e,[],!0),Xa.makeTensor(e,t,r)}function ls(e,t,n){return os(e,t,es(e,n),n)}const us={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function cs(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:hs(await Promise.all(r)),specs:n}}function hs(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const ps="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function ds(e){return ps?Buffer.byteLength(e):new Blob([e]).size}function fs(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function ms(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function gs(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:ds(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:ds(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function ys(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}class bs{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==bs.instance&&(bs.instance=new bs),bs.instance}static registerSaveRouter(e){bs.getInstance().saveRouters.push(e)}static registerLoadRouter(e){bs.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return bs.getHandlers(e,"save")}static getLoadHandlers(e,t){return bs.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?bs.getInstance().loadRouters:bs.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const xs=e=>bs.getSaveHandlers(e),vs="tensorflowjs",ws="models_store",ks="model_info_store";function Ns(){if(!ze().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Is(e){const t=e.result;t.createObjectStore(ws,{keyPath:"modelPath"}),t.createObjectStore(ks,{keyPath:"modelPath"})}class Ss{constructor(e){if(this.indexedDB=Ns(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(vs,1);r.onupgradeneeded=()=>Is(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(ws,"readonly"),r=t.objectStore(ws).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=gs(t),s=a.transaction(ks,"readwrite");let i=s.objectStore(ks);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=a.transaction(ws,"readwrite");const o=l.objectStore(ws).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(ks);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}Ss.URL_SCHEME="indexeddb://";const Cs=e=>{return ze().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ss.URL_SCHEME)?(t=e.slice(Ss.URL_SCHEME.length),new Ss(t)):null;var t};bs.registerSaveRouter(Cs),bs.registerLoadRouter(Cs);class Ts{constructor(){this.indexedDB=Ns()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(vs,1);n.onupgradeneeded=()=>Is(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(ks,"readonly"),s=a.objectStore(ks).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Ss.URL_SCHEME)?t.slice(Ss.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(vs,1);r.onupgradeneeded=()=>Is(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(ks,"readwrite"),i=s.objectStore(ks),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{l=a.transaction(ws,"readwrite");const r=l.objectStore(ws).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const $s="/",Es="tensorflowjs_models",Rs="info",As="model_topology",_s="weight_specs",Fs="weight_data",Ds="model_metadata";function Os(e){return{info:[Es,e,Rs].join($s),topology:[Es,e,As].join($s),weightSpecs:[Es,e,_s].join($s),weightData:[Es,e,Fs].join($s),modelMetadata:[Es,e,Ds].join($s)}}function Ms(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Ls(e){const t=e.split($s);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join($s)}class zs{constructor(e){if(!ze().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Os(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=gs(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(ps)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw Ms(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(ps){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}zs.URL_SCHEME="localstorage://";const Ps=e=>{return ze().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(zs.URL_SCHEME)?(t=e.slice(zs.URL_SCHEME.length),new zs(t)):null;var t};bs.registerSaveRouter(Ps),bs.registerLoadRouter(Ps);class Bs{constructor(){te(ze().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),te("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Es+$s,n=$s+Rs;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[Ls(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=Os(e=(t=e).startsWith(zs.URL_SCHEME)?t.slice(zs.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return Ms(n),r}}class Ws{constructor(){this.managers={}}static getInstance(){return null==Ws.instance&&(Ws.instance=new Ws),Ws.instance}static registerManager(e,t){te(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),te(e.length>0,(()=>"scheme must not be an empty string."));const n=Ws.getInstance();te(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Vs{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(ze().get("IS_BROWSER")){ze().setPlatform("browser",new Vs);try{Ws.registerManager(zs.URL_SCHEME,new Bs)}catch(e){}try{Ws.registerManager(Ss.URL_SCHEME,new Ts)}catch(e){}}let Us;function Gs(e,t="float32",n){return t=t||"float32",Re(e),new Ca(e,t,n)}ze().get("IS_NODE")&&ze().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ze().global.fetch?ze().global.fetch(e,t):(null==Us&&(Us=n(410)),Us(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Hs=ss({cast_:function(e,t){const n=rs(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return Xa.runKernel(ht,r,a)}}),js=ss({clone_:function(e){const t={x:rs(e,"x","clone","string_or_numeric")};return Xa.runKernel(tn,t)}});function qs(e){return new Promise((e=>setTimeout(e))).then(e)}Ka(),$a={buffer:Gs,cast:Hs,clone:js,print:function(e,t=!1){console.log(e.toString(t))}};class Ks{constructor(e){if(!ze().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ks.URL_SCHEME)&&(e=e.slice(Ks.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=ms(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await qs((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await qs((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:gs(e)}}}}function Xs(e,t,n,r){!function(e){te(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){te(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),te(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),te(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}async function Ys(e,t){null==t&&(t={});const n=null==t.fetchFunc?ze().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Xs(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Xs(a,t.onProgress,.5,1)}Ks.URL_SCHEME="downloads://",bs.registerSaveRouter((e=>ze().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ks.URL_SCHEME)?function(e="model"){return new Ks(e)}(e.slice(Ks.URL_SCHEME.length)):null));class Qs{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(te("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=ze().platform.fetch,te(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&te(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=ms(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:gs(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,fs(await Ys(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Zs(e){return null!=e.match(Qs.URL_SCHEME_REGEX)}Qs.URL_SCHEME_REGEX=/^https?:\/\//;const Js=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Zs(e))):Zs(e),n)return ei(e,t)}return null};function ei(e,t){return new Qs(e,t)}function ti(e,t){return ei(e,t)}function ni(e,t,n){const r=e.shape.length;te(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),te(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)te(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function ri(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function ai(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function si(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function ii(e,t,n){return n<=e?n:n-(t-1)}function oi(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function li(e,t,n,r,a,s,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),p=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=ui(i,l,u,r,e),h=ci(o,l,u,a,e),p=si(s,l,u,e)}else for(let t=0;t<u;t++)c[t]=pi(i,r,s,e,t,l),h[t]=di(o,a,s,e,t,l),p[t]=hi(s,t,l);return{begin:c,end:h,strides:p}}function ui(e,t,n,r,a){const s=[...a],i=oi(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=ii(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function ci(e,t,n,r,a){const s=[...a],i=oi(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const i=ii(t,n,a);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=Z(0,s[e],a[e])}return s}function hi(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function pi(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[a];return i<0&&(i+=l),i=Z(0,i,l-1),i}function di(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[a];return i<0&&(i+=l),i=o>0?Z(0,i,l):Z(-1,i,l-1),i}function fi(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function mi(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function gi(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{te(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(te(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function yi(e,t,n,r,a,s,i,o,l){let u=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(u.length));const p=ri(i);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const d=e.length-u.length,f=ri(o),m=e.slice();f.forEach((e=>{u[e]=0,c[e]=1,m.splice(e,0,1)}));const{begin:g,end:y,strides:b}=li(m,p,d,u,c,h,a,s,i);u=g,c=y,h=b;const x=ri(l);x.forEach((e=>{c[e]=u[e]+1,h[e]=1}));const v=ai(u,c,h),w=v.filter(((e,t)=>-1===x.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:u,$end:c,$strides:h,size:v,newShape:m,outShape:w}}bs.registerSaveRouter(Js),bs.registerLoadRouter(Js);class bi{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class xi{constructor(){this.classNameMap={}}static getMap(){return null==xi.instance&&(xi.instance=new xi),xi.instance}static register(e){xi.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function vi(e){te(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),te("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),te(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),xi.register(e)}function wi(){return Xa}function ki(){return Xa.memory()}function Ni(e,t){return Xa.tidy(e,t)}function Ii(e){Ua(e).forEach((e=>e.dispose()))}function Si(e){return Xa.keep(e)}function Ci(e,t,n=1){return Xa.registerBackend(e,t,n)}function Ti(e){return Xa.customGrad(e)}function $i(e,t){if((ye(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ye(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return os(e,[],[],t)}Ea=function(e){ze().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class Ei extends bi{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Ii(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){te(ke(e),(()=>"The f passed in variableGrads(f) must be a function")),te(null==t||Array.isArray(t)&&t.every((e=>e instanceof _a)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Xa.registeredVariables)t.push(Xa.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;te((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:i}=Xa.gradients(e,t,null,!0);te(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),te(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}(e,t)}dispose(){null!=this.iterations_&&Ii(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:$i(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ei,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const Ri=ss({abs_:function(e){const t=rs(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Xa.runKernel(mt,e)}{const e={x:t};return Xa.runKernel(Ue,e)}}}),Ai=ss({add_:function(e,t){let n=rs(e,"a","add"),r=rs(t,"b","add");[n,r]=Wa(n,r);const a={a:n,b:r};return Xa.runKernel(je,a)}}),_i=ss({all_:function(e,t=null,n=!1){const r={x:rs(e,"x","all","bool")},a={axis:t,keepDims:n};return Xa.runKernel(Ke,r,a)}}),Fi=ss({any_:function(e,t=null,n=!1){const r={x:rs(e,"x","any","bool")},a={axis:t,keepDims:n};return Xa.runKernel(Xe,r,a)}}),Di=ss({argMax_:function(e,t=0){const n={x:rs(e,"x","argMax")},r={axis:t};return Xa.runKernel(Ye,n,r)}});function Oi(e,t,n,r,a="NHWC",s){return zi(e,[...t,e[3]],n,s,r,null,null,qi(a))}function Mi(e,t,n,r,a,s,i="channelsLast"){const[o,l]=Wi(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return zi(e,u,n,r,a,s,!1,i)}function Li(e,t,n,r,a,s,i="NDHWC"){const[o,l,u]=Vi(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return Pi(e,c,n,r,a,!1,h,s)}function zi(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[p,d,,f]=t,[m,g]=Wi(n),[y,b]=Wi(r),x=Ui(p,y),v=Ui(d,b),{padInfo:w,outHeight:k,outWidth:N}=function(e,t,n,r,a,s,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Bi(e,t,n));const s=e[1];return[Gi((e[0]-t+2*r)/n+1,a),Gi((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);c=a[0],h=a[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),l=Math.floor(e/2),p=e-l,d=Math.floor(o/2);u={top:l,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===l?e[1][0]:e[2][0],d="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=Gi((t-s+p+d)/r+1,o),h=Gi((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(a,u,c,m,g,x,v,s,o),I=i?f*h:f;let S;return"channelsFirst"===o?S=[l,I,k,N]:"channelsLast"===o&&(S=[l,k,N,I]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:N,outChannels:I,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function Pi(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,p,u,c,h]=e}const[d,f,m,,g]=t,[y,b,x]=Vi(n),[v,w,k]=Vi(r),N=Ui(d,v),I=Ui(f,w),S=Ui(m,k),{padInfo:C,outDepth:T,outHeight:$,outWidth:E}=function(e,t,n,r,a,s,i,o,l,u,c){let h,p,d,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=Bi(e,t,r));const i=e[1],o=e[2];return[Gi((e[0]-t+2*a)/r+1,s),Gi((i-t+2*a)/r+1,s),Gi((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,c);p=s[0],d=s[1],f=s[2]}else if("same"===e){p=Math.ceil(t/a),d=Math.ceil(n/s),f=Math.ceil(r/i);const e=(p-1)*a+o-t,c=(d-1)*s+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/a),d=Math.ceil((n-l+1)/s),f=Math.ceil((r-u+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(a,u,c,h,y,b,x,N,I,S,o),R=s?g*p:g;let A;return"channelsFirst"===i?A=[l,R,T,$,E]:"channelsLast"===i&&(A=[l,T,$,E,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:p,outDepth:T,outHeight:$,outWidth:E,outChannels:R,padInfo:C,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:N,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function Bi(e,t,n,r=1){const a=Ui(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Wi(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Vi(e){return"number"==typeof e?[e,e,e]:e}function Ui(e,t){return t<=1?e:e+(e-1)*(t-1)}function Gi(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Hi(e){const[t,n,r]=Wi(e);return 1===t&&1===n&&1===r}function ji(e,t){return Hi(e)||Hi(t)}function qi(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const Ki=ss({reshape_:function(e,t){const n={x:rs(e,"x","reshape","string_or_numeric")},r={shape:t};return Xa.runKernel(Xn,n,r)}}),Xi=ss({avgPool_:function(e,t,n,r,a){const s=rs(e,"x","avgPool","float32");te(ji(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=Ki(s,[1,s.shape[0],s.shape[1],s.shape[2]])),te(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=a&&te(oe(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=Xa.runKernel(rt,l,u);return c=Hs(c,s.dtype),o?Ki(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Yi=ss({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const i=rs(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=Ki(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),te(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),te("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&te(oe(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let h=Xa.runKernel(st,u,c);return h=Hs(h,o.dtype),l?Ki(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Qi=ss({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const i=rs(e,"x","batchNorm"),o=rs(t,"mean","batchNorm"),l=rs(n,"variance","batchNorm");let u,c;null!=a&&(u=rs(a,"scale","batchNorm")),null!=r&&(c=rs(r,"offset","batchNorm")),te(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),te(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),te(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?Ki(e,[1,1,1,e.size]):2===e.rank?Ki(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Ki(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),p={x:h,scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:s},f=Xa.runKernel(Yt,p,d);return Ki(f,i.shape)}}),Zi=ss({batchNorm2d_:function(e,t,n,r,a,s){const i=rs(e,"x","batchNorm"),o=rs(t,"mean","batchNorm"),l=rs(n,"variance","batchNorm");let u,c;return null!=a&&(u=rs(a,"scale","batchNorm")),null!=r&&(c=rs(r,"offset","batchNorm")),te(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),te(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),te(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&te(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&te(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Qi(i,o,l,c,u,s)}}),Ji=ss({batchNorm3d_:function(e,t,n,r,a,s){const i=rs(e,"x","batchNorm"),o=rs(t,"mean","batchNorm"),l=rs(n,"variance","batchNorm");let u,c;return null!=a&&(u=rs(a,"scale","batchNorm")),null!=r&&(c=rs(r,"offset","batchNorm")),te(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),te(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),te(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&te(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&te(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Qi(i,o,l,c,u,s)}}),eo=ss({batchNorm4d_:function(e,t,n,r,a,s){const i=rs(e,"x","batchNorm"),o=rs(t,"mean","batchNorm"),l=rs(n,"variance","batchNorm");let u,c;return null!=a&&(u=rs(a,"scale","batchNorm")),null!=r&&(c=rs(r,"offset","batchNorm")),te(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),te(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),te(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&te(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&te(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Qi(i,o,l,c,u,s)}}),to=ss({clipByValue_:function(e,t,n){const r=rs(e,"x","clipByValue");te(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},s={clipValueMin:t,clipValueMax:n};return Xa.runKernel(dt,a,s)}}),no=ss({concat_:function(e,t=0){te(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=as(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return js(n[0]);const r=n,a={axis:t};return Xa.runKernel(gt,r,a)}}),ro=ss({concat1d_:function(e){return no(e,0)}}),ao=ss({concat2d_:function(e,t){return no(e,t)}}),so=ss({concat3d_:function(e,t){return no(e,t)}}),io=ss({concat4d_:function(e,t){return no(e,t)}}),oo=ss({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=rs(e,"x","conv2d"),l=rs(t,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Ki(o,[1,o.shape[0],o.shape[1],o.shape[2]])),te(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),te(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=i&&te(oe(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h="NHWC"===a?u.shape[3]:u.shape[1];te(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),te(ji(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const p={x:u,filter:l},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Xa.runKernel(yt,p,d);return c?Ki(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),lo=ss({conv1d_:function(e,t,n,r,a="NWC",s=1,i){const o=rs(e,"x","conv1d"),l=rs(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Ki(o,[1,o.shape[0],o.shape[1]])),te(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),te(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=i&&te(oe(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),te(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),te(ji(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),te("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const h=Ki(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=Ki(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=oo(p,h,[1,n],r,"NHWC",[1,s],i);return Ki(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),uo=ss({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){te(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Ki(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),te(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),te(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),te(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?o[3]:o[1],h="NHWC"===s?l.shape[3]:l.shape[1];te(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),te(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&te(oe(a),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const p={dy:l,filter:n},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=Xa.runKernel(xt,p,d);return u?Ki(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),co=ss({conv2dTranspose_:function(e,t,n,r,a,s){const i=rs(e,"x","conv2dTranspose"),o=rs(t,"filter","conv2dTranspose");return uo(n,i,o,r,a,"NHWC",s)}}),ho=ss({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const i=rs(e,"x","conv3d"),o=rs(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Ki(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),te(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),te(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),te(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),te(ji(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),te("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},p=Xa.runKernel(vt,c,h);return u?Ki(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),po=ss({conv3DBackpropInput_:function(e,t,n,r,a){te(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Ki(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const l=s[4],u=i.shape[4];te(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),te(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),te(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),te(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),te(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},p=Xa.runKernel(kt,c,h);return o?Ki(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),fo=ss({conv3dTranspose_:function(e,t,n,r,a){const s=rs(e,"x","conv3dTranspose"),i=rs(t,"filter","conv3dTranspose");return po(n,s,i,r,a)}}),mo=ss({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=rs(e,"x","depthwiseConv2d"),l=rs(t,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Ki(o,[1,o.shape[0],o.shape[1],o.shape[2]])),te(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),te(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),te(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=i&&te(oe(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:u,filter:l},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},d=Xa.runKernel(Et,h,p);return c?Ki(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),go=ss({floorDiv_:function(e,t){let n=rs(e,"a","floorDiv"),r=rs(t,"b","floorDiv");[n,r]=Wa(n,r);const a={a:n,b:r};return Xa.runKernel(Xt,a)}}),yo=ss({div_:function(e,t){let n=rs(e,"a","div"),r=rs(t,"b","div");if([n,r]=Wa(n,r),"int32"===n.dtype&&"int32"===r.dtype)return go(n,r);const a={a:n,b:r};return Xa.runKernel(Mt,a,{})}}),bo=ss({elu_:function(e){const t={x:rs(e,"x","elu")};return Xa.runKernel(zt,t)}});function xo(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function vo(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function wo(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const ko=ss({equal_:function(e,t){let n=rs(e,"a","equal","string_or_numeric"),r=rs(t,"b","equal","string_or_numeric");[n,r]=Wa(n,r),wo(n.shape,r.shape);const a={a:n,b:r};return Xa.runKernel(Wt,a)}}),No=ss({exp_:function(e){const t={x:rs(e,"x","exp")};return Xa.runKernel(Vt,t)}}),Io=ss({expandDims_:function(e,t=0){const n=rs(e,"x","expandDims","string_or_numeric");te(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return Xa.runKernel(Ut,r,a)}}),So=ss({tile_:function(e,t){const n=rs(e,"x","tile","string_or_numeric");te(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return Xa.runKernel(_r,r,a)}}),Co=ss({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=Gs([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=Ki(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return So(Io(i,0),[n[0],1,1]);if(2===n.length)return So(Io(Io(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return So(Io(Io(Io(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function To(e,t,n){const r={shape:e,value:t,dtype:n};return Xa.runKernel(jt,{},r)}const $o=ss({floor_:function(e){const t={x:rs(e,"x","floor")};return Xa.runKernel(Kt,t)}}),Eo=ss({gather_:function(e,t,n=0,r=0){const a={x:rs(e,"x","gather"),indices:rs(t,"indices","gather","int32")},s={axis:n,batchDims:r};return Xa.runKernel(Qt,a,s)}}),Ro=ss({greater_:function(e,t){let n=rs(e,"a","greater","string_or_numeric"),r=rs(t,"b","greater","string_or_numeric");[n,r]=Wa(n,r),wo(n.shape,r.shape);const a={a:n,b:r};return Xa.runKernel(Jt,a)}}),Ao=ss({greaterEqual_:function(e,t){let n=rs(e,"a","greaterEqual","string_or_numeric"),r=rs(t,"b","greaterEqual","string_or_numeric");[n,r]=Wa(n,r),wo(n.shape,r.shape);const a={a:n,b:r};return Xa.runKernel(en,a)}}),_o=ss({leakyRelu_:function(e,t=.2){const n={x:rs(e,"x","leakyRelu")},r={alpha:t};return Xa.runKernel(ln,n,r)}}),Fo=ss({log_:function(e){const t={x:rs(e,"x","log")};return Xa.runKernel(pn,t)}}),Do=ss({log1p_:function(e){const t={x:rs(e,"x","log1p")};return Xa.runKernel(dn,t)}}),Oo=ss({max_:function(e,t=null,n=!1){const r={x:rs(e,"x","max")},a={reductionIndices:t,keepDims:n};return Xa.runKernel(xn,r,a)}}),Mo=ss({mul_:function(e,t){let n=rs(e,"a","mul"),r=rs(t,"b","mul");[n,r]=Wa(n,r);const a={a:n,b:r};return Xa.runKernel(_n,a)}}),Lo=ss({sub_:function(e,t){let n=rs(e,"a","sub"),r=rs(t,"b","sub");[n,r]=Wa(n,r);const a={a:n,b:r};return Xa.runKernel(Er,a)}}),zo=ss({sum_:function(e,t=null,n=!1){let r=rs(e,"x","sum");"bool"===r.dtype&&(r=Hs(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Xa.runKernel(fr,a,s)}}),Po=ss({logSoftmax_:function(e,t=-1){const n=rs(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=Ti(((e,n)=>{const r=Oo(e,t,!0),a=Lo(e,r),s=Lo(Hs(a,"float32"),Fo(zo(No(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,a=No(r);return Lo(e,Mo(zo(e,t,!0),a))}}}));return r(n)}}),Bo=ss({logicalAnd_:function(e,t){const n=rs(e,"a","logicalAnd","bool"),r=rs(t,"b","logicalAnd","bool");wo(n.shape,r.shape);const a={a:n,b:r};return Xa.runKernel(fn,a)}}),Wo=ss({matMul_:function(e,t,n=!1,r=!1){let a=rs(e,"a","matMul"),s=rs(t,"b","matMul");[a,s]=Wa(a,s);const i={a,b:s},o={transposeA:n,transposeB:r};return Xa.runKernel(ot,i,o)}}),Vo=ss({maxPool_:function(e,t,n,r,a){const s=rs(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=Ki(s,[1,s.shape[0],s.shape[1],s.shape[2]])),te(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),te(ji(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=a&&te(oe(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=Xa.runKernel(wn,l,u);return o?Ki(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Uo=ss({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const i=rs(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=Ki(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),te(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),te("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&te(oe(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=Xa.runKernel(Nn,u,c);return l?Ki(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Go=ss({maximum_:function(e,t){let n=rs(e,"a","maximum"),r=rs(t,"b","maximum");[n,r]=Wa(n,r),"bool"===n.dtype&&(n=Hs(n,"int32"),r=Hs(r,"int32")),wo(n.shape,r.shape);const a={a:n,b:r};return Xa.runKernel(vn,a)}}),Ho=ss({mean_:function(e,t=null,n=!1){const r={x:rs(e,"x","mean")},a={axis:t,keepDims:n};return Xa.runKernel(Cn,r,a)}}),jo=ss({minimum_:function(e,t){let n=rs(e,"a","minimum"),r=rs(t,"b","minimum");[n,r]=Wa(n,r),"bool"===n.dtype&&(n=Hs(n,"int32"),r=Hs(r,"int32")),wo(n.shape,r.shape);const a={a:n,b:r};return Xa.runKernel($n,a)}});function qo(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Ko(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function Xo(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Yo(e,t){return Ko(e,t.map((e=>1)),t)}function Qo(e,t,n){te(qo(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Zo(e,t){if(qo(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Jo(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function el(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const tl=ss({square_:function(e){const t=rs(e,"x","square");return Xa.runKernel("Square",{x:t},{})}}),nl=ss({moments_:function(e,t=null,n=!1){const r=pe(t,(e=rs(e,"x","moments")).shape),a=Ho(e,r,n);let s=a.shape;n||(s=Yo(a.shape,r));const i=tl(Lo(Hs(e,"float32"),Ki(a,s)));return{mean:a,variance:Ho(i,r,n)}}}),rl=ss({neg_:function(e){const t={x:rs(e,"x","neg")};return Xa.runKernel(Fn,t)}}),al=ss({notEqual_:function(e,t){let n=rs(e,"a","notEqual","string_or_numeric"),r=rs(t,"b","notEqual","string_or_numeric");[n,r]=Wa(n,r),wo(n.shape,r.shape);const a={a:n,b:r};return Xa.runKernel(Dn,a)}}),sl=ss({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:rs(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return Xa.runKernel(Pn,a,s)}});function il(e,t="float32"){if("complex64"===t){const t=il(e,"float32"),n=il(e,"float32");return is(t,n)}const n=$e(se(e),t);return Xa.makeTensor(n,e,t)}function ol(e,t="float32"){if("complex64"===t){const t=ol(e,"float32"),n=il(e,"float32");return is(t,n)}const n=Te(se(e),t);return Xa.makeTensor(n,e,t)}const ll=ss({onesLike_:function(e){const t={x:rs(e,"x","onesLike")};return Xa.runKernel(zn,t)}}),ul=ss({pad_:function(e,t,n=0){const r=rs(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return Xa.runKernel(Wn,s,a)}}),cl=ss({prelu_:function(e,t){const n={x:rs(e,"x","prelu"),alpha:rs(t,"alpha","prelu")};return Xa.runKernel(Un,n)}});var hl=n(377);class pl{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=hl.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class dl{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=hl.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const fl=ss({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new pl(t,n,r,!1,a),i=Gs(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),ml=ss({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=Gs(e,r),i=new dl(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),gl=ss({relu_:function(e){const t={x:rs(e,"x","relu")};return Xa.runKernel(Kn,t)}}),yl=ss({reverse_:function(e,t){const n={x:rs(e,"x","reverse")},r={dims:t};return Xa.runKernel(tr,n,r)}}),bl=ss({selu_:function(e){const t={x:rs(e,"x","selu")};return Xa.runKernel(ir,t)}}),xl=ss({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){const o=rs(e,"x","separableConv2d"),l=rs(t,"depthwiseFilter","separableConv2d"),u=rs(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Ki(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");te(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),te(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),te(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),te(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),te(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],d=l.shape[3];te(u.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${u.shape[2]}.`));const f=mo(c,l,r,a,i,s),m=oo(f,u,1,"valid",i);return h?Ki(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),vl=ss({sigmoid_:function(e){const t={x:rs(e,"x","sigmoid")};return Xa.runKernel(hr,t)}}),wl=ss({slice_:function(e,t,n){const r=rs(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return Xa.runKernel(or,a,s)}}),kl=ss({slice1d_:function(e,t,n){const r=rs(e,"x","slice1d");return te(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),wl(r,[t],[n])}}),Nl=ss({slice2d_:function(e,t,n){const r=rs(e,"x","slice2d");return te(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),wl(r,t,n)}}),Il=ss({slice3d_:function(e,t,n){const r=rs(e,"x","slice3d");return te(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),wl(r,t,n)}}),Sl=ss({slice4d_:function(e,t,n){const r=rs(e,"x","slice4d");return te(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),wl(r,t,n)}}),Cl=ss({softmax_:function(e,t=-1){const n=rs(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return Xa.runKernel(yr,r,a)}}),Tl=ss({softplus_:function(e){const t={x:rs(e,"x","softplus")};return Xa.runKernel(pr,t)}}),$l=ss({split_:function(e,t,n=0){const r={x:rs(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Xa.runKernel(gr,r,a)}}),El=ss({sqrt_:function(e){const t={x:rs(e,"x","sqrt")};return Xa.runKernel(dr,t)}}),Rl=ss({squeeze_:function(e,t){const n=rs(e,"x","squeeze");return Ki(n,de(n.shape,t).newShape)}}),Al=ss({stack_:function(e,t=0){const n=as(e,"tensors","stack","string_or_numeric");te(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&te(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return Xa.runKernel(Bn,r,a)}}),_l=ss({tanh_:function(e){const t={x:rs(e,"x","tanh")};return Xa.runKernel(Ar,t)}});function Fl(e,t){re(e);const n=es(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return os(e,null,n,t)}const Dl=ss({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new pl(t,n,r,!0,a),i=Gs(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),Ol=ss({unstack_:function(e,t=0){const n=rs(e,"x","unstack","string_or_numeric");te(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return Xa.runKernel(Lr,r,a)}}),Ml=ss({broadcastTo_:function(e,t){let n=rs(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Ki(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return js(n);const i={x:n},o={reps:s};return Xa.runKernel(_r,i,o)}}),Ll=ss({where_:function(e,t,n){const r=rs(t,"a","where"),a=rs(n,"b","where"),s=rs(e,"condition","where","bool"),i=wo(wo(s.shape,r.shape),a.shape),o={condition:Ml(s,i),t:Ml(r,i),e:Ml(a,i)};return Xa.runKernel(sr,o)}}),zl=ss({zerosLike_:function(e){const t={x:rs(e,"x","zerosLike")};return Xa.runKernel(Pr,t)}}),Pl=ss({transpose_:function(e,t){const n=rs(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),te(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{te(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return Xa.runKernel(Or,r,a)}}),Bl=ss({dropout_:function(e,t,n,r){const a=rs(e,"x","dropout");if(te("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),te(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Ra?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(ie(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=yo($o(Ai(ml(s,0,1,"float32",r),i)),i);return Mo(a,o)}}),Wl=ss({imag_:function(e){const t={input:rs(e,"input","imag")};return Xa.runKernel(rn,t)}}),Vl=ss({real_:function(e){const t={input:rs(e,"input","real")};return Xa.runKernel(jn,t)}}),Ul=ss({fft_:function(e){te("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Xa.runKernel(Ht,t)}}),Gl=ss({rfft_:function(e,t){te("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=wl(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=no([e,il(r)],e.shape.length-1),n=t}else a=e;const s=zl(a),i=Ki(is(a,s),[r,n]),o=Ul(i),l=Math.floor(n/2)+1,u=Vl(o),c=Wl(o),h=$l(u,[l,n-l],u.shape.length-1),p=$l(c,[l,n-l],c.shape.length-1),d=a.shape.slice();return d[a.shape.length-1]=l,Ki(is(h[0],p[0]),d)}}),Hl=ss({ifft_:function(e){te("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Xa.runKernel(nn,t)}}),jl=ss({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Ki(e,[n,t]);r=Hl(a)}else{const a=[n,2*(t-1)],s=Ki(Vl(e),[n,t]),i=Ki(Wl(e),[n,t]),o=yl(wl(s,[0,1],[n,t-2]),1),l=Mo(yl(wl(i,[0,1],[n,t-2]),1),$i(-1)),u=no([s,o],1),c=no([i,l],1),h=Ki(is(u,c),[a[0],a[1]]);r=Hl(h)}if(r=Vl(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Ki(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),ql=ss({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=Ki(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Ki(t,[1,t.shape[0],t.shape[1],t.shape[2]])),te(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),te(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),te(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?l.shape[3]:l.shape[1];te(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),te(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&te(oe(a),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const h={x:o,dy:l},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return Xa.runKernel(bt,h,p)}}),Kl=ss({relu6_:function(e){const t={x:rs(e,"x","relu6")};return Xa.runKernel(er,t)}}),Xl=ss({step_:function(e,t=0){const n={x:rs(e,"x","step")},r={alpha:t};return Xa.runKernel(Br,n,r)}});function Yl(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Mo(e,Xl(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ql(e,t){let n=t;const r=vo(e.shape,t.shape);return r.length>0&&(n=zo(n,r)),Ki(n,e.shape)}function Zl(e,t,n,r){if("linear"===t)return e;if("relu"===t)return gl(e);if("elu"===t)return bo(e);if("relu6"===t)return Kl(e);if("prelu"===t)return cl(e,n);if("leakyrelu"===t)return _o(e,r);if("sigmoid"===t)return vl(e);throw new Error(`Unknown fused activation ${t}.`)}const Jl=(e,t)=>!(e>0)||"linear"===t,eu=ss({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Jl(Xa.state.gradientDepth,l)){let h=oo(e,t,n,r,a,s,i);return null!=o&&(h=Ai(h,o)),Zl(h,l,u,c)}const h=rs(e,"x","conv2d"),p=rs(t,"filter","conv2d");let d=h,f=!1;3===h.rank&&(f=!0,d=Ki(h,[1,h.shape[0],h.shape[1],h.shape[2]])),te(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),te(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=i&&te(oe(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),te(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),te(ji(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),te("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const m=zi(d.shape,p.shape,n,s,r,i);let g,y;null!=o&&(g=rs(o,"bias","fused conv2d"),[g]=Wa(g,h),wo(m.outShape,g.shape)),null!=u&&(y=rs(u,"prelu weights","fused conv2d"));const b=(e,t)=>{const[a,i,o,u]=t,c=Yl(e,o,l);te(Hi(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const h=[uo(i.shape,c,a,n,r),ql(i,c,a.shape,n,r)];if(null!=u){const e=Ql(u,c);h.push(e)}return h},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Ti(((e,t,n)=>{let r=Xa.runKernel(Ur,x,v);return n([t,e,r]),f&&(r=Ki(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p)}{const e=Ti(((e,t,n,r)=>{let a=Xa.runKernel(Ur,x,v);return r([t,e,a,n]),f&&(a=Ki(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}));return e(d,p,g)}}}),tu=ss({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=Ki(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Ki(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return Xa.runKernel(Rt,u,c)}}),nu=ss({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Ki(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=Xa.runKernel(At,u,c);return l?Ki(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),ru=ss({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Jl(Xa.state.gradientDepth,l)){let h=mo(e,t,n,r,a,s,i);return null!=o&&(h=Ai(h,o)),Zl(h,l,u,c)}const h=rs(e,"x","depthwiseConv2d"),p=rs(t,"filter","depthwiseConv2d");let d=h,f=!1;3===h.rank&&(f=!0,d=Ki(h,[1,h.shape[0],h.shape[1],h.shape[2]])),te(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),te(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),te(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==s&&(s=[1,1]),te(ji(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=i&&te(oe(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const m=zi(d.shape,p.shape,n,s,r,i,!0);let g,y;null!=o&&(g=rs(o,"bias","fused conv2d"),[g]=Wa(g,h),wo(m.outShape,g.shape)),null!=u&&(y=rs(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{te(Hi(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,o,u,c]=t,h=Yl(e,u,l),p=nu(o.shape,h,a,n,r,s,i),d=tu(o,h,a.shape,n,r,s,i);return null!=c?[p,d,Ql(g,h)]:[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Ti(((e,t,n)=>{let r=Xa.runKernel(Gr,x,v);return n([t,e,r]),f&&(r=Ki(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p)}{const e=Ti(((e,t,n,r)=>{let a=Xa.runKernel(Gr,x,v);return r([t,e,a,n]),f&&(a=Ki(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}));return e(d,p,g)}}}),au=ss({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Jl(Xa.state.gradientDepth,s)){let l=Wo(e,t,n,r);return null!=a&&(l=Ai(l,a)),Zl(l,s,i,o)}let l=rs(e,"a","fused matMul"),u=rs(t,"b","fused matMul");[l,u]=Wa(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],d=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=se(f),y=se(m);te(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),te(ie(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),te(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=l.shape.slice(0,-2).concat([p,d]),x=Ki(l,n?[g,c,p]:[g,p,c]),v=Ki(u,r?[y,d,h]:[y,h,d]);let w,k;null!=a&&(w=rs(a,"bias","fused matMul"),[w]=Wa(w,l),wo(b,w.shape)),null!=i&&(k=rs(i,"prelu weights","fused matMul"));const N=(e,t)=>{const[i,o,l,u]=t,c=Yl(Ki(e,l.shape),l,s);let h,p;return n||r?!n&&r?(h=Wo(c,o,!1,!1),p=Wo(c,i,!0,!1)):n&&!r?(h=Wo(o,c,!1,!0),p=Wo(i,c,!1,!1)):(h=Wo(o,c,!0,!0),p=Wo(c,i,!0,!0)):(h=Wo(c,o,!1,!0),p=Wo(i,c,!0,!1)),null!=a?[h,p,Ql(u,c)]:[h,p]},I={a:x,b:v,bias:w,preluActivationWeights:k},S={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};if(null==a){const e=Ti(((e,t,n)=>{const r=Xa.runKernel(Vr,I,S);return n([e,t,r]),{value:Ki(r,b),gradFunc:N}}));return e(x,v)}{const e=Ti(((e,t,n,r)=>{const a=Xa.runKernel(Vr,I,S);return r([e,t,a,n]),{value:Ki(a,b),gradFunc:N}}));return e(x,v,w)}}});function su(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Fl(a,"float32")}ss({hammingWindow_:function(e){return su(e,.54,.46)}});const iu=ss({hannWindow_:function(e){return su(e,.5,.5)}});function ou(e,t,n){if(re(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=es(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return os(e,t,r,n)}const lu=ss({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(wl(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=no([wl(e,s,t-r),To([r],a)]);i.push(o),s+=n}return 0===i.length?ou([],[0,t]):Ki(no(i),[i.length,t])}});ss({stft_:function(e,t,n,r,a=iu){var s;null==r&&(s=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2)))));const i=lu(e,t,n),o=Mo(i,a(t));return Gl(o,r)}});const uu=ss({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=rs(e,"image","cropAndResize"),o=rs(t,"boxes","cropAndResize","float32"),l=rs(n,"boxInd","cropAndResize","int32"),u=o.shape[0];te(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),te(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),te(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),te(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),te(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),te("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:i,boxes:o,boxInd:l},h={method:a,extrapolationValue:s,cropSize:r};return Xa.runKernel(Ct,c,h)}}),cu=ss({flipLeftRight_:function(e){const t=rs(e,"image","flipLeftRight","float32");te(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Xa.runKernel(qt,n,{})}}),hu=ss({grayscaleToRGB_:function(e){const t=rs(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];te(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),te(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,So(t,a)}}),pu=ss({rotateWithOffset_:function(e,t,n=0,r=.5){const a=rs(e,"image","rotateWithOffset","float32");te(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return Xa.runKernel(Wr,s,i)}});function du(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),te(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),te(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),te(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),te(1===t.rank,(()=>"scores must be a 1D tensor")),te(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),te(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const fu=ss({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=rs(e,"boxes","nonMaxSuppression"),i=rs(t,"scores","nonMaxSuppression"),o=du(s,i,n,r,a),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return Xa.runKernel(On,{boxes:s,scores:i},l)}});function mu(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||gu)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function gu(e,t){return e>t?1:e<t?-1:0}function yu(e,t,n,r,a){return vu(e,t,n,r,a,0)}function bu(e,t,n,r,a,s){return vu(e,t,n,r,a,0,!1,s,!0)}function xu(e,t,n,r,a,s){return vu(e,t,n,r,a,s,!0)}function vu(e,t,n,r,a,s,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>a&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Nu);const c=s>0?-.5/s:0,h=[],p=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=wu(e,s,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*ku(r,c,i),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),p.push(t.score)):t.score>a&&mu(u,t,Nu))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),l&&(m.validOutputs=d),m}function wu(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),d=(o-s)*(l-i),f=(h-u)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(s,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function ku(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Nu(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Iu=ss({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=rs(e,"boxes","nonMaxSuppression"),o=rs(t,"scores","nonMaxSuppression"),l=du(i,o,n,r,a,s),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:a=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},h=Xa.runKernel(Ln,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Su=ss({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=rs(e,"boxes","nonMaxSuppression"),o=rs(t,"scores","nonMaxSuppression"),l=du(i,o,n,r,a,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},h=Xa.runKernel(Mn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),Cu=ss({resizeBilinear_:function(e,t,n=!1,r=!1){const a=rs(e,"images","resizeBilinear");te(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),te(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),te(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Ki(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Xa.runKernel(Zn,o,l);return i?Ki(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Tu=ss({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=rs(e,"images","resizeNearestNeighbor");te(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),te(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),te("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),te(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Ki(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Xa.runKernel(Yn,o,l);return i?Ki(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),$u=ss({bincount_:function(e,t,n){const r=rs(e,"x","bincount"),a=rs(t,"weights","bincount");te("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),te(n>=0,(()=>`size must be non-negative, but got ${n}.`)),te(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},i={size:n};return Xa.runKernel(ut,s,i)}}),Eu=ss({lessEqual_:function(e,t){let n=rs(e,"a","lessEqual","string_or_numeric"),r=rs(t,"b","lessEqual","string_or_numeric");[n,r]=Wa(n,r),wo(n.shape,r.shape);const a={a:n,b:r};return Xa.runKernel(cn,a)}}),Ru=ss({round_:function(e){const t={x:rs(e,"x","round")};return Xa.runKernel(nr,t)}});function Au(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return Xa.runKernel(Hn,{},a)}const _u=ss({threshold_:function(e,t="binary",n=!1,r=.5){const a=rs(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,o,l,u,c=Mo(Fl([r]),255);if(te(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),te(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),te("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),te("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[i,o,l]=$l(a,[1,1,1],-1);const e=Mo(i,.2989),t=Mo(o,.587),n=Mo(l,.114);u=Ai(Ai(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,r,a,s,i,o,l=Fl([-1]),u=Fl([0]),c=Fl([0]);for(let h=0;h<e.size-1;h++){n=wl(e,0,h+1),r=wl(e,h+1),i=yo(zo(n),t),o=yo(zo(r),t);const p=zo(Mo(n,Au(0,n.size)));a=yo(p,zo(n));const d=To(r.shape,n.size),f=Ai(Au(0,r.size),d),m=Mo(r,f);s=yo(zo(m),zo(r));const g=Lo(a,s),y=Lo(a,s),b=Mo(i,o);c=Mo(Mo(b,g),y);const x=Ro(c,u);u=Ll(x,c,u),l=Ll(x,Fl([h]),l)}return l}($u(Hs(Ru(u),"int32"),ls([]),256),s));const h=n?Eu(u,c):Ro(u,c);return Hs(Mo(h,255),"int32")}}),Fu=ss({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=rs(e,"image","transform","float32"),o=rs(t,"transforms","transform","float32");te(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),te(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),te(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return Xa.runKernel(Dr,l,u)}}),Du=ss({bandPart_:function(e,t,n){te(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),te(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=rs(e,"a","bandPart");te(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=Ki(Au(0,s,1,"int32"),[-1,1]),l=Au(0,i,1,"int32"),u=Lo(o,l),c=Bo(Eu(u,$i(+t,"int32")),Ao(u,$i(-n,"int32"))),h=il([s,i],r.dtype);return Ki(Al(Ol(Ki(r,[-1,s,i])).map((e=>Ll(c,e,h)))),a)}}),Ou=ss({min_:function(e,t=null,n=!1){const r={x:rs(e,"x","min")},a={axis:t,keepDims:n};return Xa.runKernel(Tn,r,a)}}),Mu=ss({pow_:function(e,t){let n=rs(e,"base","pow"),r=rs(t,"exp","pow");[n,r]=Wa(n,r);const a={a:n,b:r};return Xa.runKernel(Vn,a)}});function Lu(e,t,n=null){if(0===e.rank)return Ri(e);if(1!==e.rank&&null===n)return Lu(Ki(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return zo(Ri(e),n);if(t===1/0)return Oo(Ri(e),n);if(t===-1/0)return Ou(Ri(e),n);if("euclidean"===t||2===t)return El(zo(Mu(Ri(e),$i(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Oo(zo(Ri(e),n[0]),n[1]-1);if(t===1/0)return Oo(zo(Ri(e),n[1]),n[0]);if(t===-1/0)return Ou(zo(Ri(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return El(zo(tl(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const zu=ss({norm_:function(e,t="euclidean",n=null,r=!1){const a=Lu(e=rs(e,"x","norm"),t,n);let s=a.shape;if(r){const t=pe(n,e.shape);s=Yo(a.shape,t)}return Ki(a,s)}}),Pu=ss({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,te(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)te(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=$l(e,e.shape[0],0).map((e=>Rl(e,[0])));te(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Xa.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Mo(zo(Mo(n[r],e)),n[r]);e=Lo(e,t)}return yo(e,zu(e,"euclidean"))})));return t?Al(n,0):n}});function Bu(e,t=!1){return Xa.tidy((()=>{te(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=Co(n),s=js(e);const i=ou([[1]],[1,1]);let o=js(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=s,l=o,u=a;[o,s,a]=Xa.tidy((()=>{const t=wl(s,[e,e],[n-e,1]),l=zu(t),u=wl(s,[e,e],[1,1]),c=Ll(Ro(u,0),ou([[-1]]),ou([[1]])),h=Lo(u,Mo(c,l)),p=yo(t,h);o=1===p.shape[0]?js(i):no([i,wl(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=rl(yo(Wo(c,h),l)),f=wl(s,[e,0],[n-e,r]),m=Mo(d,o),g=Pl(o);if(0===e)s=Lo(f,Wo(m,Wo(g,f)));else{const t=Lo(f,Wo(m,Wo(g,f)));s=no([wl(s,[0,0],[e,r]),t],0)}const y=Pl(m),b=wl(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Lo(b,Wo(Wo(b,o),y));else{const t=Lo(b,Wo(Wo(b,o),y));a=no([wl(a,[0,0],[n,e]),t],1)}return[o,s,a]})),Ii([t,l,u])}return!t&&n>r&&(a=wl(a,[0,0],[n,r]),s=wl(s,[0,0],[r,r])),[a,s]}))}const Wu=ss({qr_:function(e,t=!1){if(te(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Bu(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Ol(Ki(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=Bu(e,t);a.push(n),s.push(r)})),[Ki(Al(a,0),e.shape),Ki(Al(s,0),e.shape)]}}});var Vu;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Vu||(Vu={}));const Uu=ss({computeWeightedLoss_:function(e,t,n=Vu.SUM_BY_NONZERO_WEIGHTS){const r=rs(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=rs(t,"weights","computeWeightedLoss"));const s=null==a?r:Mo(r,a);if(n===Vu.NONE)return s;if(n===Vu.SUM)return zo(s);if(n===Vu.MEAN){if(null==a)return Ho(s);{const e=r.size/a.size,t=yo(zo(s),zo(a));return e>1?yo(t,$i(e)):t}}if(n===Vu.SUM_BY_NONZERO_WEIGHTS){if(null==a)return yo(zo(s),$i(r.size));{const e=Mo(a,ol(r.shape)),t=Hs(zo(al(e,$i(0))),"float32");return yo(zo(s),t)}}throw Error(`Unknown reduction: ${n}`)}});ss({absoluteDifference_:function(e,t,n,r=Vu.SUM_BY_NONZERO_WEIGHTS){const a=rs(e,"labels","absoluteDifference"),s=rs(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=rs(n,"weights","absoluteDifference")),ne(a.shape,s.shape,"Error in absoluteDifference: ");const o=Ri(Lo(a,s));return Uu(o,i,r)}}),ss({cosineDistance_:function(e,t,n,r,a=Vu.SUM_BY_NONZERO_WEIGHTS){const s=rs(e,"labels","cosineDistance"),i=rs(t,"predictions","cosineDistance");let o=null;null!=r&&(o=rs(r,"weights","cosineDistance")),ne(s.shape,i.shape,"Error in cosineDistance: ");const l=$i(1),u=Lo(l,zo(Mo(s,i),n,!0));return Uu(u,o,a)}}),ss({hingeLoss_:function(e,t,n,r=Vu.SUM_BY_NONZERO_WEIGHTS){let a=rs(e,"labels","hingeLoss");const s=rs(t,"predictions","hingeLoss");let i=null;null!=n&&(i=rs(n,"weights","hingeLoss")),ne(a.shape,s.shape,"Error in hingeLoss: ");const o=$i(1);a=Lo(Mo($i(2),a),o);const l=gl(Lo(o,Mo(a,s)));return Uu(l,i,r)}}),ss({huberLoss_:function(e,t,n,r=1,a=Vu.SUM_BY_NONZERO_WEIGHTS){const s=rs(e,"labels","huberLoss"),i=rs(t,"predictions","huberLoss");let o=null;null!=n&&(o=rs(n,"weights","huberLoss")),ne(s.shape,i.shape,"Error in huberLoss: ");const l=$i(r),u=Ri(Lo(i,s)),c=jo(u,l),h=Lo(u,c),p=Ai(Mo($i(.5),tl(c)),Mo(l,h));return Uu(p,o,a)}}),ss({logLoss_:function(e,t,n,r=1e-7,a=Vu.SUM_BY_NONZERO_WEIGHTS){const s=rs(e,"labels","logLoss"),i=rs(t,"predictions","logLoss");let o=null;null!=n&&(o=rs(n,"weights","logLoss")),ne(s.shape,i.shape,"Error in logLoss: ");const l=$i(1),u=$i(r),c=rl(Mo(s,Fo(Ai(i,u)))),h=Mo(Lo(l,s),Fo(Ai(Lo(l,i),u))),p=Lo(c,h);return Uu(p,o,a)}});const Gu=ss({squaredDifference_:function(e,t){let n=rs(e,"a","squaredDifference"),r=rs(t,"b","squaredDifference");[n,r]=Wa(n,r),wo(n.shape,r.shape);const a={a:n,b:r};return Xa.runKernel(Nr,a,{})}});ss({meanSquaredError_:function(e,t,n,r=Vu.SUM_BY_NONZERO_WEIGHTS){const a=rs(e,"labels","meanSquaredError"),s=rs(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=rs(n,"weights","meanSquaredError")),ne(a.shape,s.shape,"Error in meanSquaredError: ");const o=Gu(a,s);return Uu(o,i,r)}}),ss({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Vu.SUM_BY_NONZERO_WEIGHTS){let s=rs(e,"multiClassLabels","sigmoidCrossEntropy");const i=rs(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=rs(n,"weights","sigmoidCrossEntropy")),ne(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=$i(r),t=$i(1),n=$i(.5);s=Ai(Mo(s,Lo(t,e)),Mo(n,e))}const l=function(e,t){const n=rs(e,"labels","sigmoidCrossEntropyWithLogits"),r=rs(t,"logits","sigmoidCrossEntropyWithLogits");ne(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=gl(r),s=Mo(r,n),i=Do(No(rl(Ri(r))));return Ai(Lo(a,s),i)}(s,i);return Uu(l,o,a)}});const Hu=ss({logSumExp_:function(e,t=null,n=!1){const r=rs(e,"x","logSumExp"),a=pe(t,r.shape),s=Oo(r,a,!0),i=Lo(r,s),o=No(i),l=zo(o,a),u=Fo(l),c=Ai(Ki(s,u.shape),u);if(n){const e=Yo(c.shape,a);return Ki(c,e)}return c}});ss({softmaxCrossEntropy_:function(e,t,n,r=0,a=Vu.SUM_BY_NONZERO_WEIGHTS){let s=rs(e,"onehotLabels","softmaxCrossEntropy");const i=rs(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=rs(n,"weights","softmaxCrossEntropy")),ne(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=$i(r),t=$i(1),n=$i(s.shape[1]);s=Ai(Mo(s,Lo(t,e)),yo(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=Ti(((e,t,r)=>{const a=Hu(t,[n],!0),s=Lo(Hs(t,"float32"),a);r([e,s]);const i=rl(Mo(s,e));return{value:zo(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Yo(e.shape,[n]);return[Mo(Ki(e,s),Lo(Hs(r,"float32"),No(a))),Mo(Ki(e,s),Lo(No(a),Hs(r,"float32")))]}}}));return r(e,t)}(s,i);return Uu(l,o,a)}});const ju=ss({sparseFillEmptyRows_:function(e,t,n,r){const a=rs(e,"indices","sparseFillEmptyRows"),s=rs(t,"values","sparseFillEmptyRows"),i=rs(n,"denseShape","sparseFillEmptyRows"),o=rs(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:a,values:s,denseShape:i,defaultValue:o},u=Xa.runKernel(br,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),qu=ss({sparseReshape_:function(e,t,n){const r=rs(e,"inputIndices","sparseReshape"),a=rs(t,"inputShape","sparseReshape"),s=rs(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=Xa.runKernel(xr,i);return{outputIndices:o[0],outputShape:o[1]}}}),Ku=ss({sparseSegmentMean_:function(e,t,n){const r=rs(e,"data","sparseSegmentMean"),a=rs(t,"indices","sparseSegmentMean"),s=rs(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return Xa.runKernel(vr,i)}}),Xu=ss({sparseSegmentSum_:function(e,t,n){const r=rs(e,"data","sparseSegmentSum"),a=rs(t,"indices","sparseSegmentSum"),s=rs(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return Xa.runKernel(wr,i)}}),Yu=ss({stringNGrams_:function(e,t,n,r,a,s,i,o){const l=rs(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=rs(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},p=Xa.runKernel(Cr,h,c);return{nGrams:p[0],nGramsSplits:p[1]}}}),Qu=ss({stringSplit_:function(e,t,n=!0){const r=rs(e,"input","stringSplit","string"),a=rs(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=Xa.runKernel(Tr,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),Zu=ss({stringToHashBucketFast_:function(e,t){const n=rs(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return Xa.runKernel($r,a,r)}}),Ju={flipLeftRight:cu,grayscaleToRGB:hu,resizeNearestNeighbor:Tu,resizeBilinear:Cu,rotateWithOffset:pu,cropAndResize:uu,nonMaxSuppression:fu,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=rs(e,"boxes","nonMaxSuppressionAsync"),i=rs(t,"scores","nonMaxSuppressionAsync"),o=du(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const l=await Promise.all([s.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=yu(u,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Fl(h,"int32")},nonMaxSuppressionWithScore:Iu,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=rs(e,"boxes","nonMaxSuppressionAsync"),o=rs(t,"scores","nonMaxSuppressionAsync"),l=du(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:p,selectedScores:d}=xu(c,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Fl(p,"int32"),selectedScores:Fl(d)}},nonMaxSuppressionPadded:Su,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=rs(e,"boxes","nonMaxSuppressionAsync"),o=rs(t,"scores","nonMaxSuppressionAsync"),l=du(i,o,n,r,a,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=bu(p,d,u,c,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Fl(f,"int32"),validOutputs:$i(m,"int32")}},threshold:_u,transform:Fu},ec={bandPart:Du,gramSchmidt:Pu,qr:Wu},tc={sparseFillEmptyRows:ju,sparseReshape:qu,sparseSegmentMean:Ku,sparseSegmentSum:Xu},nc={stringNGrams:Yu,stringSplit:Qu,stringToHashBucketFast:Zu};class rc extends Ei{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Xa.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Xa.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Ni((()=>zl(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Ni((()=>zl(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Ni((()=>{const e=Ai(Mo(s,this.rho),Mo(tl(a),1-this.rho)),t=Mo(yo(El(Ai(i,this.epsilon)),El(Ai(s,this.epsilon))),a),n=Ai(Mo(i,this.rho),Mo(tl(t),1-this.rho));s.assign(e),i.assign(n);const o=Ai(Mo(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ii(this.accumulatedGrads.map((e=>e.variable))),Ii(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}rc.className="Adadelta",vi(rc);class ac extends Ei{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Xa.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Ni((()=>To(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Ni((()=>{const e=Ai(s,tl(a));s.assign(e);const t=Ai(Mo(yo(a,El(Ai(e,Xa.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ii(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}ac.className="Adagrad",vi(ac);class sc extends Ei{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ni((()=>{this.accBeta1=$i(t).variable(),this.accBeta2=$i(n).variable()})),null==r&&(this.epsilon=Xa.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ni((()=>{const n=Lo(1,this.accBeta1),r=Lo(1,this.accBeta2);t.forEach(((t,a)=>{const s=Xa.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Ni((()=>zl(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Ni((()=>zl(s).variable(!1)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,u=Ai(Mo(o,this.beta1),Mo(i,1-this.beta1)),c=Ai(Mo(l,this.beta2),Mo(tl(i),1-this.beta2)),h=yo(u,n),p=yo(c,r);o.assign(u),l.assign(c);const d=Ai(Mo(yo(h,Ai(El(p),this.epsilon)),-this.learningRate),s);s.assign(d)})),this.accBeta1.assign(Mo(this.accBeta1,this.beta1)),this.accBeta2.assign(Mo(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ii(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Ii(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Ni((()=>{this.accBeta1.assign(Mu(this.beta1,this.iterations_+1)),this.accBeta2.assign(Mu(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}sc.className="Adam",vi(sc);class ic extends Ei{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ni((()=>{this.iteration=$i(0).variable(),this.accBeta1=$i(t).variable()})),null==r&&(this.epsilon=Xa.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ni((()=>{const n=Lo(1,this.accBeta1),r=yo(-this.learningRate,Ai(Mo(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=Xa.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:zl(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:zl(s).variable(!1)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,u=Ai(Mo(o,this.beta1),Mo(i,1-this.beta1)),c=Mo(l,this.beta2),h=Ri(i),p=Go(c,h);o.assign(u),l.assign(p);const d=Ai(Mo(yo(r,n),yo(u,Ai(p,this.epsilon))),s);s.assign(d)})),this.iteration.assign(Ai(this.iteration,1)),this.accBeta1.assign(Mo(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ii(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Ii(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}ic.className="Adamax",vi(ic);class oc extends Ei{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=Xa.registeredVariables[t];Ni((()=>{const e=Ai(Mo(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Si($i(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}oc.className="SGD",vi(oc);class lc extends oc{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=$i(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Xa.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Ni((()=>zl(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Ni((()=>{let e;const t=Ai(Mo(this.m,a),s);e=this.useNesterov?Ai(Mo(this.c,Ai(s,Mo(t,this.m))),r):Ai(Mo(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ii(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}lc.className="Momentum",vi(lc);class uc extends Ei{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=Xa.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Xa.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Ni((()=>zl(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Ni((()=>zl(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Ni((()=>zl(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Ni((()=>{const e=Ai(Mo(i,this.decay),Mo(tl(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Ai(Mo(t,this.decay),Mo(s,1-this.decay)),l=yo(Mo(s,this.learningRate),El(Lo(e,Ai(tl(a),this.epsilon)))),u=Ai(Mo(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);const c=Lo(r,u);r.assign(c)}else{const e=Ai(Mo(i,this.decay),Mo(tl(s),1-this.decay)),t=Ai(Mo(o,this.momentum),yo(Mo(s,this.learningRate),El(Ai(e,this.epsilon))));i.assign(e),o.assign(t);const n=Lo(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ii(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Ii(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Ii(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}uc.className="RMSProp",vi(uc);class cc{static sgd(e){return new oc(e)}static momentum(e,t,n=!1){return new lc(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new uc(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new sc(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new rc(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new ic(e,t,n,r,a)}static adagrad(e,t=.1){return new ac(e,t)}}const hc={sgd:cc.sgd,momentum:cc.momentum,adadelta:cc.adadelta,adagrad:cc.adagrad,rmsprop:cc.rmsprop,adamax:cc.adamax,adam:cc.adam},pc="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function dc(){return new Promise((e=>pc((()=>e()))))}function fc(e,t){const n=e[0].length;e.forEach(((e,t)=>{te(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),te(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)te(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function mc(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const gc=30;function yc(e){return e<=gc?e:Ne(e,Math.floor(Math.sqrt(e)))}function bc(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function xc(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function vc(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function wc(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function kc(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Nc(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}function Ic(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===se(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);const c=[...Ie(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,c]}function Sc(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function Cc(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Sc(n,t,e)}function Tc(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:se(t.shape)/o,sliceSize:i,strides:[...Ie(n.slice(0,a)),1],outputSize:se(n)}}const $c=1.7580993408473768,Ec=1.0507009873554805,Rc=.3275911,Ac=.254829592,_c=-.284496736,Fc=1.421413741,Dc=-1.453152027,Oc=1.061405429;function Mc(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Lc(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function zc(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Pc(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Bc(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Wc(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Vc(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Uc(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Gc=/->/g;function Hc(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Gc,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");te(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const l=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<s[e].length;++t)l[e].push(o.indexOf(s[e][t]))}const u=o.length,c=[];for(let e=a.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function jc(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function qc(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:te(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function Kc(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=Yc(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Xc(e){return e.every(((e,t)=>e===t))}function Yc(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Qc(e,t,n=0){let r=[];if("number"==typeof t)te(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);te(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}te(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Zc(e,t){let n,r=!1;for(e<=gc?(n=e,r=!0):n=Ne(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Ne(e,n+1);return n}function Jc(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function eh(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function th(e){try{return e.map((e=>ya(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function nh(e){return e.map((e=>ga(e)))}function rh(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Gs(e,"int32"),a=Gs([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}const ah={kernelName:Ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,Xl(Hs(n,"float32"),-1))}}},sh={kernelName:Ge,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=tl(Hs(n,"float32")),r=El(Lo($i(1),t));return rl(yo(e,r))}}}},ih={kernelName:He,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=El(Lo(tl(Hs(n,"float32")),1));return yo(e,t)}}}},oh={kernelName:je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=wo(n.shape,r.shape);return{a:()=>{let t=e;const r=vo(n.shape,a);return r.length>0&&(t=zo(t,r)),Ki(t,n.shape)},b:()=>{let t=e;const n=vo(r.shape,a);return n.length>0&&(t=zo(t,n)),Ki(t,r.shape)}}}},lh={kernelName:qe,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},uh={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zl(n)}}},ch={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zl(n)}}},hh={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yo(e,El(Lo($i(1),tl(Hs(n,"float32")))))}}},ph={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=El(Ai($i(1),tl(Hs(n,"float32"))));return yo(e,t)}}}},dh={kernelName:nt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=wo(n.shape,r.shape);return{a:()=>{const t=Ai(tl(n),tl(r));let s=Mo(e,yo(r,t));const i=vo(n.shape,a);return i.length>0&&(s=zo(s,i)),Ki(s,n.shape)},b:()=>{const t=Ai(tl(n),tl(r));let s=rl(Mo(e,yo(n,t)));const i=vo(r.shape,a);return i.length>0&&(s=zo(s,i)),Ki(s,r.shape)}}}},fh={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yo(e,Ai(tl(Hs(n,"float32")),1))}}},mh={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yo(e,Lo($i(1),tl(Hs(n,"float32"))))}}},gh=ss({avgPool3dGrad_:function(e,t,n,r,a,s){const i=rs(e,"dy","avgPool3dGrad"),o=rs(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=Ki(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Ki(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),te(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),te(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),null!=s&&te(oe(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`));const h={dy:l,input:u},p={filterSize:n,strides:r,pad:a,dimRoundingMode:s},d=Xa.runKernel(it,h,p);return c?Ki(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),yh={kernelName:st,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>gh(e,r,a,s,i,o)}}},bh=ss({avgPoolGrad_:function(e,t,n,r,a){const s=rs(e,"dy","avgPoolGrad"),i=rs(t,"input","avgPoolGrad");te(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=Ki(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Ki(s,[1,s.shape[0],s.shape[1],s.shape[2]])),te(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),te(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:a},p=Xa.runKernel(at,c,h);return u?Ki(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),xh={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>bh(e,r,a,s,i)}}},vh={kernelName:ot,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Wo(e,a,!1,!1),b:()=>Wo(e,r,!0,!1)}:s&&!i?{a:()=>Wo(a,e,!1,!0),b:()=>Wo(r,e,!1,!1)}:{a:()=>Wo(a,e,!0,!0),b:()=>Wo(e,r,!0,!0)}:{a:()=>Wo(e,a,!1,!0),b:()=>Wo(r,e,!0,!1)}}},wh=ss({spaceToBatchND_:function(e,t,n){const r=rs(e,"x","spaceToBatchND");te(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),te(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),te(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return Xa.runKernel(mr,a,s)}}),kh={kernelName:lt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>wh(e,r,a)}}},Nh={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>zo(e,o,!0)}}},Ih={kernelName:ht,gradFunc:e=>({x:()=>e.clone()})},Sh={kernelName:pt,gradFunc:e=>({x:()=>zl(e)})},Ch={kernelName:dt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Ll(Bo(Ao(r,a),Eu(r,s)),e,zl(e))}}},Th={kernelName:mt,inputsToSave:["x"],gradFunc:ah.gradFunc},$h={kernelName:gt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=pe(a,t[0].shape)[0],i=r.map((e=>e[s]));return $l(e,i,s).map((e=>()=>e))}},Eh={kernelName:yt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return te(Hi(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>uo(r.shape,e,a,i,o,l),filter:()=>ql(r,e,a.shape,i,o,l)}}},Rh={kernelName:xt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>oo(e,a,s,i,o,1,l),filter:()=>ql(e,r,a.shape,s,i,o,l)}}},Ah=ss({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Ki(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Ki(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),te(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),te(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),te(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),te(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),te(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return Xa.runKernel(wt,o,l)}}),_h={kernelName:vt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;te(Hi(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>po(i.shape,e,o,a,s),filter:()=>Ah(i,e,o.shape,a,s)}}},Fh=ss({sin_:function(e){const t={x:rs(e,"x","sin")};return Xa.runKernel(lr,t)}}),Dh={kernelName:Nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(rl(Fh(Hs(n,"float32"))),e)}}},Oh=ss({sinh_:function(e){const t={x:rs(e,"x","sinh")};return Xa.runKernel(ur,t)}}),Mh={kernelName:It,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(Oh(Hs(n,"float32")),e)}}},Lh=ss({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:rs(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return Xa.runKernel(St,a,s)}}),zh={kernelName:St,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=Zo([a],r.rank);let n=Lh(e,a,s,!i);return null!=t&&(n=Pl(n,t)),n}}}},Ph={kernelName:Et,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;te(Hi(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return te(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),te(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),te(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),te(ji(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),null!=i&&te(oe(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),{x:()=>nu(l.shape,e,u,a,s,o,i),filter:()=>tu(l,e,u.shape,a,s,o,i)}}},Bh={kernelName:Ft,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>Xa.runKernel(Dt,s,n),filter:()=>Xa.runKernel(Ot,i,n)}}},Wh={kernelName:zt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Xa.runKernel(Pt,r)}}},Vh={kernelName:Bt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Mo(No(rl(tl(n))),2/Math.sqrt(Math.PI));return{x:()=>Mo(e,r)}}},Uh={kernelName:Vt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,n)}}},Gh={kernelName:Ut,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Ki(e,n.shape)}}},Hh={kernelName:Gt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,No(n))}}},jh={kernelName:Kt,gradFunc:e=>({x:()=>zl(e)})},qh={kernelName:Xt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=wo(n.shape,r.shape);return{a:()=>{const t=yo(e,Hs(r,"float32")),s=vo(n.shape,a);return s.length>0?Ki(zo(t,s),n.shape):t},b:()=>{let t=Mo(e,Hs(n,"float32"));const s=vo(r.shape,a);s.length>0&&(t=Ki(zo(t,s),r.shape));const i=tl(r);return rl(yo(t,Hs(i,"float32")))}}}},Kh=ss({rsqrt_:function(e){const t={x:rs(e,"x","rsqrt")};return Xa.runKernel(rr,t)}}),Xh={kernelName:Yt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?$i(1):o,u=vo(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const h=Lo(a,s),p=Mo(e,l),d=Kh(Ai(i,$i(r))),f=Mo(Mo(Mo(d,d),d),$i(-.5));return{x:()=>1===s.rank?Ki(Mo(Mo(e,So(Ki(d,[1,1,1,s.shape[0]]),c)),l),a.shape):Ki(Mo(Mo(e,d),l),a.shape),mean:()=>{let e=Mo(Mo(d,$i(-1)),p);return 1===s.rank&&(e=zo(e,u)),Ki(e,s.shape)},variance:()=>{let e=Mo(Mo(f,h),p);return 1===s.rank&&(e=zo(e,u)),Ki(e,s.shape)},scale:()=>{const t=Mo(h,d);let n=Mo(e,t);return 1===s.rank&&(n=zo(n,u)),Ki(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=zo(t,u)),Ki(t,s.shape)}}}},Yh=ss({unsortedSegmentSum_:function(e,t,n){const r=rs(e,"x","unsortedSegmentSum"),a=rs(t,"segmentIds","unsortedSegmentSum","int32");te(oe(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},i={numSegments:n};return Xa.runKernel(zr,s,i)}}),Qh={kernelName:Qt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=pe(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),c=u.length,h=Zh(0,l),p=Zh(l+1,l+1+c),d=Jh([o,[n],u]),f=Ki(e,d),m=Ki(a,[n]),g=Jh([[l],h,p]),y=Pl(f,g);let b=Yh(y,m,r.shape[i]);const x=Jo(g);return b=Pl(b,x),b},indices:()=>a}}};function Zh(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Jh(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const ep={kernelName:en,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>zl(n),b:()=>zl(r)}}},tp={kernelName:tn,gradFunc:e=>({x:()=>Hs(e,"float32")})},np={kernelName:an,gradFunc:e=>({x:()=>zl(e)})},rp={kernelName:sn,gradFunc:e=>({x:()=>zl(e)})},ap={kernelName:on,gradFunc:e=>({x:()=>zl(e)})},sp={kernelName:ln,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=Ro(r,0);return{x:()=>Ll(s,e,Mo(e,a))}}},ip={kernelName:dn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yo(e,Ai(n,1))}}},op={kernelName:pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yo(e,Hs(n,"float32"))}}},lp={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=No(r);return Lo(e,Mo(zo(e,a,!0),t))}}}},up=ss({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return Xa.runKernel(bn,o,l)}}),cp={kernelName:yn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>up(r,a,e,s,i,o,l)}}};function hp(e,t,n,r){return t.rank<n.rank&&(t=Ki(t,Yo(t.shape,r))),e.rank<n.rank&&(e=Ki(e,Yo(e.shape,r))),{x:()=>Mo(e,Hs(ko(n,t),e.dtype))}}const pp={kernelName:xn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=hp(e,t[1],s,pe(a,s.shape));return{x:()=>i.x()}}},dp=ss({less_:function(e,t){let n=rs(e,"a","less","string_or_numeric"),r=rs(t,"b","less","string_or_numeric");[n,r]=Wa(n,r),wo(n.shape,r.shape);const a={a:n,b:r};return Xa.runKernel(un,a)}}),fp={kernelName:vn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Mo(e,Hs(Ao(n,r),"float32")),b:()=>Mo(e,Hs(dp(n,r),"float32"))}}},mp=ss({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=rs(e,"dy","maxPool3dGrad"),l=rs(t,"input","maxPool3dGrad"),u=rs(n,"output","maxPool3dGrad");let c=o,h=l,p=u,d=!1;4===l.rank&&(d=!0,c=Ki(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Ki(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=Ki(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),te(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),te(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),te(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),null!=i&&te(oe(s),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const f={dy:c,input:h,output:p},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=Xa.runKernel(In,f,m);return d?Ki(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),gp={kernelName:Nn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>mp(e,r,a,s,i,o,l)}}},yp=ss({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=rs(e,"dy","maxPoolGrad"),l=rs(t,"input","maxPoolGrad"),u=rs(n,"output","maxPoolGrad");te(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),te(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),te(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&te(oe(s),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const c={dy:o,input:l,output:u},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return Xa.runKernel(kn,c,h)}}),bp={kernelName:wn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>yp(e,r,a,s,i,o)}}},xp={kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=pe(a,r.shape),i=se(Xo(r.shape,s)[1]);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=Ki(e,t);return yo(Mo(n,ol(r.shape,"float32")),i)}}}},vp={kernelName:Tn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=hp(e,i,s,pe(a,s.shape));return{x:()=>o.x()}}},wp={kernelName:$n,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Mo(e,Hs(Eu(n,r),"float32")),b:()=>Mo(e,Hs(Ro(n,r),"float32"))}}},kp={kernelName:En,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>wl(e,s,r.shape)}}},Np={kernelName:Rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=wo(n.shape,r.shape);return{a:()=>{const t=vo(n.shape,a);return t.length>0?Ki(zo(e,t),n.shape):e},b:()=>{const t=Mo(e,rl($o(yo(n,r)))),s=vo(r.shape,a);return s.length>0?Ki(zo(t,s),r.shape):t}}}},Ip={kernelName:_n,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=wo(n.shape,r.shape);return{a:()=>{const t=Mo(e,Hs(r,"float32")),s=vo(n.shape,a);return s.length>0?Ki(zo(t,s),n.shape):t},b:()=>{const t=Mo(e,Hs(n,"float32")),s=vo(r.shape,a);return s.length>0?Ki(zo(t,s),r.shape):t}}}},Sp={kernelName:Fn,gradFunc:e=>({x:()=>rl(e)})},Cp={kernelName:Pn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>il(n.shape,"float32")}}},Tp={kernelName:zn,gradFunc:e=>({x:()=>zl(e)})},$p={kernelName:Bn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Ol(e,r).map((e=>()=>e))}},Ep={kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>wl(e,s,r.shape)}}},Rp={kernelName:Vn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=wo(s.shape,i.shape);return{a:()=>{const t=Hs(i,"float32");let n=Mo(e,Mo(t,Mu(s,Lo(t,$i(1)))));const r=vo(s.shape,o);return r.length>0&&(n=zo(n,r)),Ki(n,s.shape)},b:()=>{const t=Ro(s,0),n=Ll(t,Fo(s),zl(s));let r=Mo(e,Mo(a,n));const l=vo(i.shape,o);return l.length>0&&(r=zo(r,l)),Ki(r,i.shape)}}}},Ap={kernelName:Un,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=Ro(n,0);return{x:()=>Ll(a,e,Mo(e,r)),alpha:()=>{let t=Ll(a,zl(e),Mo(e,n));const s=vo(r.shape,e.shape);return s.length>0&&(t=zo(t,s)),Ki(t,r.shape)}}}},_p={kernelName:Mt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=wo(n.shape,r.shape);return{a:()=>{const t=yo(e,Hs(r,"float32")),s=vo(n.shape,a);return s.length>0?Ki(zo(t,s),n.shape):t},b:()=>{let t=Mo(e,Hs(n,"float32"));const s=vo(r.shape,a);s.length>0&&(t=Ki(zo(t,s),r.shape));const i=tl(r);return rl(yo(t,Hs(i,"float32")))}}}},Fp={kernelName:qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yo(e,rl(tl(n)))}}},Dp={kernelName:er,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Mo(Eu(n,6),Xl(n));return{x:()=>Mo(e,Hs(r,"float32"))}}},Op={kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,Hs(Xl(n),"float32"))}}},Mp={kernelName:Xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ki(e,n.shape)}}},Lp={kernelName:Zn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>Xa.runKernel(Jn,a,n)}}},zp={kernelName:Yn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>Xa.runKernel(Qn,a,n)}}},Pp={kernelName:tr,gradFunc:(e,t,n)=>{const{dims:r}=n,a=pe(r,e.shape);return{x:()=>yl(e,a)}}},Bp={kernelName:nr,gradFunc:e=>({x:()=>zl(e)})},Wp={kernelName:rr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>rl(yo(e,Mo(Mu(n,1.5),2)))}}},Vp=ss({logicalNot_:function(e){const t={x:rs(e,"x","logicalNot","bool")};return Xa.runKernel(mn,t)}}),Up={kernelName:sr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Hs(zl(n),"float32"),t:()=>Mo(e,Hs(n,e.dtype)),e:()=>Mo(e,Hs(Vp(n),e.dtype))}}},Gp={kernelName:ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ro(n,$i(0)),r=$i($c),a=$i(Ec),s=Mo(e,a),i=Mo(Mo(e,r),No(Hs(n,"float32")));return Ll(t,s,i)}}}},Hp={kernelName:hr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,Mo(n,Lo($i(1),n)))}}},jp={kernelName:cr,gradFunc:e=>({x:()=>zl(e)})},qp=ss({cos_:function(e){const t={x:rs(e,"x","cos")};return Xa.runKernel(Nt,t)}}),Kp={kernelName:lr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(qp(Hs(n,"float32")),e)}}},Xp=ss({cosh_:function(e){const t={x:rs(e,"x","cosh")};return Xa.runKernel(It,t)}}),Yp={kernelName:ur,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(Xp(Hs(n,"float32")),e)}}},Qp={kernelName:or,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=gi(r,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>ul(e,u)}}},Zp={kernelName:yr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=Mo(e,r);return{logits:()=>Lo(s,Mo(zo(s,[a],!0),r))}}},Jp={kernelName:pr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,vl(n))}}},ed=ss({batchToSpaceND_:function(e,t,n){const r=rs(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));te(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),te(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),te(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},i={blockShape:t,crops:n};return Xa.runKernel(lt,s,i)}}),td={kernelName:mr,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>ed(e,r,a)}}},nd={kernelName:gr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>no(e,r)}}},rd=[ah,sh,ih,oh,lh,uh,ch,hh,ph,dh,fh,mh,yh,xh,vh,kh,Nh,Ih,Sh,Ch,Th,$h,Rh,Eh,_h,Dh,Mh,zh,Ph,Bh,_p,Wh,Vh,Uh,Gh,Hh,qh,jh,Xh,Qh,ep,tp,np,rp,ap,sp,ip,op,lp,cp,pp,pp,fp,gp,bp,xp,vp,wp,kp,Np,Ip,Sp,Cp,Tp,$p,Ep,Ep,Rp,Ap,Fp,Dp,Op,Mp,Lp,zp,Pp,Bp,Wp,Up,Gp,Hp,jp,Kp,Yp,Qp,Zp,Jp,td,td,nd,nd,{kernelName:dr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yo(e,Mo(El(Hs(n,"float32")),2))}}},{kernelName:Nr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=$i(2);return{a:()=>Mo(e,Mo(a,Lo(n,r))),b:()=>Mo(e,Mo(a,Lo(r,n)))}}},{kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,Mo(Hs(n,"float32"),2))}}},{kernelName:Br,gradFunc:e=>({x:()=>zl(e)})},{kernelName:Er,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=wo(n.shape,r.shape);return{a:()=>{let t=e;const r=vo(n.shape,a);return r.length>0&&(t=zo(t,r)),Ki(t,n.shape)},b:()=>{let t=e;const n=vo(r.shape,a);return n.length>0&&(t=zo(t,n)),Ki(rl(t),r.shape)}}}},{kernelName:fr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;pe(s,r.shape).forEach((e=>{a[e]=1}));const i=Ki(e,a),o=Mo(i,ol(r.shape,"float32"));return{x:()=>o}}},{kernelName:Rr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yo(e,tl(qp(n)))}}},{kernelName:Ar,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(Lo($i(1),tl(n)),e)}}},{kernelName:_r,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=zl(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Ai(t,wl(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Ai(t,wl(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=Ai(t,wl(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=Ai(t,wl(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Or,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=Jo(a);return{x:()=>Pl(e,s)}}},{kernelName:Lr,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Al(e,a)}}},{kernelName:zr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Go(t,zl(t)),r=Eo(e,n);let a=Ao(t,$i(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=Io(a,e+1);a=Bo(a,ol(r.shape,"bool"));const i=zl(r);return Ll(a,r,i)}(e,n)}}},{kernelName:Pr,gradFunc:e=>({x:()=>zl(e)})}];for(const e of rd)Qr(e);Aa().prototype.abs=function(){return this.throwIfDisposed(),Ri(this)};const ad=ss({acos_:function(e){const t={x:rs(e,"x","acos")};return Xa.runKernel(Ge,t)}});Aa().prototype.acos=function(){return this.throwIfDisposed(),ad(this)};const sd=ss({acosh_:function(e){const t={x:rs(e,"x","acosh")};return Xa.runKernel(He,t)}});Aa().prototype.acosh=function(){return this.throwIfDisposed(),sd(this)},Aa().prototype.add=function(e){return this.throwIfDisposed(),Ai(this,e)},Aa().prototype.all=function(e,t){return this.throwIfDisposed(),_i(this,e,t)},Aa().prototype.any=function(e,t){return this.throwIfDisposed(),Fi(this,e,t)},Aa().prototype.argMax=function(e){return this.throwIfDisposed(),Di(this,e)};const id=ss({argMin_:function(e,t=0){const n={x:rs(e,"x","argMin")},r={axis:t};return Xa.runKernel(Qe,n,r)}});Aa().prototype.argMin=function(e){return this.throwIfDisposed(),id(this,e)},Aa().prototype.asScalar=function(){return this.throwIfDisposed(),te(1===this.size,(()=>"The array must have only 1 element.")),Ki(this,[])},Aa().prototype.asType=function(e){return this.throwIfDisposed(),Hs(this,e)},Aa().prototype.as1D=function(){return this.throwIfDisposed(),Ki(this,[this.size])},Aa().prototype.as2D=function(e,t){return this.throwIfDisposed(),Ki(this,[e,t])},Aa().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Ki(this,[e,t,n])},Aa().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Ki(this,[e,t,n,r])},Aa().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Ki(this,[e,t,n,r,a])};const od=ss({asin_:function(e){const t={x:rs(e,"x","asin")};return Xa.runKernel(Ze,t)}});Aa().prototype.asin=function(){return this.throwIfDisposed(),od(this)};const ld=ss({asinh_:function(e){const t={x:rs(e,"x","asinh")};return Xa.runKernel(Je,t)}});Aa().prototype.asinh=function(){return this.throwIfDisposed(),ld(this)};const ud=ss({atan_:function(e){const t={x:rs(e,"x","atan")};return Xa.runKernel(et,t)}});Aa().prototype.atan=function(){return this.throwIfDisposed(),ud(this)};const cd=ss({atan2_:function(e,t){let n=rs(e,"a","atan2"),r=rs(t,"b","atan2");[n,r]=Wa(n,r);const a={a:n,b:r};return Xa.runKernel(nt,a)}});Aa().prototype.atan2=function(e){return this.throwIfDisposed(),cd(this,e)};const hd=ss({atanh_:function(e){const t={x:rs(e,"x","atanh")};return Xa.runKernel(tt,t)}});Aa().prototype.atanh=function(){return this.throwIfDisposed(),hd(this)},Aa().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Xi(this,e,t,n,r)},Aa().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),ed(this,e,t)},Aa().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Qi(this,e,t,n,r,a)},Aa().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Ml(this,e)},Aa().prototype.cast=function(e){return this.throwIfDisposed(),Hs(this,e)};const pd=ss({ceil_:function(e){const t={x:rs(e,"x","ceil")};return Xa.runKernel(pt,t)}});Aa().prototype.ceil=function(){return this.throwIfDisposed(),pd(this)},Aa().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),to(this,e,t)},Aa().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ra&&(e=[e]),no([this,...e],t)},Aa().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),lo(this,e,t,n,r,a,s)},Aa().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),co(this,e,t,n,r,a)},Aa().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),oo(this,e,t,n,r,a,s)},Aa().prototype.cos=function(){return this.throwIfDisposed(),qp(this)},Aa().prototype.cosh=function(){return this.throwIfDisposed(),Xp(this)},Aa().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Lh(this,e,t,n)};const dd=ss({depthToSpace_:function(e,t,n="NHWC"){const r=rs(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];te(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),te(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),te(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return Xa.runKernel($t,o,l)}});Aa().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),dd(this,e,t)},Aa().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),mo(this,e,t,n,r,a,s)};const fd=ss({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const i=rs(e,"x","dilation2d"),o=rs(t,"filter","dilation2d");te(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),te(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),te("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=Ki(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:a},p=Xa.runKernel(Ft,c,h);return u?Ki(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});Aa().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),fd(this,e,t,n,r,a)};const md=ss({divNoNan_:function(e,t){let n=rs(e,"a","div"),r=rs(t,"b","div");[n,r]=Wa(n,r);const a=yo(n,r),s=zl(a),i=ko(r,s);return Ll(i,s,a)}});Aa().prototype.divNoNan=function(e){return this.throwIfDisposed(),md(this,e)},Aa().prototype.div=function(e){return this.throwIfDisposed(),yo(this,e)};const gd=ss({dot_:function(e,t){const n=rs(e,"t1","dot"),r=rs(t,"t2","dot");te(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(te(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=Ki(n,[1,-1]),t=Ki(r,[-1,1]),a=Wo(e,t);return Ki(a,[])}if(1===n.rank&&2===r.rank){const e=Ki(n,[1,-1]),t=Ki(r,[r.shape[0],r.shape[1]]),a=Wo(e,t);return Ki(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Ki(r,[-1,1]),t=Wo(n,e);return Ki(t,[t.size])}{const e=Ki(r,[r.shape[0],r.shape[1]]);return Wo(n,e)}}});Aa().prototype.dot=function(e){return this.throwIfDisposed(),gd(this,e)},Aa().prototype.elu=function(){return this.throwIfDisposed(),bo(this)},Aa().prototype.equal=function(e){return this.throwIfDisposed(),ko(this,e)};const yd=ss({erf_:function(e){let t=rs(e,"x","erf");te("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Hs(t,"float32"));const n={x:t};return Xa.runKernel(Bt,n)}});Aa().prototype.erf=function(){return this.throwIfDisposed(),yd(this)},Aa().prototype.exp=function(){return this.throwIfDisposed(),No(this)},Aa().prototype.expandDims=function(e){return this.throwIfDisposed(),Io(this,e)};const bd=ss({expm1_:function(e){const t={x:rs(e,"x","expm1")};return Xa.runKernel(Gt,t)}});Aa().prototype.expm1=function(){return this.throwIfDisposed(),bd(this)},Aa().prototype.fft=function(){return this.throwIfDisposed(),Ul(this)},Aa().prototype.flatten=function(){return this.throwIfDisposed(),Ki(this,[this.size])},Aa().prototype.floor=function(){return this.throwIfDisposed(),$o(this)},Aa().prototype.floorDiv=function(e){return this.throwIfDisposed(),go(this,e)},Aa().prototype.gather=function(e,t){return this.throwIfDisposed(),Eo(this,e,t)},Aa().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Ao(this,e)},Aa().prototype.greater=function(e){return this.throwIfDisposed(),Ro(this,e)},Aa().prototype.ifft=function(){return this.throwIfDisposed(),Hl(this)},Aa().prototype.irfft=function(){return this.throwIfDisposed(),jl(this)};const xd=ss({isFinite_:function(e){const t={x:rs(e,"x","isFinite")};return Xa.runKernel(an,t)}});Aa().prototype.isFinite=function(){return this.throwIfDisposed(),xd(this)};const vd=ss({isInf_:function(e){const t={x:rs(e,"x","isInf")};return Xa.runKernel(sn,t)}});Aa().prototype.isInf=function(){return this.throwIfDisposed(),vd(this)};const wd=ss({isNaN_:function(e){const t={x:rs(e,"x","isNaN")};return Xa.runKernel(on,t)}});Aa().prototype.isNaN=function(){return this.throwIfDisposed(),wd(this)},Aa().prototype.leakyRelu=function(e){return this.throwIfDisposed(),_o(this,e)},Aa().prototype.lessEqual=function(e){return this.throwIfDisposed(),Eu(this,e)},Aa().prototype.less=function(e){return this.throwIfDisposed(),dp(this,e)};const kd=ss({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=rs(e,"x","localResponseNormalization");te(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),te(oe(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=Ki(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},c=Xa.runKernel(yn,l,u);return o?Ki(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Aa().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),kd(this,e,t,n,r)};const Nd=ss({logSigmoid_:function(e){const t=rs(e,"x","logSigmoid"),n=Ti((e=>({value:rl(Tl(rl(e))),gradFunc:t=>Mo(t,vl(rl(e)))})));return n(t)}});Aa().prototype.logSigmoid=function(){return this.throwIfDisposed(),Nd(this)},Aa().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Po(this,e)},Aa().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Hu(this,e,t)},Aa().prototype.log=function(){return this.throwIfDisposed(),Fo(this)},Aa().prototype.log1p=function(){return this.throwIfDisposed(),Do(this)},Aa().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Bo(this,e)},Aa().prototype.logicalNot=function(){return this.throwIfDisposed(),Vp(this)};const Id=ss({logicalOr_:function(e,t){const n=rs(e,"a","logicalOr","bool"),r=rs(t,"b","logicalOr","bool");wo(n.shape,r.shape);const a={a:n,b:r};return Xa.runKernel(gn,a)}});Aa().prototype.logicalOr=function(e){return this.throwIfDisposed(),Id(this,e)};const Sd=ss({logicalXor_:function(e,t){const n=rs(e,"a","logicalXor","bool"),r=rs(t,"b","logicalXor","bool");return wo(n.shape,r.shape),Bo(Id(e,t),Vp(Bo(e,t)))}});Aa().prototype.logicalXor=function(e){return this.throwIfDisposed(),Sd(this,e)},Aa().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Wo(this,e,t,n)},Aa().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Vo(this,e,t,n,r)},Aa().prototype.max=function(e,t){return this.throwIfDisposed(),Oo(this,e,t)},Aa().prototype.maximum=function(e){return this.throwIfDisposed(),Go(this,e)},Aa().prototype.mean=function(e,t){return this.throwIfDisposed(),Ho(this,e,t)},Aa().prototype.min=function(e,t){return this.throwIfDisposed(),Ou(this,e,t)},Aa().prototype.minimum=function(e){return this.throwIfDisposed(),jo(this,e)};const Cd=ss({mirrorPad_:function(e,t,n){te("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=rs(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");te(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)te(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),te(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},i={x:r};return Xa.runKernel(En,i,s)}});Aa().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Cd(this,e,t)};const Td=ss({mod_:function(e,t){let n=rs(e,"a","mod"),r=rs(t,"b","mod");[n,r]=Wa(n,r);const a={a:n,b:r};return Xa.runKernel(Rn,a)}});Aa().prototype.mod=function(e){return this.throwIfDisposed(),Td(this,e)},Aa().prototype.mul=function(e){return this.throwIfDisposed(),Mo(this,e)},Aa().prototype.neg=function(){return this.throwIfDisposed(),rl(this)},Aa().prototype.norm=function(e,t,n){return this.throwIfDisposed(),zu(this,e,t,n)},Aa().prototype.notEqual=function(e){return this.throwIfDisposed(),al(this,e)},Aa().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),sl(this,e,t,n)},Aa().prototype.onesLike=function(){return this.throwIfDisposed(),ll(this)},Aa().prototype.pad=function(e,t){return this.throwIfDisposed(),ul(this,e,t)};const $d=ss({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const i=rs(e,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=Ki(i,[1,i.shape[0],i.shape[1],i.shape[2]])),te(ji(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const u=Mi(o.shape,t,s,a,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[d,f]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([u.inHeight,u.inWidth],c,h),m=p?r:"valid",g=p?o:wh(o,c,d),y=("avg"===n?()=>Xi(g,t,s,m):()=>Vo(g,t,s,m))(),b=p?y:ed(y,c,f);return l?Ki(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});Aa().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),$d(this,e,t,n,r,a)},Aa().prototype.pow=function(e){return this.throwIfDisposed(),Mu(this,e)},Aa().prototype.prelu=function(e){return this.throwIfDisposed(),cl(this,e)};const Ed=ss({prod_:function(e,t=null,n=!1){let r=rs(e,"x","prod");"bool"===r.dtype&&(r=Hs(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Xa.runKernel(Gn,a,s)}});Aa().prototype.prod=function(e,t){return this.throwIfDisposed(),Ed(this,e,t)};const Rd=ss({reciprocal_:function(e){const t={x:rs(e,"x","reciprocal")};return Xa.runKernel(qn,t)}});Aa().prototype.reciprocal=function(){return this.throwIfDisposed(),Rd(this)},Aa().prototype.relu=function(){return this.throwIfDisposed(),gl(this)},Aa().prototype.relu6=function(){return this.throwIfDisposed(),Kl(this)},Aa().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Ki(this,e.shape)},Aa().prototype.reshape=function(e){return this.throwIfDisposed(),Ki(this,e)},Aa().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Cu(this,e,t,n)},Aa().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Tu(this,e,t,n)},Aa().prototype.reverse=function(e){return this.throwIfDisposed(),yl(this,e)},Aa().prototype.rfft=function(){return this.throwIfDisposed(),Gl(this)},Aa().prototype.round=function(){return this.throwIfDisposed(),Ru(this)},Aa().prototype.rsqrt=function(){return this.throwIfDisposed(),Kh(this)},Aa().prototype.selu=function(){return this.throwIfDisposed(),bl(this)},Aa().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),xl(this,e,t,n,r,a,s)},Aa().prototype.sigmoid=function(){return this.throwIfDisposed(),vl(this)};const Ad=ss({sign_:function(e){const t={x:rs(e,"x","sign")};return Xa.runKernel(cr,t)}});Aa().prototype.sign=function(){return this.throwIfDisposed(),Ad(this)},Aa().prototype.sin=function(){return this.throwIfDisposed(),Fh(this)},Aa().prototype.sinh=function(){return this.throwIfDisposed(),Oh(this)},Aa().prototype.slice=function(e,t){return this.throwIfDisposed(),wl(this,e,t)},Aa().prototype.softmax=function(e){return this.throwIfDisposed(),Cl(this,e)},Aa().prototype.softplus=function(){return this.throwIfDisposed(),Tl(this)},Aa().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),wh(this,e,t)},Aa().prototype.split=function(e,t){return this.throwIfDisposed(),$l(this,e,t)},Aa().prototype.sqrt=function(){return this.throwIfDisposed(),El(this)},Aa().prototype.square=function(){return this.throwIfDisposed(),tl(this)},Aa().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Gu(this,e)},Aa().prototype.squeeze=function(e){return this.throwIfDisposed(),Rl(this,e)},Aa().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Ra?[this,e]:[this,...e];return Al(n,t)},Aa().prototype.step=function(e){return this.throwIfDisposed(),Xl(this,e)};const _d=ss({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,l=0){const u={x:rs(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Xa.runKernel(Sr,u,c)}});Aa().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),_d(this,e,t,n,r,a,s,i,o)},Aa().prototype.sub=function(e){return this.throwIfDisposed(),Lo(this,e)},Aa().prototype.sum=function(e,t){return this.throwIfDisposed(),zo(this,e,t)};const Fd=ss({tan_:function(e){const t={x:rs(e,"x","tan")};return Xa.runKernel(Rr,t)}});Aa().prototype.tan=function(){return this.throwIfDisposed(),Fd(this)},Aa().prototype.tanh=function(){return this.throwIfDisposed(),_l(this)},Aa().prototype.tile=function(e){return this.throwIfDisposed(),So(this,e)},Aa().prototype.toBool=function(){return this.throwIfDisposed(),Hs(this,"bool")},Aa().prototype.toFloat=function(){return this.throwIfDisposed(),Hs(this,"float32")},Aa().prototype.toInt=function(){return this.throwIfDisposed(),Hs(this,"int32")};const Dd=ss({topk_:function(e,t=1,n=!0){const r=rs(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},i={k:t,sorted:n},[o,l]=Xa.runKernel(Fr,s,i);return{values:o,indices:l}}});Aa().prototype.topk=function(e,t){return this.throwIfDisposed(),Dd(this,e,t)},Aa().prototype.transpose=function(e){return this.throwIfDisposed(),Pl(this,e)};const Od=ss({unique_:function(e,t=0){const n=rs(e,"x","unique","string_or_numeric");te(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,i]=Xa.runKernel(Mr,r,a);return{values:s,indices:i}}});let Md;function Ld(){return null==Md&&(Md=Xa.backend.epsilon()),Md}Aa().prototype.unique=function(e){return this.throwIfDisposed(),Od(this,e)},Aa().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Yh(this,e,t)},Aa().prototype.unstack=function(e){return this.throwIfDisposed(),Ol(this,e)},Aa().prototype.where=function(e,t){return this.throwIfDisposed(),Ll(e,this,t)},Aa().prototype.zerosLike=function(){return this.throwIfDisposed(),zl(this)};class zd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,zd.prototype)}}class Pd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Pd.prototype)}}class Bd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Bd.prototype)}}class Wd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Wd.prototype)}}class Vd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Vd.prototype)}}function Ud(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Gd(e,t){if(!e)throw new Vd(t)}function Hd(e,t){let n=0;for(const r of e)r===t&&n++;return n}function jd(e){return 1===e.length?e[0]:e}function qd(e){return Array.isArray(e)?e:[e]}function Kd(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Xd(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let Yd={};function Qd(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Zd(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Zd(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Zd(t):e[n]=t.value)}}}function Jd(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in Yd)s=Yd[a];else if(s=t[a],null==s)throw new Bd(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new Bd(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,l;if(i in n?[o,l]=n[i]:i in Yd?[o,l]=Yd.className:i in t&&([o,l]=t[i]),null==o)throw new Bd(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(Yd))e[t]=Yd[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},Yd);for(const e of Object.keys(n))Yd[e]=n[e];Zd(s.config);const r=l(o,s.config,n,a);return Yd=Object.assign({},t),r}{const e=Object.assign({},Yd);for(const e of Object.keys(n))Yd[e]=n[e];const t=new o(s.config);return Yd=Object.assign({},e),t}}}function ef(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function tf(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function nf(e){if(null==e)throw new Bd(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function rf(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Bd(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function af(e,t,n=0,r=1/0){return Gd(n>=0),Gd(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function sf(e,t){Array.isArray(e)?(te(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>sf(e,`element ${n+1} of ${t}`)))):te(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${of(e)}.`))}function of(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>of(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function lf(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function uf(e,t){return Ni((()=>El(zo(Mo(e,e),t,!0))))}class cf extends bi{getConfig(){return{}}}class hf extends cf{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ni((()=>{const t=uf(e,this.axis),n=to(t,0,this.maxValue);return Mo(e,yo(n,Ai(Ld(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}hf.className="MaxNorm",vi(hf);class pf extends cf{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ni((()=>yo(e,Ai(Ld(),uf(e,this.axis)))))}getConfig(){return{axis:this.axis}}}pf.className="UnitNorm",vi(pf);class df extends cf{apply(e){return gl(e)}}df.className="NonNeg",vi(df);class ff extends cf{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ni((()=>{const t=uf(e,this.axis),n=Ai(Mo(this.rate,to(t,this.minValue,this.maxValue)),Mo(1-this.rate,t));return Mo(e,yo(n,Ai(Ld(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ff.className="MinMaxNorm",vi(ff);const mf={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function gf(e){return Qd(e)}function yf(e,t={}){return Jd(e,xi.getMap().classNameMap,t,"constraint")}function bf(e){return null==e?null:"string"==typeof e?yf({className:e in mf?mf[e]:e,config:{}}):e instanceof cf?e:yf(e)}const xf=["channelsFirst","channelsLast"],vf=["nearest","bilinear"],wf=["valid","same","causal"],kf=["max","avg"],Nf=["sum","mul","concat","ave"],If=new Map;function Sf(e){rf(xf,"DataFormat",e)}function Cf(e){rf(wf,"PaddingMode",e)}function Tf(e){rf(kf,"PoolMode",e)}const $f=[];function Ef(e,t){$f.push(e);try{const e=t();return $f.pop(),e}catch(e){throw $f.pop(),e}}function Rf(e){if(!Ff(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===$f.length?"":$f.join("/")+"/")+e}function Af(e){if(!Ff(e))throw new Error("Not a valid tensor name: '"+e+"'");If.has(e)||If.set(e,0);const t=If.get(e);if(If.set(e,If.get(e)+1),t>0){const n=`${e}_${t}`;return If.set(n,1),n}return e}const _f=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ff(e){return!!e.match(_f)}function Df(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Of(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Mf(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Lf(e,t){if(t<e)throw new Bd(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function zf(e,t){return Hs(e,t)}function Pf(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Ki(e,n)}function Bf(e,t,n){return Ni((()=>{switch(e.rank){case 1:return kl(e,t,n);case 2:return Nl(e,[t,0],[n,e.shape[1]]);case 3:return Il(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Sl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return wl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return wl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Bd(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Wf(e,t,n){return Ni((()=>{switch(e.rank){case 1:return kl(e,t,n);case 2:return Nl(e,[0,t],[e.shape[0],n]);case 3:return Il(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Sl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Bd(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Vf(e,t,n,r){return Ni((()=>{switch(e.rank){case 1:return kl(e,t,n);case 2:switch(r){case 1:return Bf(e,t,n);case 2:return Wf(e,t,n);default:throw new Bd(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Bf(e,t,n);case 2:return Il(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Wf(e,t,n);default:throw new Bd(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Bf(e,t,n);case 2:return Sl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Sl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Wf(e,t,n);default:throw new Bd(`The axis is not within the rank of the tensor ${r}`)}default:throw new Bd(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Uf(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),no(e,t)}function Gf(e,t){switch(e.rank){case 1:return ro([e,t]);case 2:return ao([e,t],0);case 3:return so([e,t],0);case 4:return io([e,t],0);default:throw new Bd(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Hf(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Bd(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return So(e,t)}function jf(e,t=0,n=1,r,a){return fl(e,t,n,r,a)}function qf(e,t,n,r){if(e.rank<2||t.rank<2)throw new Wd(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Wd(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return au({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Yf(e.rank,r,"channelsLast"):null,activation:n});{const a=e.shape.slice(),s=a.pop();e=Ki(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Ki(Pl(t,c),[l,-1]);const h=[...a,...u];return Ki(au({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Yf(e.rank,r,"channelsLast"):null,activation:n}),h)}}function Kf(e,t,n){return Ni((()=>(t=Array.isArray(t)?Fl(t,"int32"):Hs(t,"int32"),Eo(e,t,n))))}function Xf(e){return Mo(e,e)}function Yf(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Bd(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Ki(t,[1,r[0],1,1,1]):Ki(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Ki(t,[1,1,1,1,r[0]]):Ki(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Ki(t,[1,r[0],1,1]):Ki(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Ki(t,[1,1,1,r[0]]):Ki(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Ki(t,[1,r[0],1]):Ki(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Ki(t,[1,1,r[0]]):Ki(t,[1].concat(r))}else if(e<3)return t;throw new Bd(`Unsupported input rank by biasAdd: ${t.rank}`)}function Qf(e,t,n){return Ni((()=>(null==n&&(n="channelsLast"),Sf(n),Ai(e,Yf(e.rank,t,n)))))}function Zf(e,t,n,r){return Ni((()=>Bl(e,t,n,r)))}function Jf(e,t,n=!1){return n?e():t()}const em=["fanIn","fanOut","fanAvg"],tm=["normal","uniform","truncatedNormal"];class nm extends bi{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class rm extends nm{apply(e,t){return il(e,t)}}rm.className="Zeros",vi(rm);class am extends nm{apply(e,t){return ol(e,t)}}am.className="Ones",vi(am);class sm extends nm{constructor(e){if(super(),"object"!=typeof e)throw new Bd(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Bd(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Ni((()=>Mo($i(this.value),ol(e,t))))}getConfig(){return{value:this.value}}}sm.className="Constant",vi(sm);class im extends nm{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return ml(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}im.className="RandomUniform",vi(im);class om extends nm{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Wd(`randomNormal does not support dType ${t}.`);return jf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}om.className="RandomNormal",vi(om);class lm extends nm{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Wd(`truncatedNormal does not support dType ${t}.`);return Dl(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}lm.className="TruncatedNormal",vi(lm);class um extends nm{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Ni((()=>{if(2!==e.length||e[0]!==e[1])throw new Bd("Identity matrix initializer can only be used for 2D square matrices.");return Mo(this.gain,Co(e[0]))}))}getConfig(){return{gain:this.gain}}}um.className="Identity",vi(um);class cm extends nm{constructor(e){if(super(),e.scale<0)throw new Bd(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,rf(em,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){rf(tm,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Sf(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Df(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Df(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Df(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Wd(`${this.getClassName()} does not support dType ${t}.`);return Dl(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return ml(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}cm.className="VarianceScaling",vi(cm);class hm extends cm{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return cm.className}}hm.className="GlorotUniform",vi(hm);class pm extends cm{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return cm.className}}pm.className="GlorotNormal",vi(pm);class dm extends cm{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return cm.className}}dm.className="HeNormal",vi(dm);class fm extends cm{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return cm.className}}fm.className="HeUniform",vi(fm);class mm extends cm{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return cm.className}}mm.className="LeCunNormal",vi(mm);class gm extends cm{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return cm.className}}gm.className="LeCunNormal",vi(gm);class ym extends nm{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Wd("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Ni((()=>{if(e.length<2)throw new Wd("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=jf(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=ec.gramSchmidt(t);return e[0]>e[1]&&(n=Pl(n)),Mo(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}ym.className="Orthogonal",vi(ym);const bm={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function xm(e,t={}){return Jd(e,xi.getMap().classNameMap,t,"initializer")}function vm(e){return Qd(e)}function wm(e){if("string"==typeof e){const t=e in bm?bm[e]:e;if("GlorotNormal"===t)return new pm;if("GlorotUniform"===t)return new hm;if("HeNormal"===t)return new dm;if("HeUniform"===t)return new fm;if("LeCunNormal"===t)return new mm;if("LeCunUniform"===t)return new gm;{const e={};return e.className=t,e.config={},xm(e)}}return e instanceof nm?e:xm(e)}let km=0;function Nm(){return km++}const Im={};function Sm(e=""){return e in Im||(Im[e]=0),Im[e]+=1,e+Im[e].toString()}function Cm(e){return Array.isArray(e)&&Array.isArray(e[0])}function Tm(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function $m(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Bd(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Em(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Bd(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Rm(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class Am{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Nm(),n=null==n?"Variable":n,this.originalName=Rf(n),this.name=Af(this.originalName),this.trainable_=r,this.constraint=a,this.val=function(e,t=!0,n,r){return Xa.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function _m(e){return e.map((e=>e.read()))}function Fm(e){e.forEach((e=>{e[0].write(e[1])}))}class Dm{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Om{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=Nm(),null!=s&&(this.originalName=Rf(s),this.name=Af(this.originalName)),this.rank=t.length}}let Mm=0;class Lm{constructor(e,t){this.callArgs=t,this.id=Mm++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let zm=0;class Pm extends bi{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=zm++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Kd(e)+"_"+Sm(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Pd(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Bd(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return jd(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return jd(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new zd(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new zd(`Layer ${this.name} is not connected, no input to return.`);return jd(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new zd(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new zd(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return jd(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=qd(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=qd(this.inputSpec);if(e.length!==t.length)throw new Bd(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new Bd(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new Bd(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new Bd(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new Bd(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new Bd(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new Bd(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=qd(e);let r=!0;for(const e of n)if(!(e instanceof Om)){r=!1;break}let a=!0;for(const e of n)if(e instanceof Om){a=!1;break}if(r===a)throw new Bd("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ef(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of qd(e))t.push(n.shape);this.build(jd(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=qd(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=jd(s),null!=this.activityRegularizer)throw new Wd("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=qd(e);const t=[];for(const n of e)t.push(n.shape);return jd(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Om(s,n,this,qd(e),t,this.name,r))):new Om(s,r,this,qd(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Wd("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new zd(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new zd(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Pd(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Rm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return _m(e?this.trainableWeights:this.weights)}setWeights(e){Ni((()=>{const t=this.weights;if(t.length!==e.length)throw new Bd(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=_m(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!ie(s.shape,o.shape))throw new Bd(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Fm(n)}))}addWeight(e,t,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Bd(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=wm("zeros"));const o=r.apply(t,n),l=new Am(o,n,e,s,i);return o.dispose(),null!=a&&this.addLoss((()=>a.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=qd(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=qd(e);t=qd(t),n=qd(n),r=qd(r),a=Tm(a),s=Tm(s);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new Lm({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Bm(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Bm(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class Wm extends Pm{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Sm("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Bd("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Bd("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Bd("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Om(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Lm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Bd(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Vm(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Ii(r)}}function Um(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Gm;Wm.className="InputLayer",vi(Wm),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Gm||(Gm={}));class Hm{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class jm{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class qm extends Hm{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=Ni((()=>Ai(this.totals[e],Mo(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Ni((()=>{const n=Mo(yo(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Si(t[e])})))}}class Km extends Hm{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class Xm extends Hm{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ve(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=ma();return(...a)=>{const s=ma();return s-r<t||(r=s,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Vm(n),r.push(this.yield(e,t,n))),r.push(dc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Vm(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Vm(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(dc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Vm(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Vm(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(dc()):ve(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Vm(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Vm(e),await this.trainEnd(e))}}function Ym(e,t){return null==e&&(e={}),e instanceof Hm?[e]:Array.isArray(e)&&e[0]instanceof Hm?e:qd(e).map((e=>new Xm(e,t)))}class Qm{constructor(){}static registerCallbackConstructor(e,t){te(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Qm.checkForDuplicate(t),null==Qm.constructors[e]&&(Qm.constructors[e]=[]),Qm.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Qm.constructors)Qm.constructors[+t].forEach((t=>{if(t===e)throw new Bd("Duplicate callback constructor.")}))}static clear(){Qm.constructors={}}static createCallbacks(e){const t=[];for(const n in Qm.constructors){const r=+n;e>=r&&t.push(...Qm.constructors[r])}return t.map((e=>new e))}}function Zm(e,t,n,r,a,s,i,o,l){const u=new Km,c=[new qm,...Qm.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new jm(c);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Jm(e,t={},n=!1){return Jd(e,xi.getMap().classNameMap,t,"layer",n)}function eg(e,t){return Ni((()=>{"float32"!==e.dtype&&(e=Hs(e,"float32"));const n=zo(Xf(e),t,!0),r=To(n.shape,Ld()),a=El(Go(n,r));return yo(e,a)}))}function tg(e,t){return Ni((()=>Ho(Xf(Lo(t,e)),-1)))}function ng(e,t){return Ni((()=>Ho(Ri(Lo(t,e)),-1)))}function rg(e,t){return Ni((()=>{const n=Lo(e,t),r=to(Ri(e),Ld(),Number.MAX_VALUE),a=Ri(yo(n,r));return Mo(100,Ho(a,-1))}))}function ag(e,t,n=!1){return Ni((()=>{if(n)t=Cl(t);else{const e=zo(t,t.shape.length-1,!0);t=yo(t,e)}return t=to(t,Ld(),1-Ld()),rl(zo(Mo(Hs(e,"float32"),Fo(t)),t.shape.length-1))}))}function sg(e,t,n=!1){return Ni((()=>{const r=Hs($o(function(e){const t=[Df(e.shape)];return Ki(e,t)}(e)),"int32"),a=(t=to(t,Ld(),1-Ld())).shape;return ag(Ki(sl(r,a[a.length-1]),a),t,n)}))}function ig(e,t){return Ni((()=>{let n;return n=to(t,Ld(),1-Ld()),n=Fo(yo(n,Lo(1,n))),Ho(function(e,t){if(!ie(e.shape,t.shape))throw new Bd(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Ni((()=>{const n=gl(t),r=rl(Ri(t));return Ai(Lo(n,Mo(t,e)),Do(No(r)))}))}(e,n),-1)}))}function og(e,t){return Ni((()=>{const n=eg(e,-1),r=eg(t,-1),a=Mo(n,r);return rl(zo(a,-1))}))}Qm.constructors={};const lg={meanSquaredError:tg,meanAbsoluteError:ng,meanAbsolutePercentageError:rg,meanSquaredLogarithmicError:function(e,t){return Ni((()=>{const n=to(t,Ld(),Number.MAX_VALUE),r=Fo(Ai(1,n)),a=to(e,Ld(),Number.MAX_VALUE),s=Fo(Ai(1,a));return Ho(Xf(Lo(r,s)),-1)}))},squaredHinge:function(e,t){return Ni((()=>{const n=Go(0,Lo(1,Mo(e,t)));return Ho(Xf(n),-1)}))},hinge:function(e,t){return Ni((()=>{const n=Go(0,Lo(1,Mo(e,t)));return Ho(n,-1)}))},categoricalHinge:function(e,t){return Ni((()=>{const n=zo(Mo(e,t),-1),r=Oo(Mo(Lo(1,e),t),-1);return Go(0,Ai(1,Lo(r,n)))}))},logcosh:function(e,t){return Ni((()=>{const n=Math.log(2),r=Lo(t,e),a=Lo(Ai(r,Tl(Mo(-2,r))),n);return Ho(a,-1)}))},categoricalCrossentropy:ag,sparseCategoricalCrossentropy:sg,binaryCrossentropy:ig,kullbackLeiblerDivergence:function(e,t){return Ni((()=>{const n=to(e,Ld(),1),r=to(t,Ld(),1);return zo(Mo(e,Fo(yo(n,r))),-1)}))},poisson:function(e,t){return Ni((()=>{const n=Fo(Ai(Ld(),t));return Ho(Lo(t,Mo(e,n)),-1)}))},cosineProximity:og};function ug(e){if("string"==typeof e){if(e in lg)return lg[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Bd(t)}return e}function cg(e,t){return Ni((()=>{const n=Mo(.5,ll(t)),r=zf(Ro(t,n),e.dtype);return Ho(ko(e,r),-1)}))}function hg(e,t){return Ni((()=>zf(ko(Di(e,-1),Di(t,-1)),"float32")))}function pg(e,t){return ig(e,t)}function dg(e,t){return e.rank===t.rank&&(e=Rl(e,[e.rank-1])),(t=Di(t,-1)).dtype!==e.dtype&&(t=Hs(t,e.dtype)),Hs(ko(e,t),"float32")}const fg=ag,mg=sg,gg={binaryAccuracy:cg,categoricalAccuracy:hg,precision:function(e,t){return Ni((()=>{const n=function(e,t){return Ni((()=>Hs(zo(Bo(ko(e,1),ko(t,1))),"float32")))}(e,t),r=function(e,t){return Ni((()=>Hs(zo(Bo(ko(e,0),ko(t,1))),"float32")))}(e,t),a=Ai(n,r);return Hs(Ll(Ro(a,0),yo(n,a),0),"float32")}))},categoricalCrossentropy:fg,sparseCategoricalCrossentropy:mg,mse:tg,MSE:tg,mae:ng,MAE:ng,mape:rg,MAPE:rg,cosine:og};function yg(e){if("string"==typeof e&&e in gg)return gg[e];if("string"!=typeof e&&null!=e)return e;throw new Bd(`Unknown metric ${e}`)}function bg(e){if(Gd(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(lg))if(lg[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(gg))if(gg[n]===e){t=n;break}return void 0!==t?t:e.name}}function xg(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!vg(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function vg(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!vg(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!vg(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function wg(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function kg(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}wg([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Ng(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const i=e.name,o=e.getClassName(),l=0===s.length?"":s[0];wg([`${i} (${o})`,a,e.countParams().toString(),l],t,r);for(let e=1;e<s.length;++e)wg(["","","",s[e]],t,r)}function Ig(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Sg(e,t){if(null===e)return null;if("string"==typeof e)return Xd(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Ig(t,a,r)?n.push(r):n.push(Sg(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Xd(n);t[e]=Sg(r,e)}}return t}}function Cg(e,t){if(null==e)return null;if("string"==typeof e)return Kd(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Ig(t,a,r)?n.push(r):n.push(Cg(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[Kd(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Cg(r,n):r}return t}}class Tg{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Tg)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Bd(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Hs(t,e.dtype)}catch(n){throw new Bd(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Om){if(null==this.id2Value[e.id])throw new Bd(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Bd(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Om){if(null==this.id2Value[e.id])throw new Bd(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Bd(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Ii(this.id2Mask)}}const $g={},Eg={};function Rg(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,p;if(null==$g[c]){const e=function(e,t){te(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=_g(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=_g(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:Ag(r)}}(i,t);h=e.sorted,p=e.recipientCounts,$g[c]=h,Eg[c]=p}h=$g[c],p={},a||Object.assign(p,Eg[c]);const d=new Tg(t);for(let e=0;e<h.length;++e){if(null!=r){const e=ki().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=h[e],i=s.sourceLayer;if(i instanceof Wm)continue;const u=[],c=[],f=[];let m=!1;for(const e of s.inputs){const n=d.getValue(e),r=d.getMask(e);u.push(n),c.push(r),null!=r&&(m=!0),a||(p[e.name]--,0!==p[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=qd(i.apply(u,n));let y=null;i.supportsMasking&&(y=i.computeMask(u,c));const b=Fg(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){d.hasKey(x[e])||d.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}a||Ii(f)}return d.disposeMasks(),s?l:l[0]}function Ag(e){const t={};for(const n in e)t[n]=e[n].size;return t}function _g(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function Fg(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class Dg extends Pm{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Sm(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],tf(this.inputs).length!==this.inputs.length)throw new Bd(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);tf(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Gd(0===n,"input layer has >1 nodes"),Gd(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Wm))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{null!=r&&null!=a&&null!=l||(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new Pd(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Dg.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],a=u.inboundLayers[e],s=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const p={};for(const e in r){const t=r[e];t in p||(p[t]=[]),p[t].push(a[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(ef);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Dg&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(ef);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Pd(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Pd(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Lm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Bd("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Bd(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new Bd(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Bd(`${e.length} of ${r} weights are not set: ${e}`)}Fm(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.9.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Cg(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Ni((()=>{e=qd(e);const n=new Tg;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Rg(this.outputs,n,t)}))}computeMask(e,t){return Ni((()=>{let n;return e=qd(e),n=null==t?Ud(null,e.length):qd(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Tm(e);if(t.length!==this.inputLayers.length)throw new Bd(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ef);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=Tm(t.computeOutputShape(jd(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];Gd(t in n),a.push(n[t])}return jd(a)}runInternalGraph(e,t){null==t&&(t=Ud(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ef);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){const[e,n]=s[0];null==u.mask&&(u.mask=n),o=qd(t.call(e,u)),l=qd(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=qd(t.call(r,u)),l=qd(t.computeMask(r,i));if(t.activityRegularizer)throw new Wd("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){Gd(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Dg?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=Dg.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Bd(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Bd("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Bd(`No such layer: ${e}`)}calculateLosses(){return Ni((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Dg.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=Dg.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[Dg.nodeKey(a,s)];null==l&&(l=0),e.push([a.name,l,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=Dg.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=Dg.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],l=s[1],u=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(jd(n),r)}function l(e){const n=e.name,s=Jm(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Bd(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!nf(s);)for(const e of c){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],r=e[2];Gd(t in a);const s=a[t].inboundNodes[n].outputTensors;h.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];Gd(t in a);const s=a[t].inboundNodes[n].outputTensors;p.push(s[r])}return new e({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new Bd("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Ni((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Og(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Mg(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Ni((()=>{if(1===e.shape.length)return js(e);if(2===e.shape.length){if(e.shape[1]>1)return Di(e,1);if(1===e.shape[1])return Ki(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Ii(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),Fl(a,"float32")}return null}function Lg(e,t){return Mo(e,t)}function zg(e,t){let n,r;const a=t;n=a.xs,r=a.ys,te(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=Pg("input",e.inputNames,n),i=Pg("output",e.outputNames,r),o=s[0].shape[0];te(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),te(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)te(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)te(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Pg(e,t,n){if(n instanceof Ra)return[n];if(Array.isArray(n))return te(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new Bd(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function Bg(e){return"function"==typeof e.iterator}function Wg(e){te(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Vg(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Bf(e,t,n-t))):Bf(e,t,n-t)}function Ug(e,t){return Ni((()=>null==e?null:Array.isArray(e)?e.map((e=>Ug(e,t))):Kf(e,"int32"===t.dtype?t:Hs(t,"int32"))))}function Gg(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function Hg(e){const t=[];e instanceof Ra&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Pf(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function jg(e,t){if(null==e)return;const n=[];if(t instanceof Ra)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Ra)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function qg(e){return Array.isArray(e)}function Kg(e){return!function(e){return e instanceof Ra}(e)&&!qg(e)}function Xg(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(qg(e)&&e.length>0)t=!0;else if(Kg(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Bd(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(Kg(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new Bd(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(qg(e)){if((e=e).length!==t.length)throw new Bd(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new Bd(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=Hg(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Bd(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new Bd(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function Yg(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new Bd(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new Bd(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Bd(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],l=n[e][s];if(null!=l&&l!==o)throw new Bd(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Qg extends Dg{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Bd("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),wg(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?kg(o[e],n,r):Ng(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?Rm(e.collectedTrainableWeights):Rm(e.trainableWeights),t}(e),u=Rm(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>hc.adagrad(.01),Adadelta:()=>hc.adadelta(1,.95,Ld()),Adam:()=>hc.adam(.001,.9,.999,Ld()),Adamax:()=>hc.adamax(.002,.9,.999,Ld(),0),RMSProp:()=>hc.rmsprop(.001,.9,0,Ld()),SGD:()=>hc.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Bd(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ei))throw new Bd("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Bd(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>ug(e)))}else{const n=ug(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Bd(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(ug(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ef("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ef("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===ig?-1!==["accuracy","acc"].indexOf(i)?r=cg:-1!==["crossentropy","ce"].indexOf(i)&&(r=pg):this.lossFunctions[e]===sg?-1!==["accuracy","acc"].indexOf(i)?r=dg:-1!==["crossentropy","ce"].indexOf(i)&&(r=mg):-1!==["accuracy","acc"].indexOf(i)?r=hg:-1!==["crossentropy","ce"].indexOf(i)&&(r=fg),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=yg(i);s=e,n=""+bg(i)}let t;Ef(n,(()=>{t=s})),a(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Wg(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return jd(this.testLoop(i,s,r,n.verbose,n.steps))}finally{jg(a[0],e),jg(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new Wd("Verbose mode is not implemented yet.");te(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await i.next();if(s=Ni((()=>{if(t.value){const{xs:n,ys:r}=zg(e,t.value),i=n.concat(r),u=Ni((()=>a(i)));if(Ii(i),0===l)for(let e=0;e<u.length;++e)s.push($i(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=s[e];s[e]=Ni((()=>Ai(s[e],Mo(c,t)))),l>0&&Ii(n)}Ii(u),o+=c,++l}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=yo(s[e],o),Ii(t)}return jd(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new Bd(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Bd(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Bd("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new Tg;if(e instanceof Ra&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Bd(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Bd(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=Rg(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Ud(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Bd(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Ni((()=>{const r=this.checkNumSamples(e);if(n)throw new Wd("Verbose predictLoop() is not implemented yet.");const a=Gg(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)Ni((()=>{const n=a[t][0],r=a[t][1],s=Vg(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new Tg(i);return Rg(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return jd(s.map((e=>no(e,0))))}))}predict(e,t={}){const n=Hg(e);Yg(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return Wg(r),this.predictLoop(n,r)}finally{jg(n,e)}}predictOnBatch(e){Yg(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Pd("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===sg?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const r=tf(e.map((e=>e.shape[0])));r.sort();const a=tf(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new Bd(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new Bd(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!ie(r,a))throw new Bd(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Xg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Xg(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[tg,ig,ag];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===ag&&1===s.shape[s.shape.length-1])throw new Bd(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new Bd(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Bd(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=Og(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Mg(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return Ni((()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new Wd("Verbose mode is not implemented yet.");if(null!=a)throw new Wd("steps mode in testLoop() is not implemented yet");{const r=Gg(s,n),a=Fl(Lf(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],l=Bf(a,s,o-s),u=Ug(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push($i(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Ai(i[e],Mo(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=yo(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;Hd(e,r)>1&&(a+=`_${Hd(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Tg(e),o=Rg(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=Lg(n,a[e]));const s=Ho(n);t.push(s),l=0===e?n:Ai(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Ho(t(r[a],o[a]))}Si(n),s.push(n)}return l=Ho(l),this.calculateLosses().forEach((e=>{l=Ai(l,e)})),l}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>Ni((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new Tg(s),o=Rg(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=Ho(r(a[e],o[e]));n=0===e?s:Ai(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Ho(n(a[r],o[r]));t.push(s)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,l,u,c;e.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;Wg(h);const p=!1,d=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,p,h);a=d[0],s=d[1],c=d[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Wd("validationData including sample weights is not supported yet."):new Bd(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];l=Vg(a,e,t),a=Vg(a,0,e),u=Vg(s,e,t),s=Vg(s,0,e),f=l.concat(u)}else null!=r.validationSteps&&(m=!0);const g=a.concat(s).concat(c);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),b=e.getDedupedMetricsNames();let x,v;m?(e.makeTestFunction(),x=e.testFunction,v=b.slice().concat(b.map((e=>"val_"+e)))):(x=null,f=[],v=b.slice());const w=Ym(r.callbacks,r.yieldEvery),k=await async function(e,t,n,r,a,s,i,o,l,u,c,h,p,d,f){null==a&&(a=32),null==s&&(s=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=e.checkNumSamples(n,a,d,"steps_per_epoch");let y;null!=g&&(y=Lf(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=Zm(o,i,s,p,g,d,a,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<s;++i){await b.onEpochBegin(i);const s={};{if("batch"===c)throw new Wd("batch shuffling is not implemneted yet");c&&Q(y);const i=Fl(y),o=Gg(g,a);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),Ni((()=>{const p=o[c][0],d=o[c][1],f=Bf(i,p,d-p);h.batch=c,h.size=d-p;const g=Ug(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];h[t]=n,Si(n)}if(c===o.length-1&&m){const t=e.testLoop(l,u,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];Si(a),s["val_"+n]=a}}})),await b.onBatchEnd(c,h),Um(h),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,y,g,b,h,r.epochs,r.verbose,w,x,f,r.shuffle,v,r.initialEpoch,null);return k}finally{e.isTraining=!1,jg(a,t),jg(s,n),jg(l,i),jg(u,o),null!=c&&Ii(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(te(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),te(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),te(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),te(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),te(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(Bg(n.validationData))te(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Wd("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=a?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=Ym(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=Zm(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,u);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await p.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=zg(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await p.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const t=Og(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Mg(a[e],null,t[e]))}const u=r.concat(a).concat(i),d=o(u);Ii(u);for(let e=0;e<l.length;++e){const t=l[e],n=d[e];s[t]=n,Si(n)}await p.onBatchEnd(h,s),Um(s),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=Bg(n.validationData)?qd(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):qd(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,u),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return Ii(s),jd(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ki().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ki().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Kd(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Kd(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Kd(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Kd(bg(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Kd(bg(e))));{const e={};for(const t in this.metrics)e[t]=Kd(bg(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Jm(Sg(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Xd(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Xd(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Xd(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Xd(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Xd(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=xs(e);if(0===t.length)throw new Bd(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Bd(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Bd("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await cs(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.9.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await cs(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=fs([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;xg(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){xg(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Qg.className="Model",vi(Qg);class Zg extends Qg{}Zg.className="Functional",vi(Zg);class Jg extends Qg{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Sm("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Bd(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Jg||e instanceof Qg;let n;if(t){if(n=e,1!==n.outputs.length)throw new Bd("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Bd("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Bd("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Bd("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Wm({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Bd(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Bd("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Bm(this.outputs[0])}this.inboundNodes=[],new Lm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ud(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Em(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Qg({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Pd("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Pd("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Pd("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Pd("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Bd("Legacy serialization format not supported yet.");a=t}else te(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof Jg))throw new Wd(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of a){const t=Jm(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Bd("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Bd("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Jg.className="Sequential",vi(Jg);class ey extends bi{getConfig(){return{}}}class ty extends ey{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Wd(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return bo(e)}(e,t)}}ty.className="elu",vi(ty);class ny extends ey{apply(e){return bl(e)}}ny.className="selu",vi(ny);class ry extends ey{apply(e){return gl(e)}}ry.className="relu",vi(ry);class ay extends ey{apply(e){return Ni((()=>jo(6,gl(e))))}}ay.className="relu6",vi(ay);class sy extends ey{apply(e){return e}}sy.className="linear",vi(sy);class iy extends ey{apply(e){return vl(e)}}iy.className="sigmoid",vi(iy);class oy extends ey{apply(e){return function(e){return Ni((()=>{const t=Ai(.5,Mo(.2,e));return to(t,0,1)}))}(e)}}oy.className="hardSigmoid",vi(oy);class ly extends ey{apply(e){return Tl(e)}}ly.className="softplus",vi(ly);class uy extends ey{apply(e){return function(e){return Ni((()=>yo(e,Ai(Ri(e),1))))}(e)}}uy.className="softsign",vi(uy);class cy extends ey{apply(e){return _l(e)}}cy.className="tanh",vi(cy);class hy extends ey{apply(e,t=-1){return Cl(e,t)}}hy.className="softmax",vi(hy);class py extends ey{apply(e,t=-1){return Po(e,t)}}py.className="logSoftmax",vi(py);class dy extends ey{apply(e,t=1){return Ni((()=>Mo(vl(Mo(e,t)),e)))}}dy.className="swish",vi(dy);class fy extends ey{apply(e){return Ni((()=>Mo(e,_l(Tl(e)))))}}function my(e){return e.getClassName()}function gy(e,t={}){return Jd(e,xi.getMap().classNameMap,t,"activation")}function yy(e){if(null==e){return gy({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},gy(t)}return e instanceof ey?e:gy(e)}fy.className="mish",vi(fy);class by extends bi{}class xy extends by{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Ni((()=>{let t=il([1]);return this.hasL1&&(t=Ai(t,zo(Mo(this.l1,Ri(e))))),this.hasL2&&(t=Ai(t,zo(Mo(this.l2,Xf(e))))),Ki(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}xy.className="L1L2",vi(xy);const vy={l1l2:"L1L2"};function wy(e){return Qd(e)}function ky(e,t={}){return Jd(e,xi.getMap().classNameMap,t,"regularizer")}function Ny(e){return null==e?null:"string"==typeof e?ky({className:e in vy?vy[e]:e,config:{}}):e instanceof by?e:ky(e)}class Iy extends Pm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=$m(e);let n=gl(e);return null!=this.maxValue&&(n=to(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Iy.className="ReLU",vi(Iy);class Sy extends Pm{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=$m(e);return _o(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Sy.className="LeakyReLU",vi(Sy);class Cy extends Pm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=wm(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ny(e.alphaRegularizer),this.alphaConstraint=bf(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Bd(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Em(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Dm({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=$m(e),cl(e,this.alpha.read())}getConfig(){const e={alphaInitializer:vm(this.alphaInitializer),alphaRegularizer:wy(this.alphaRegularizer),alphaConstraint:gf(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Cy.className="PReLU",vi(Cy);class Ty extends Pm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Wd(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=$m(e);return bo(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Ty.className="ELU",vi(Ty);class $y extends Pm{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=$m(e);return Mo(n,Hs(Ro(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}$y.className="ThresholdedReLU",vi($y);class Ey extends Pm{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new hy).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=$m(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Ry(e,t,n){if("number"==typeof e)return Ud(e,t);if(e.length!==t)throw new Bd(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new Bd(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function Ay(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function _y(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Mf([n-t,0]);else{if("same"!==r)throw new Bd(`Unsupport padding mode: ${r}.`);e*=t}return e}function Fy(e,t){return Ni((()=>(Sf(t),"channelsFirst"===t?Pl(e,[0,2,3,1]):e)))}function Dy(e,t){return Ni((()=>(Sf(t),"channelsFirst"===t?Pl(e,[0,2,3,4,1]):e)))}function Oy(e,t,n,r=[1,1],a="valid",s,i,o=null){return Ni((()=>{if(null==s&&(s="channelsLast"),Sf(s),3!==e.rank&&4!==e.rank)throw new Bd(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Bd(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Fy(e,s);if("causal"===a)throw new Wd("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=eu({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=Pl(l,[0,3,1,2])),l}))}Ey.className="Softmax",vi(Ey);class My extends Pm{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",My.verifyArgs(t),this.rank=e,sf(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Wd(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ry(t.kernelSize,e,"kernelSize"),this.strides=Ry(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Cf(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Sf(this.dataFormat),this.activation=yy(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=wm(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=bf(t.biasConstraint),this.biasRegularizer=Ny(t.biasRegularizer),this.activityRegularizer=Ny(t.activityRegularizer),this.dilationRate=Ry(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Bd(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Bd(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Bd(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Gd("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!af(e.kernelSize,"number",1,3))throw new Bd(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:my(this.activation),useBias:this.useBias,biasInitializer:vm(this.biasInitializer),biasRegularizer:wy(this.biasRegularizer),activityRegularizer:wy(this.activityRegularizer),biasConstraint:gf(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Ly extends My{constructor(e,t){super(e,t),this.kernel=null,Ly.verifyArgs(t),this.filters=t.filters,sf(this.filters,"filters"),this.kernelInitializer=wm(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=bf(t.kernelConstraint),this.kernelRegularizer=Ny(t.kernelRegularizer)}build(e){e=Em(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Bd(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Ni((()=>{let t;e=$m(e);const n=null==this.bias?null:this.bias.read(),r=lf(this.activation.getClassName());if(null!=r&&2===this.rank)t=Oy(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return Ni((()=>{if(null==s&&(s="channelsLast"),Sf(s),3!==e.shape.length)throw new Bd(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Bd(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Bd(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Pl(e,[0,2,1])),"causal"===a)throw new Wd("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=lo(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=Qf(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Oy(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Wd("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return Ni((()=>{if(null==s&&(s="channelsLast"),Sf(s),4!==e.rank&&5!==e.rank)throw new Bd(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Bd(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Dy(e,s);if("causal"===a)throw new Wd("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=ho(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=Qf(o,n)),"channelsFirst"===s&&(o=Pl(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Em(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Ay(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:vm(this.kernelInitializer),kernelRegularizer:wy(this.kernelRegularizer),kernelConstraint:gf(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Bd(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class zy extends Ly{constructor(e){super(2,e),zy.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!af(e.kernelSize,"number",1,2))throw new Bd(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}zy.className="Conv2D",vi(zy);class Py extends Ly{constructor(e){super(3,e),Py.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Bd(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Py.className="Conv3D",vi(Py);class By extends zy{constructor(e){if(super(e),this.inputSpec=[new Dm({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Bd(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Em(e)).length)throw new Bd("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Bd("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Dm({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Ni((()=>{let t=$m(e);if(4!==t.shape.length)throw new Bd(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,_y(i,c,l,this.padding),_y(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Pl(t,[0,2,3,1]));let d=co(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=Pl(d,[0,3,1,2])),null!=this.bias&&(d=Qf(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=Em(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=_y(t[r],o,s,this.padding),t[a]=_y(t[a],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}By.className="Conv2DTranspose",vi(By);class Wy extends Py{constructor(e){if(super(e),this.inputSpec=[new Dm({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Bd(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Em(e)).length)throw new Bd("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Bd("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Dm({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Ni((()=>{let t=$m(e);if(5!==t.shape.length)throw new Bd(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);const o=n[i],l=n[a],u=n[s],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,_y(o,d,c,this.padding),_y(l,f,h,this.padding),_y(u,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Pl(t,[0,2,3,4,1]));let y=fo(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Pl(y,[0,4,1,2,3])),null!==this.bias&&(y=Qf(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=Em(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=_y(t[r],u,i,this.padding),t[a]=_y(t[a],c,o,this.padding),t[s]=_y(t[s],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Wy.className="Conv3DTranspose",vi(Wy);class Vy extends Ly{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Bd("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Bd("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Bd(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=wm(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ny(t.depthwiseRegularizer),this.depthwiseConstraint=bf(t.depthwiseConstraint),this.pointwiseInitializer=wm(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ny(t.pointwiseRegularizer),this.pointwiseConstraint=bf(t.pointwiseConstraint)}build(e){if((e=Em(e)).length<this.rank+2)throw new Bd(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Bd(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Dm({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Ni((()=>{let t;if(e=$m(e),1===this.rank)throw new Wd("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Pl(e,[0,2,3,1])),t=xl(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Qf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Pl(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=vm(this.depthwiseInitializer),e.pointwiseInitializer=vm(this.pointwiseInitializer),e.depthwiseRegularizer=wy(this.depthwiseRegularizer),e.pointwiseRegularizer=wy(this.pointwiseRegularizer),e.depthwiseConstraint=gf(this.depthwiseConstraint),e.pointwiseConstraint=gf(this.pointwiseConstraint),e}}Vy.className="SeparableConv";class Uy extends Vy{constructor(e){super(2,e)}}Uy.className="SeparableConv2D",vi(Uy);class Gy extends Ly{constructor(e){super(1,e),Gy.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!af(e.kernelSize,"number",1,1))throw new Bd(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Gy.className="Conv1D",vi(Gy);class Hy extends Pm{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Ni((()=>{if(e=$m(e),"channelsLast"===this.dataFormat){const t=Vf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Vf(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Vf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Vf(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Hy.className="Cropping2D",vi(Hy);class jy extends Pm{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Sf(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,rf(vf,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Ni((()=>{let t=$m(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Pl(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?Ju.resizeNearestNeighbor(t,[e,r]):Ju.resizeBilinear(t,[e,r]);return Pl(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Ju.resizeNearestNeighbor(t,[e,r]):Ju.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}jy.className="UpSampling2D",vi(jy);class qy extends My{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=wm(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=bf(e.depthwiseConstraint),this.depthwiseRegularizer=Ny(e.depthwiseRegularizer)}build(e){if((e=Em(e)).length<4)throw new Bd(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Bd(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ni((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return Ni((()=>{null==a&&(a="channelsLast"),Sf(a);let i=Fy(e,a);if(4!==e.rank)throw new Bd(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Bd(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=mo(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Pl(i,[0,3,1,2])),i}))}(e=$m(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Qf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Em(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Ay(t,this.kernelSize[0],this.padding,this.strides[0]),s=Ay(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=vm(this.depthwiseInitializer),e.depthwiseRegularizer=wy(this.depthwiseRegularizer),e.depthwiseConstraint=gf(this.depthwiseRegularizer),e}}function Ky(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Bd("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function Xy(e,t,n,r=!1,a,s,i=!1,o=!1){return Ni((()=>{const l=t.shape.length;if(l<3)throw new Bd(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Lf(2,l));if(t=Pl(t,u),null!=s)throw new Wd("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=Hs(Hs(a,"bool"),"float32")).rank===l-1&&(a=Io(a,-1)),a=Pl(a,u)),r&&(t=yl(t,0),null!=a&&(a=yl(a,0)));const c=[];let h,p=n;const d=t.shape[0],f=Ol(t);let m,g;null!=a&&(m=Ol(a));for(let t=0;t<d;++t){const n=f[t],r=Ni((()=>e(n,p)));if(null==a)h=r[0],p=r[1];else{const e=Ni((()=>{const e=m[t],n=Lo(ll(e),e);return{output:Ai(Mo(r[0],e),Mo(p[0],n)),newStates:p.map(((t,a)=>Ai(Mo(r[1][a],e),Mo(t,n))))}}));h=e.output,p=e.newStates}o&&c.push(h)}return o&&(g=Al(c,1)),[h,g,p]}))}qy.className="DepthwiseConv2D",vi(qy);class Yy extends Pm{constructor(e){let t;if(super(e),null==e.cell)throw new Bd("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new ab({cells:e.cell}):e.cell,null==t.stateSize)throw new Bd("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Dm({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Lf(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Cm(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Ni((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Wd("Constants support is not implemented in RNN yet.");Cm(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Dm({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ie(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new Bd(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new Dm({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Ni((()=>{if(!this.stateful)throw new zd("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Bd("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>il([n,e]))):this.states_=[il([n,this.cell.stateSize])];else if(null==e)Ii(this.states_),null!=this.keptStates&&(Ii(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>il([n,e]))):this.states_[0]=il([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Bd(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Ii(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!ie(r.shape,s))throw new Bd(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Si(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Ky(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Dm({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Om){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Ni((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=$m(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new Bd(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Xy(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Ni((()=>{let t=il(e.shape);return t=zo(t,[1,2]),t=Pf(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Hf(t,[1,e]):t)):this.cell.stateSize>1?[Hf(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Yy.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Jm(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Yy.className="RNN",vi(Yy);class Qy extends Pm{}class Zy extends Qy{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,sf(this.units,"units"),this.activation=yy(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=wm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ny(e.kernelRegularizer),this.recurrentRegularizer=Ny(e.recurrentRegularizer),this.biasRegularizer=Ny(e.biasRegularizer),this.kernelConstraint=bf(e.kernelConstraint),this.recurrentConstraint=bf(e.recurrentConstraint),this.biasConstraint=bf(e.biasConstraint),this.dropout=Of([1,Mf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Of([1,Mf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Em(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ni((()=>{if(2!==(e=e).length)throw new Bd(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=sb({ones:()=>ll(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=sb({ones:()=>ll(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=qf(null!=s?Mo(e,s):e,this.kernel.read()),null!=this.bias&&(a=Qf(a,this.bias.read())),null!=i&&(n=Mo(n,i));let o=Ai(a,qf(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:my(this.activation),useBias:this.useBias,kernelInitializer:vm(this.kernelInitializer),recurrentInitializer:vm(this.recurrentInitializer),biasInitializer:vm(this.biasInitializer),kernelRegularizer:wy(this.kernelRegularizer),recurrentRegularizer:wy(this.recurrentRegularizer),biasRegularizer:wy(this.biasRegularizer),activityRegularizer:wy(this.activityRegularizer),kernelConstraint:gf(this.kernelConstraint),recurrentConstraint:gf(this.recurrentConstraint),biasConstraint:gf(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Zy.className="SimpleRNNCell",vi(Zy);class Jy extends Yy{constructor(e){e.cell=new Zy(e),super(e)}call(e,t){return Ni((()=>{null!=this.cell.dropoutMask&&(Ii(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ii(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}}Jy.className="SimpleRNN",vi(Jy);class eb extends Qy{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Bd("GRUCell does not support reset_after parameter set to true.");this.units=e.units,sf(this.units,"units"),this.activation=yy(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=yy(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=wm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ny(e.kernelRegularizer),this.recurrentRegularizer=Ny(e.recurrentRegularizer),this.biasRegularizer=Ny(e.biasRegularizer),this.kernelConstraint=bf(e.kernelConstraint),this.recurrentConstraint=bf(e.recurrentConstraint),this.biasConstraint=bf(e.biasConstraint),this.dropout=Of([1,Mf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Of([1,Mf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Em(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ni((()=>{if(2!==(e=e).length)throw new Bd(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=sb({ones:()=>ll(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=sb({ones:()=>ll(r),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=Mo(e,a[0]));let u=qf(e,this.kernel.read());this.useBias&&(u=Qf(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Mo(r,s[0]));const c=this.recurrentKernel.read(),[h,p]=$l(c,[2*this.units,this.units],c.rank-1),d=qf(r,h),[f,m,g]=$l(u,3,u.rank-1),[y,b]=$l(d,2,d.rank-1);i=this.recurrentActivation.apply(Ai(f,y)),o=this.recurrentActivation.apply(Ai(m,b));const x=qf(Mo(o,r),p);l=this.activation.apply(Ai(g,x));const v=Ai(Mo(i,r),Mo(Ai(1,rl(i)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:my(this.activation),recurrentActivation:my(this.recurrentActivation),useBias:this.useBias,kernelInitializer:vm(this.kernelInitializer),recurrentInitializer:vm(this.recurrentInitializer),biasInitializer:vm(this.biasInitializer),kernelRegularizer:wy(this.kernelRegularizer),recurrentRegularizer:wy(this.recurrentRegularizer),biasRegularizer:wy(this.biasRegularizer),activityRegularizer:wy(this.activityRegularizer),kernelConstraint:gf(this.kernelConstraint),recurrentConstraint:gf(this.recurrentConstraint),biasConstraint:gf(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}eb.className="GRUCell",vi(eb);class tb extends Yy{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new eb(e),super(e)}call(e,t){return Ni((()=>{null!=this.cell.dropoutMask&&(Ii(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ii(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}tb.className="GRU",vi(tb);class nb extends Qy{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,sf(this.units,"units"),this.activation=yy(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=yy(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=wm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ny(e.kernelRegularizer),this.recurrentRegularizer=Ny(e.recurrentRegularizer),this.biasRegularizer=Ny(e.biasRegularizer),this.kernelConstraint=bf(e.kernelConstraint),this.recurrentConstraint=bf(e.recurrentConstraint),this.biasConstraint=bf(e.biasConstraint),this.dropout=Of([1,Mf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Of([1,Mf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Em(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends nm{apply(t,r){const a=e.apply([n]),s=(new am).apply([n]),i=e.apply([2*n]);return Gf(Gf(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Ni((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Bd(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=sb({ones:()=>ll(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=sb({ones:()=>ll(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=Mo(e,s[0]));let h=qf(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Mo(r,i[0])),h=Ai(h,qf(r,this.recurrentKernel.read())),this.useBias&&(h=Qf(h,this.bias.read()));const[p,d,f,m]=$l(h,4,h.rank-1);o=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(d),u=Ai(Mo(l,a),Mo(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Mo(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:my(this.activation),recurrentActivation:my(this.recurrentActivation),useBias:this.useBias,kernelInitializer:vm(this.kernelInitializer),recurrentInitializer:vm(this.recurrentInitializer),biasInitializer:vm(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:wy(this.kernelRegularizer),recurrentRegularizer:wy(this.recurrentRegularizer),biasRegularizer:wy(this.biasRegularizer),activityRegularizer:wy(this.activityRegularizer),kernelConstraint:gf(this.kernelConstraint),recurrentConstraint:gf(this.recurrentConstraint),biasConstraint:gf(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}nb.className="LSTMCell",vi(nb);class rb extends Yy{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new nb(e),super(e)}call(e,t){return Ni((()=>{null!=this.cell.dropoutMask&&(Ii(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ii(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}rb.className="LSTM",vi(rb);class ab extends Qy{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Ni((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;Cm(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{Ef(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Jm(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return _m(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Fm(t)}}function sb(e){const{ones:t,rate:n,training:r=!1,count:a=1}=e,s=()=>Zf(t(),n),i=()=>Jf(s,t,r);return!a||a<=1?Si(i().clone()):Array(a).fill(void 0).map(i).map((e=>Si(e.clone())))}ab.className="StackedRNNCells",vi(ab);var ib,ob;class lb extends Yy{constructor(e){if(e.unroll)throw new Wd("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Wd("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Dm({ndim:5})]}call(e,t){return Ni((()=>{if(null!=this.cell.dropoutMask&&(Ii(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ii(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Bd("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Ni((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=il([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){Ni((()=>{if(!this.stateful)throw new zd("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new Bd("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>il(a))):this.states_=[il(a)];else if(null==e)Ii(this.states_),null!=this.keptStates&&(Ii(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>il(a))):this.states_[0]=il(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Bd(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ii(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!ie(n.shape,r))throw new Bd(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Si(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Ay(l,r[0],a,s[0],i[0]),h=Ay(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}lb.className="ConvRNN2D";class ub extends nb{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,sf(this.filters,"filters"),this.kernelSize=Ry(n,2,"kernelSize"),this.kernelSize.forEach((e=>sf(e,"kernelSize"))),this.strides=Ry(r||1,2,"strides"),this.strides.forEach((e=>sf(e,"strides"))),this.padding=a||"valid",Cf(this.padding),this.dataFormat=s||"channelsLast",Sf(this.dataFormat),this.dilationRate=Ry(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>sf(e,"dilationRate")))}build(e){var t;e=Em(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Bd(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends nm{apply(e,t){return Uf([n.apply([r]),ol([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Ni((()=>{if(3!==e.length)throw new Bd(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=sb({ones:()=>ll(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Mo(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=sb({ones:()=>ll(a),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let d=o(a,p,0),f=o(a,p,1),m=o(a,p,2),g=o(a,p,3);const[y,b,x,v]=$l(this.kernel.read(),4,3),[w,k,N,I]=this.useBias?$l(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,N,this.padding),h=this.inputConv(h,v,I,this.padding);const[S,C,T,$]=$l(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,S),f=this.recurrentConv(f,C),m=this.recurrentConv(m,T),g=this.recurrentConv(g,$);const E=this.recurrentActivation.apply(Ai(l,d)),R=this.recurrentActivation.apply(Ai(u,f)),A=Ai(Mo(R,s),Mo(E,this.activation.apply(Ai(c,m)))),_=Mo(this.recurrentActivation.apply(Ai(h,g)),this.activation.apply(A));return[_,_,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=oo(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Qf(a,n,this.dataFormat):a}recurrentConv(e,t){return oo(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}ub.className="ConvLSTM2DCell",vi(ub);class cb extends lb{constructor(e){const t=new ub(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}cb.className="ConvLSTM2D",vi(cb);class hb extends Pm{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Ni((()=>{this.invokeCallHook(e,t);const n=$m(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Jf((()=>Zf(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}hb.className="Dropout",vi(hb);class pb extends hb{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}pb.className="SpatialDropout1D",vi(pb);class db extends Pm{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,sf(this.units,"units"),this.activation=yy(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=wm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=wm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=bf(e.kernelConstraint),this.biasConstraint=bf(e.biasConstraint),this.kernelRegularizer=Ny(e.kernelRegularizer),this.biasRegularizer=Ny(e.biasRegularizer),this.activityRegularizer=Ny(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Em(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Em(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Ni((()=>{this.invokeCallHook(e,t);const n=$m(e),r=lf(this.activation.getClassName());let a;return null!=r?a=qf(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=qf(n,this.kernel.read()),null!=this.bias&&(a=Qf(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:my(this.activation),useBias:this.useBias,kernelInitializer:vm(this.kernelInitializer),biasInitializer:vm(this.biasInitializer),kernelRegularizer:wy(this.kernelRegularizer),biasRegularizer:wy(this.biasRegularizer),activityRegularizer:wy(this.activityRegularizer),kernelConstraint:gf(this.kernelConstraint),biasConstraint:gf(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}db.className="Dense",vi(db);class fb extends Pm{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Em(e);for(const t of e.slice(1))if(null==t)throw new Bd(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Df(e,1)]}call(e,t){return Ni((()=>{this.invokeCallHook(e,t);let n=$m(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Pl(n,e)}return function(e){if(e.rank<=1)throw new Bd(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Df(e.shape,1)];return Ki(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}fb.className="Flatten",vi(fb);class mb extends Pm{constructor(e){super(e),this.supportsMasking=!0,this.activation=yy(e.activation)}call(e,t){return Ni((()=>{this.invokeCallHook(e,t);const n=$m(e);return this.activation.apply(n)}))}getConfig(){const e={activation:my(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}mb.className="Activation",vi(mb);class gb extends Pm{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Ni((()=>{return e=$m(e),t=e,n=this.n,Ni((()=>{if(2!==t.shape.length)throw new Bd(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Hf(Pf(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}gb.className="RepeatVector",vi(gb);class yb extends Pm{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new Bd("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=Df(e);if(null!==s){if(0===a||i%a!=0)throw new Bd(n);r[s]=i/a}else if(i!==a)throw new Bd(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Ni((()=>{this.invokeCallHook(e,t);const n=$m(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Ki(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}yb.className="Reshape",vi(yb);class bb extends Pm{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Lf(1,e.dims.length+1);if(!ie(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Dm({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Em(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Pl($m(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}bb.className="Permute",vi(bb);class xb extends Pm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=$m(e);return Fi(al(n,this.maskValue),-1)}call(e,t){return Ni((()=>{this.invokeCallHook(e,t);const n=$m(e),r=Fi(al(n,this.maskValue),-1,!0);return Mo(n,Hs(r,n.dtype))}))}}xb.className="Masking",vi(xb);class vb extends Pm{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(qd(e.inputLength))}this.inputDim=e.inputDim,sf(this.inputDim,"inputDim"),this.outputDim=e.outputDim,sf(this.outputDim,"outputDim"),this.embeddingsInitializer=wm(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ny(e.embeddingsRegularizer),this.activityRegularizer=Ny(e.activityRegularizer),this.embeddingsConstraint=bf(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Ni((()=>this.maskZero?(e=$m(e),al(e,zl(e))):null))}computeOutputShape(e){if(e=Em(e),null==this.inputLength)return[...e,this.outputDim];const t=qd(this.inputLength);if(t.length!==e.length-1)throw new Bd(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new Bd(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Ni((()=>{this.invokeCallHook(e,t);let n=$m(e);"int32"!==n.dtype&&(n=zf(n,"int32"));const r=Kf(this.embeddings.read(),Ki(n,[n.size]));return Ki(r,Em(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:vm(this.embeddingsInitializer),embeddingsRegularizer:wy(this.embeddingsRegularizer),activityRegularizer:wy(this.activityRegularizer),embeddingsConstraint:gf(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}vb.className="Embedding",vi(vb);class wb extends Pm{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Wd}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new Bd("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Em(e)]),(e=e).length<2)throw new Bd(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=tf(t),t.length>1)throw new Bd(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===tf(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Ni((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Mf(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Pf(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=Ki(r,[a].concat(Df(e.slice(1))));i=Pl(i,[1,0]),i=Ki(i,s),t.push(i),n=!0}else if(e>1){const a=Lf(1,e).concat([0]);t.push(Pl(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Ki(Pl(Ki(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(Lf(0,a-1));r=Pl(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=tf(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Ni((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Bd("`mask` should be an Array");if(!Array.isArray(e))throw new Bd("`inputs` should be an Array");if(t.length!==e.length)throw new Bd(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Io(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Bo(n,t[e]);return n}))}}class kb extends wb{constructor(e){super(e)}mergeFunction(e){return Ni((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ai(t,e[n]);return t}))}}kb.className="Add",vi(kb);class Nb extends wb{constructor(e){super(e)}mergeFunction(e){return Ni((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Mo(t,e[n]);return t}))}}Nb.className="Multiply",vi(Nb);class Ib extends wb{constructor(e){super(e)}mergeFunction(e){return Ni((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ai(t,e[n]);return Mo(1/e.length,t)}))}}Ib.className="Average",vi(Ib);class Sb extends wb{constructor(e){super(e)}mergeFunction(e){return Ni((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Go(t,e[n]);return t}))}}Sb.className="Maximum",vi(Sb);class Cb extends wb{constructor(e){super(e)}mergeFunction(e){return Ni((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=jo(t,e[n]);return t}))}}Cb.className="Minimum",vi(Cb);class Tb extends wb{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Bd("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(ie(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new Bd("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Ni((()=>Uf(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Bd("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Bd("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Bd("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Bd(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Ni((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Hs(ll(e[n]),"bool")):t[n].rank<e[n].rank?r.push(Io(t[n],-1)):r.push(t[n]);const a=no(r,this.axis);return _i(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function $b(e,t){for(;e<0;)e+=t;return e}Tb.className="Concatenate",vi(Tb);class Eb extends wb{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){te(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Wd("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Bd(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Bd(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>$b(t,e[n].shape.length))):[$b(this.axes,n.shape.length),$b(this.axes,r.shape.length)],this.normalize&&(n=eg(n,t[0]),r=eg(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Wd("batchDot is not implemented for tensors of 4D or higher rank yet");if(te(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),te(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Wd("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return Ni((()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=Ki(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Ki(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?zo(Mo(e,t),s[0]):zo(Mo(Pl(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=Wo(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=Rl(i,t)}return 1===i.shape.length&&(i=Io(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[$b(this.axes,e.length),$b(this.axes,t.length)],n}computeOutputShape(e){te(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Wd("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Eb.className="Dot",vi(Eb);class Rb extends Pm{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Ni((()=>{this.invokeCallHook(e,t);const n=$m(e);return Jf((()=>Ai(jf(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Rb.className="GaussianNoise",vi(Rb);class Ab extends Pm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ni((()=>{this.invokeCallHook(e,t);const n=$m(e);return this.rate>0&&this.rate<1?Jf((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Mo(n,jf(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Ab.className="GaussianDropout",vi(Ab);class _b extends Pm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||$m(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ni((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Jf((()=>{const t=$m(e),r=-1.7580993408473766;let a=Ao(ml(n),this.rate);a=zf(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=Ai(Mo(t,a),Mo(Ai(a,-1),r));return Ai(Mo(o,s),i)}),(()=>$m(e)),t.training||!1)}return e}))}}function Fb(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=Zi(e,t,n,r,a,s);else if(3===e.rank)i=Ji(e,t,n,r,a,s);else{if(4!==e.rank)throw new Wd(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=eo(e,t,n,r,a,s)}return i}_b.className="AlphaDropout",vi(_b);class Db extends Pm{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=wm(e.betaInitializer||"zeros"),this.gammaInitializer=wm(e.gammaInitializer||"ones"),this.movingMeanInitializer=wm(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=wm(e.movingVarianceInitializer||"ones"),this.betaConstraint=bf(e.betaConstraint),this.gammaConstraint=bf(e.gammaConstraint),this.betaRegularizer=Ny(e.betaRegularizer),this.gammaRegularizer=Ny(e.gammaRegularizer)}build(e){e=Em(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Bd(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Dm({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Ni((()=>{const n=null!=t.training&&t.training,r=$m(e),a=r.shape,s=a.length,i=Lf(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const l=Ud(1,s);l[o]=a[o];const u=i.slice();u.sort();const c=!ie(u,Lf(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=Ki(this.movingMean.read(),l),t=Ki(this.movingVariance.read(),l),n=this.center?Ki(this.beta.read(),l):null,a=this.scale?Ki(this.gamma.read(),l):null;return Fb(r,e,t,n,a,this.epsilon)}return Fb(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(e,t,n,r,a=.001){return ie(r.slice().sort(),Lf(0,e.rank-1))?function(e,t,n,r,a=.001){return Ni((()=>{const s=nl(e,r),i=s.mean,o=s.variance;return[Fb(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return Ni((()=>{const s=nl(e,r),i=s.mean,o=s.variance,l=[];for(const t of Lf(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=Ki(i,l),c=Ki(o,l),h=null==t?null:Ki(t,l),p=null==n?null:Ki(n,l);return[Fb(e,u,c,p,h,a),i,o]}))}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Ni((()=>{const r=1-n,a=e.read(),s=Mo(Lo(a,t),r);e.write(Lo(a,s))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:vm(this.betaInitializer),gammaInitializer:vm(this.gammaInitializer),movingMeanInitializer:vm(this.movingMeanInitializer),movingVarianceInitializer:vm(this.movingVarianceInitializer),betaRegularizer:wy(this.betaRegularizer),gammaRegularizer:wy(this.gammaRegularizer),betaConstraint:gf(this.betaConstraint),gammaConstraint:gf(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Db.className="BatchNormalization",vi(Db);class Ob extends Pm{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=wm(e.betaInitializer||"zeros"),this.gammaInitializer=wm(e.gammaInitializer||"ones"),this.betaRegularizer=Ny(e.betaRegularizer),this.gammaRegularizer=Ny(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Em(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==tf(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=$m(e),r=n.shape,a=r.length;return Ni((()=>{let{mean:e,variance:t}=nl(n,this.axis,!0);const s=Ud(1,a);for(const e of this.axis)s[e]=r[e];const i=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?Ki(e,s):e;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=So(e,u),t=So(t,u),o=So(o,c),l=So(l,c),Fb(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:vm(this.betaInitializer),gammaInitializer:vm(this.gammaInitializer),betaRegularizer:wy(this.betaRegularizer),gammaRegularizer:wy(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Ob.className="LayerNormalization",vi(Ob);class Mb extends Pm{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Bd(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Bd(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Bd(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Dm({ndim:4})]}computeOutputShape(e){let t,n;return e=Em(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Ni((()=>{return t=$m(e),n=this.padding,r=this.dataFormat,Ni((()=>{if(4!==t.rank)throw new Bd(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Bd("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Bd(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],ul(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Lb(e,t,n,r,a,s){return Ni((()=>{let i;Sf(a),Tf(s),Cf(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Fy(e,a);const o="same"===r?"same":"valid";return i="max"===s?Vo(e,t,n,o):Xi(e,t,n,o),"channelsFirst"===a&&(i=Pl(i,[0,3,1,2])),i}))}function zb(e,t,n,r,a,s){return Ni((()=>{let i;Sf(a),Tf(s),Cf(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Dy(e,a);const o="same"===r?"same":"valid";return i="max"===s?Uo(e,t,n,o):Yi(e,t,n,o),"channelsFirst"===a&&(i=Pl(i,[0,4,1,2,3])),i}))}Mb.className="ZeroPadding2D",vi(Mb);class Pb extends Pm{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Bd(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(sf(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Bd(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}sf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Cf(this.padding),this.inputSpec=[new Dm({ndim:3})]}computeOutputShape(e){const t=Ay((e=Em(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Ni((()=>{this.invokeCallHook(e,t),e=Pf($m(e),2);const n=this.poolingFunction($m(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Rl(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Bb extends Pb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Sf(a),Cf(r),Lb(e,t,n,r,a,"max")}}Bb.className="MaxPooling1D",vi(Bb);class Wb extends Pb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Sf(a),Cf(r),Lb(e,t,n,r,a,"avg")}}Wb.className="AveragePooling1D",vi(Wb);class Vb extends Pm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Bd(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];sf(this.poolSize,"poolSize"),sf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Sf(this.dataFormat),Cf(this.padding),this.inputSpec=[new Dm({ndim:4})]}computeOutputShape(e){e=Em(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Ay(t,this.poolSize[0],this.padding,this.strides[0]),n=Ay(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Ni((()=>(this.invokeCallHook(e,t),this.poolingFunction($m(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ub extends Vb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Sf(a),Cf(r),Lb(e,t,n,r,a,"max")}}Ub.className="MaxPooling2D",vi(Ub);class Gb extends Vb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Sf(a),Cf(r),Lb(e,t,n,r,a,"avg")}}Gb.className="AveragePooling2D",vi(Gb);class Hb extends Pm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Bd(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];sf(this.poolSize,"poolSize"),sf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Sf(this.dataFormat),Cf(this.padding),this.inputSpec=[new Dm({ndim:5})]}computeOutputShape(e){e=Em(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Ay(t,this.poolSize[0],this.padding,this.strides[0]),n=Ay(n,this.poolSize[1],this.padding,this.strides[1]),r=Ay(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Ni((()=>(this.invokeCallHook(e,t),this.poolingFunction($m(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class jb extends Hb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Sf(a),Cf(r),zb(e,t,n,r,a,"max")}}jb.className="MaxPooling3D",vi(jb);class qb extends Hb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Sf(a),Cf(r),zb(e,t,n,r,a,"avg")}}qb.className="AveragePooling3D",vi(qb);class Kb extends Pm{constructor(e){super(e),this.inputSpec=[new Dm({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Wd}}class Xb extends Kb{constructor(e){super(e||{})}call(e,t){return Ni((()=>{const t=$m(e);return Ho(t,1)}))}}Xb.className="GlobalAveragePooling1D",vi(Xb);class Yb extends Kb{constructor(e){super(e||{})}call(e,t){return Ni((()=>{const t=$m(e);return Oo(t,1)}))}}Yb.className="GlobalMaxPooling1D",vi(Yb);class Qb extends Pm{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Sf(this.dataFormat),this.inputSpec=[new Dm({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Wd}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Zb extends Qb{call(e,t){return Ni((()=>{const t=$m(e);return"channelsLast"===this.dataFormat?Ho(t,[1,2]):Ho(t,[2,3])}))}}Zb.className="GlobalAveragePooling2D",vi(Zb);class Jb extends Qb{call(e,t){return Ni((()=>{const t=$m(e);return"channelsLast"===this.dataFormat?Oo(t,[1,2]):Oo(t,[2,3])}))}}Jb.className="GlobalMaxPooling2D",vi(Jb);class ex extends Pm{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Jm(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class tx extends ex{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Em(e)).length<3)throw new Bd(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Em(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Ni((()=>Xy(((e,n)=>[$m(this.layer.call(e,t)),[]]),e=$m(e),[],!1,null,null,!1,!0)[1]))}}tx.className="TimeDistributed",vi(tx);class nx extends ex{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Jm(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Jm(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,rf(Nf,"BidirectionalMergeMode",a),e.weights)throw new Wd("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):jd(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Ky(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Bd("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new Dm({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Wd("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Om;for(const e of s)if(e instanceof Om!==o)throw new Bd("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Ni((()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=yl(a,1)),"concat"===this.mergeMode?i=Uf([r,a]):"sum"===this.mergeMode?i=Ai(r,a):"ave"===this.mergeMode?i=Mo(.5,Ai(r,a)):"mul"===this.mergeMode?i=Mo(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ef(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ef(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Jm(t.layer);if(delete t.layer,null!=t.numConstants)throw new Wd("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}nx.className="Bidirectional",vi(nx),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(ib||(ib={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(ob||(ob={}));const rx={};function ax(e){return rx[e]}function sx(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return ix(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>ix(e,n,r,a)));const o=ix(t.inputNames.slice(e)[0],n,r,a),l=o.dataSync();return"number"===s.type?l[0]:Ce(o.shape,l)}const i=t.attrParams[e];return i&&i.value}function ix(e,t,n,r){const[a,s]=ux(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[lx(a,e)]));return void 0!==i?t[lx(a,i)][s]:void 0}function ox(e,t){const[n,r,a]=ux(e);return[lx(n,t&&t.currentContextId),r,a]}function lx(e,t){return t?`${e}-${t}`:e}function ux(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function cx(e,t,n){let r=sx("pad",e,t,n);if("explicit"===r){r=sx("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function hx(e){return e.kept?e:js(e)}const px=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],dx=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],fx=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],mx=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],gx=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],yx=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],bx=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],xx=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],vx=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],wx=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],kx=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Nx=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],Ix=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],Sx=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Cx=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Tx=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],$x=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Ex=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Rx=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class Ax{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[a,s,i,o,l,u,c,h,p,d,f,m,g,y,b,x,v,w,k].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=ox(e),s=i[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=ox(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=ox(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(d.initNodes=s),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=ax(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=Fx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Fx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=Ux(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ux(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=Ox(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=Ox(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=Vx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Vx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=Dx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Dx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=Hx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Hx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=Wx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Wx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=Gx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Gx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=zx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=zx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=Px(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Px(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=Lx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Lx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=ox(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Mx(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=ox(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=ox(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function _x(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=ze().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Fx(e,t,n,r=!1){const a=e[t];return null!=a?_x(a.s,r):n}function Dx(e,t,n){const r=e[t];return r?r.b:n}function Ox(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function Mx(e){switch("string"==typeof e&&(e=ib[e]),e){case ib.DT_FLOAT:return"float32";case ib.DT_INT32:case ib.DT_INT64:case ib.DT_INT8:case ib.DT_UINT8:return"int32";case ib.DT_BOOL:return"bool";case ib.DT_DOUBLE:return"float32";case ib.DT_STRING:return"string";default:return null}}function Lx(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function zx(e,t,n){const r=e[t];return r&&r.type?Mx(r.type):n}function Px(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>Mx(e))):n}function Bx(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function Wx(e,t,n){const r=e[t];return r&&r.shape?Bx(r.shape):n}function Vx(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function Ux(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>_x(e,r))):n}function Gx(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>Bx(e))):n}function Hx(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class jx{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return ix(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return ix(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Ox(this.node.rawAttrs,e,t);if(null!=n.s)return Fx(this.node.rawAttrs,e,t);if(null!=n.b)return Dx(this.node.rawAttrs,e,t);if(null!=n.shape)return Wx(this.node.rawAttrs,e,t);if(null!=n.type)return zx(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Vx(this.node.rawAttrs,e,t);if(null!=n.list.s)return Ux(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Gx(this.node.rawAttrs,e,t);if(null!=n.list.b)return Hx(this.node.rawAttrs,e,t);if(null!=n.list.type)return Px(this.node.rawAttrs,e,t)}return t}}const qx=ss({addN_:function(e){te(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),te(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>rs(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ie(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return Xa.runKernel(qe,r)}});function Kx(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){te(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];te(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function Xx(e){return"number"!=typeof e&&!e.some((e=>e<0))}function Yx(e,t,n){let r=Qx(e,n);const a=!Xx(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=Qx(e.shape,r)})),!Xx(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Qx(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class Zx{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=$i(0),Si(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Kx(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Si(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return ls([],[0].concat(this.elementShape));const n=this.readMany(e);return Kx(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Al(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return ls([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return Kx(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),no(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Ol(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];Ni((()=>{t=Ki(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Ki(wl(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}class Jx{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Kx(t,e.shape,"TensorList shape mismatch: "),Si(e)})),this.idTensor=$i(0),this.maxNumElements=r,Si(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Jx([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Kx(e,this.elementShape,"TensorList shape mismatch: ");const r=Yx(this.elementShape,this.tensors,e);return Ni((()=>{const e=this.tensors.map((e=>Ki(e,r)));return Al(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Yx(this.elementShape,this.tensors,e),r=this.tensors.pop();return Kx(r.shape,e,"TensorList shape mismatch: "),Ki(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Kx(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Si(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Kx(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Yx(this.elementShape,this.tensors,t);return Ki(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Kx(this.elementShape,t.shape,"TensorList shape mismatch: "),Si(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Kx(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Yx(this.elementShape,this.tensors,n);return 0===e.length?ls([],[0].concat(r)):Ni((()=>{const t=e.map((e=>Ki(this.tensors[e],r)));return Al(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Kx(this.elementShape,t,"TensorList shape mismatch: ");const n=Yx(this.elementShape,this.tensors,t);return 0===this.size()?ls([],[0].concat(n)):Ni((()=>{const e=this.tensors.map((e=>Ki(e,n)));return no(e,0)}))}}const ev=ss({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:rs(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=Xa.runKernel(Sn,s,i);return{result:o[0],indexes:o[1]}}});function tv(e,t,n){const[r,a]=sx("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=sx("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=sx("strides",e,t,n),h=cx(e,t,n),p=sx("dataFormat",e,t,n).toUpperCase(),d=sx("dilations",e,t,n);let[f,m]=sx("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:sx("leakyreluAlpha",e,t,n)}}function nv(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Xa.runKernel(hn,{},r)}const rv=ss({multinomial_:function(e,t,n,r=!1){const a=rs(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?Ki(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=Xa.runKernel(An,o,l);return 1===i?Ki(u,[u.size]):u}}),av=async function(e){const t=rs(e,"condition","whereAsync","bool"),n=await t.data(),r=rh(t.shape,n);return e!==t&&t.dispose(),r};function sv(e,t,n){return{boxes:sx("boxes",e,t,n),scores:sx("scores",e,t,n),maxOutputSize:sx("maxOutputSize",e,t,n),iouThreshold:sx("iouThreshold",e,t,n),scoreThreshold:sx("scoreThreshold",e,t,n),softNmsSigma:sx("softNmsSigma",e,t,n)}}class iv{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=$i(0),this.tensorMap=new Map,Si(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return $i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Ni((()=>{const e=Ol(t),r=n.length,a=e.length;te(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];Si(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Ni((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Al(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}const ov=ss({einsum_:function(e,...t){const n=t.map(((e,t)=>rs(e,`tensors${t}`,"einsum"))),r={equation:e};return Xa.runKernel(Lt,n,r)}}),lv=ss({sparseToDense_:function(e,t,n,r=0){const a=rs(e,"sparseIndices","sparseToDense","int32"),s=rs(t,"sparseValues","sparseToDense"),i=rs(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);const o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return Xa.runKernel(kr,o,l)}}),uv=ss({denseBincount_:function(e,t,n,r=!1){const a=rs(e,"x","denseBincount"),s=rs(t,"weights","denseBincount");te("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),te(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),te(n>=0,(()=>`size must be non-negative, but got ${n}.`)),te(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const i={x:a,weights:s},o={size:n,binaryOutput:r};return Xa.runKernel(Tt,i,o)}}),cv=ss({scatterND_:function(e,t,n){const r=rs(e,"indices","scatterND","int32"),a=rs(t,"updates","scatterND");Cc(a,r,n);const s={indices:r,updates:a},i={shape:n};return Xa.runKernel(ar,s,i)}}),hv=ss({gatherND_:function(e,t){const n=rs(t,"indices","gatherND","int32"),r={params:rs(e,"x","gatherND","string_or_numeric"),indices:n};return Xa.runKernel(Zt,r)}}),pv=ss({broadcastArgs_:function(e,t){const n=rs(e,"s0","broadcastArgs","int32"),r=rs(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return Xa.runKernel(ct,a)}});function dv(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return Ni((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Ai(sx("a",e,t,n),sx("b",e,t,n))];case"AddN":return[qx(sx("tensors",e,t,n))];case"FloorMod":case"Mod":return[Td(sx("a",e,t,n),sx("b",e,t,n))];case"Mul":return[Mo(sx("a",e,t,n),sx("b",e,t,n))];case"RealDiv":case"Div":return[yo(sx("a",e,t,n),sx("b",e,t,n))];case"DivNoNan":return[md(sx("a",e,t,n),sx("b",e,t,n))];case"FloorDiv":return[go(sx("a",e,t,n),sx("b",e,t,n))];case"Sub":return[Lo(sx("a",e,t,n),sx("b",e,t,n))];case"Minimum":return[jo(sx("a",e,t,n),sx("b",e,t,n))];case"Maximum":return[Go(sx("a",e,t,n),sx("b",e,t,n))];case"Pow":return[Mu(sx("a",e,t,n),sx("b",e,t,n))];case"SquaredDifference":return[Gu(sx("a",e,t,n),sx("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return Ni((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Ri(sx("x",e,t,n))];case"Acos":return[ad(sx("x",e,t,n))];case"Acosh":return[sd(sx("x",e,t,n))];case"Asin":return[od(sx("x",e,t,n))];case"Asinh":return[ld(sx("x",e,t,n))];case"Atan":return[ud(sx("x",e,t,n))];case"Atan2":return[cd(sx("x",e,t,n),sx("y",e,t,n))];case"Atanh":return[hd(sx("x",e,t,n))];case"Ceil":return[pd(sx("x",e,t,n))];case"Complex":return[is(sx("real",e,t,n),sx("imag",e,t,n))];case"Cos":return[qp(sx("x",e,t,n))];case"Cosh":return[Xp(sx("x",e,t,n))];case"Elu":return[bo(sx("x",e,t,n))];case"Erf":return[yd(sx("x",e,t,n))];case"Exp":return[No(sx("x",e,t,n))];case"Expm1":return[bd(sx("x",e,t,n))];case"Floor":return[$o(sx("x",e,t,n))];case"Log":return[Fo(sx("x",e,t,n))];case"Log1p":return[Do(sx("x",e,t,n))];case"Imag":return[Wl(sx("x",e,t,n))];case"Neg":return[rl(sx("x",e,t,n))];case"Reciprocal":return[Rd(sx("x",e,t,n))];case"Real":return[Vl(sx("x",e,t,n))];case"Relu":return[gl(sx("x",e,t,n))];case"Round":return[Ru(sx("x",e,t,n))];case"Selu":return[bl(sx("x",e,t,n))];case"Sigmoid":return[vl(sx("x",e,t,n))];case"Sin":return[Fh(sx("x",e,t,n))];case"Sign":return[Ad(sx("x",e,t,n))];case"Sinh":return[Oh(sx("x",e,t,n))];case"Softplus":return[Tl(sx("x",e,t,n))];case"Sqrt":return[El(sx("x",e,t,n))];case"Square":return[tl(sx("x",e,t,n))];case"Tanh":return[_l(sx("x",e,t,n))];case"Tan":return[Fd(sx("x",e,t,n))];case"ClipByValue":return[to(sx("x",e,t,n),sx("clipValueMin",e,t,n),sx("clipValueMax",e,t,n))];case"Relu6":return[Kl(sx("x",e,t,n))];case"Rsqrt":return[Kh(ix(e.inputNames[0],t,n))];case"Prod":return[Ed(sx("x",e,t,n),sx("axes",e,t,n))];case"LeakyRelu":return[_o(sx("x",e,t,n),sx("alpha",e,t,n))];case"Prelu":return[cl(sx("x",e,t,n),sx("alpha",e,t,n))];case"IsNan":return[wd(ix(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=sx("thenBranch",e,t,n),a=sx("elseBranch",e,t,n),s=sx("cond",e,t,n),i=sx("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=sx("body",e,t,n),a=sx("cond",e,t,n),s=sx("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=s;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[hx(sx("pred",e,t,n))];case"Switch":{const r=sx("pred",e,t,n);let a=sx("data",e,t,n);return a.kept||(a=hx(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==ix(e,t,n)));return r?[hx(ix(r,t,n))]:void 0}case"Enter":{const r=sx("frameName",e,t,n),a=sx("tensor",e,t,n);return n.enterFrame(r),[hx(a)]}case"Exit":{const r=sx("tensor",e,t,n);return n.exitFrame(),[hx(r)]}case"NextIteration":{const r=sx("tensor",e,t,n);return n.nextIteration(),[hx(r)]}case"TensorArrayV3":{const r=sx("size",e,t,n),a=sx("dtype",e,t,n),s=sx("elementShape",e,t,n),i=sx("dynamicSize",e,t,n),o=sx("clearAfterRead",e,t,n),l=sx("identicalElementShapes",e,t,n),u=sx("name",e,t,n),c=new Zx(u,a,r,s,l,i,o);return n.addTensorArray(c),[c.idTensor,$i(1)]}case"TensorArrayWriteV3":{const r=sx("tensorArrayId",e,t,n),a=sx("index",e,t,n),s=sx("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=sx("tensorArrayId",e,t,n),a=sx("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=sx("tensorArrayId",e,t,n),a=sx("indices",e,t,n),s=sx("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=sx("tensorArrayId",e,t,n),a=sx("indices",e,t,n),s=sx("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=sx("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=sx("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=sx("tensorArrayId",e,t,n),a=sx("tensor",e,t,n),s=sx("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=sx("tensorArrayId",e,t,n);return[$i(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=sx("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=sx("tensorListId",e,t,n),a=sx("index",e,t,n),s=sx("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=sx("tensorListId",e,t,n),a=sx("index",e,t,n),s=sx("elementShape",e,t,n),i=sx("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=sx("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new Jx([],n,e.dtype,r),i=Ol(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(sx("tensor",e,t,n),r,sx("elementShape",e,t,n),sx("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=sx("elementShape",e,t,n),a=sx("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new Jx([],e,t,n)}(r,a,sx(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=sx("tensorListId",e,t,n),a=sx("indices",e,t,n),s=sx("elementShape",e,t,n),i=sx("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=sx("tensorListId",e,t,n),a=sx("elementShape",e,t,n),s=sx("elementDType",e,t,n),i=sx("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Kx(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=Ol(e);return new Jx(a,t,r)}(sx("tensor",e,t,n),sx("elementShape",e,t,n),sx("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=sx("tensorListId",e,t,n),a=n.getTensorList(r.id),s=sx("dtype",e,t,n),i=sx("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=sx("tensorListId",e,t,n),a=sx("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=sx("tensorListId",e,t,n),a=sx("elementShape",e,t,n),s=sx("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=sx("tensor",e,t,n),a=sx("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=Qx(e.shape.slice(1),n),i=0===r?0:e.size/r,o=Ni((()=>{const n=[];e=Ki(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],l=[1,t[r],i];n[r]=Ki(wl(e,o,l),s)}return e.dispose(),n})),l=new Jx([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,sx("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return Ni((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=sx("stride",e,t,n),a=sx("pad",e,t,n),s=sx("dataFormat",e,t,n).toUpperCase(),i=sx("dilation",e,t,n);return[lo(sx("x",e,t,n),sx("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=sx("strides",e,t,n),a=cx(e,t,n),s=sx("dataFormat",e,t,n).toUpperCase(),i=sx("dilations",e,t,n);return[oo(sx("x",e,t,n),sx("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=tv(e,t,n);return[eu({x:sx("x",e,t,n),filter:sx("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=tv(e,t,n);return[ru({x:sx("x",e,t,n),filter:sx("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=sx("outputShape",e,t,n),a=sx("strides",e,t,n),s=cx(e,t,n);return[co(sx("x",e,t,n),sx("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=sx("strides",e,t,n),a=cx(e,t,n),s=sx("dilations",e,t,n),i=sx("dataFormat",e,t,n).toUpperCase();return[mo(sx("input",e,t,n),sx("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=sx("strides",e,t,n),a=sx("pad",e,t,n),s=sx("dataFormat",e,t,n).toUpperCase(),i=sx("dilations",e,t,n);return[ho(sx("x",e,t,n),sx("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=sx("strides",e,t,n),a=sx("pad",e,t,n),s=sx("kernelSize",e,t,n);return[Xi(sx("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=sx("strides",e,t,n),a=sx("pad",e,t,n),s=sx("kernelSize",e,t,n);return[Vo(sx("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=sx("strides",e,t,n),a=sx("pad",e,t,n),s=sx("kernelSize",e,t,n),i=sx("includeBatchInIndex",e,t,n),{result:o,indexes:l}=ev(sx("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,l]}case"AvgPool3D":{const r=sx("strides",e,t,n),a=sx("pad",e,t,n),s=sx("kernelSize",e,t,n);return[Yi(sx("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=sx("strides",e,t,n),a=sx("pad",e,t,n),s=sx("kernelSize",e,t,n);return[Uo(sx("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=sx("strides",e,t,n),a=sx("pad",e,t,n),s=sx("dilations",e,t,n),i=r[1],o=r[2],l=s[1],u=s[2];return[fd(sx("x",e,t,n),sx("filter",e,t,n),[i,o],a,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return Ni((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=sx("shape",e,t,n),a=sx("dtype",e,t,n);return[To(r,sx("value",e,t,n),a)]}case"LinSpace":return[nv(sx("start",e,t,n),sx("stop",e,t,n),sx("num",e,t,n))];case"Multinomial":{const r=sx("logits",e,t,n),a=sx("numSamples",e,t,n),s=sx("seed",e,t,n);return[rv(r,a,s)]}case"OneHot":{const r=sx("indices",e,t,n),a=sx("depth",e,t,n),s=sx("onValue",e,t,n),i=sx("offValue",e,t,n);return[sl(r,a,s,i)]}case"Ones":return[ol(sx("shape",e,t,n),sx("dtype",e,t,n))];case"OnesLike":return[ll(sx("x",e,t,n))];case"RandomUniform":return[ml(sx("shape",e,t,n),sx("minval",e,t,n),sx("maxval",e,t,n),sx("dtype",e,t,n))];case"Range":return[Au(sx("start",e,t,n),sx("stop",e,t,n),sx("step",e,t,n),sx("dtype",e,t,n))];case"TruncatedNormal":{const r=sx("shape",e,t,n),a=sx("mean",e,t,n),s=sx("stdDev",e,t,n),i=sx("seed",e,t,n);return[Dl(r,a,s,sx("dtype",e,t,n),i)]}case"Zeros":return[il(sx("shape",e,t,n),sx("dtype",e,t,n))];case"ZerosLike":return[zl(sx("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=sv(e,t,n),u=await Ju.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=sv(e,t,n),l=sx("padToMaxOutputSize",e,t,n),u=await Ju.nonMaxSuppressionPaddedAsync(r,a,s,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=sv(e,t,n);return[await Ju.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=Hs(sx("condition",e,t,n),"bool"),a=[await av(r)];return r.dispose(),a}case"ListDiff":return async function(e,t){const n=rs(e,"x","setdiff1d"),r=rs(t,"y","setdiff1d");te(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),te(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),te(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),i=new Set(s);let o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;const l=new Ca([o],n.dtype),u=new Ca([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(l.values[t]=a[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]}(sx("x",e,t,n),sx("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return Ni((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=sx("x",e,t,n),a=sx("k",e,t,n),s=sx("sorted",e,t,n),i=Dd(r,a,s);return[i.values,i.indices]}case"Unique":{const r=sx("x",e,t,n),a=Od(r);return[a.values,a.indices]}case"UniqueV2":{const r=sx("x",e,t,n),a=sx("axis",e,t,n),s=Od(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return Ni((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=sx("images",e,t,n),a=sx("size",e,t,n),s=sx("alignCorners",e,t,n),i=sx("halfPixelCenters",e,t,n);return[Ju.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=sx("images",e,t,n),a=sx("size",e,t,n),s=sx("alignCorners",e,t,n),i=sx("halfPixelCenters",e,t,n);return[Ju.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=sx("image",e,t,n),a=sx("boxes",e,t,n),s=sx("boxInd",e,t,n),i=sx("cropSize",e,t,n),o=sx("method",e,t,n),l=sx("extrapolationValue",e,t,n);return[Ju.cropAndResize(r,a,s,i,o,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return Ni((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=sx("default",e,t,n);return[ix(e.name,t,n)||r];case"Placeholder":return[ix(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[hx(sx("x",e,t,n))];case"IdentityN":return sx("x",e,t,n).map((e=>hx(e)));case"Shape":return[Fl(sx("x",e,t,n).shape,"int32")];case"ShapeN":return sx("x",e,t,n).map((e=>Fl(e.shape)));case"Size":return[$i(sx("x",e,t,n).size,"int32")];case"Rank":return[$i(sx("x",e,t,n).rank,"int32")];case"NoOp":return[$i(1)];case"Print":const a=sx("x",e,t,n),s=sx("data",e,t,n),i=sx("message",e,t,n),o=sx("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return Ni((()=>((e,t,n)=>{switch(e.op){case"Equal":return[ko(sx("a",e,t,n),sx("b",e,t,n))];case"NotEqual":return[al(sx("a",e,t,n),sx("b",e,t,n))];case"Greater":return[Ro(sx("a",e,t,n),sx("b",e,t,n))];case"GreaterEqual":return[Ao(sx("a",e,t,n),sx("b",e,t,n))];case"Less":return[dp(sx("a",e,t,n),sx("b",e,t,n))];case"LessEqual":return[Eu(sx("a",e,t,n),sx("b",e,t,n))];case"LogicalAnd":return[Bo(sx("a",e,t,n),sx("b",e,t,n))];case"LogicalNot":return[Vp(sx("a",e,t,n))];case"LogicalOr":return[Id(sx("a",e,t,n),sx("b",e,t,n))];case"Select":case"SelectV2":return[Ll(sx("condition",e,t,n),sx("a",e,t,n),sx("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return Ni((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Wo(sx("a",e,t,n),sx("b",e,t,n),sx("transposeA",e,t,n),sx("transposeB",e,t,n))];case"Einsum":return[ov(sx("equation",e,t,n),...sx("tensors",e,t,n))];case"Transpose":return[Pl(sx("x",e,t,n),sx("perm",e,t,n))];case"_FusedMatMul":const[r,a]=sx("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=sx("numArgs",e,t,n),l=sx("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=sx("args",e,t,n);return[au({a:sx("a",e,t,n),b:sx("b",e,t,n),transposeA:sx("transposeA",e,t,n),transposeB:sx("transposeB",e,t,n),bias:u,activation:a,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return Ni((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Qi(sx("x",e,t,n),sx("mean",e,t,n),sx("variance",e,t,n),sx("offset",e,t,n),sx("scale",e,t,n),sx("epsilon",e,t,n))];case"LRN":return[kd(sx("x",e,t,n),sx("radius",e,t,n),sx("bias",e,t,n),sx("alpha",e,t,n),sx("beta",e,t,n))];case"Softmax":return[Cl(sx("x",e,t,n))];case"LogSoftmax":return[Po(sx("x",e,t,n))];case"SparseToDense":return[lv(sx("sparseIndices",e,t,n),sx("outputShape",e,t,n),sx("sparseValues",e,t,n),sx("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return Ni((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=sx("axis",e,t,n),a=sx("keepDims",e,t,n);return[Oo(sx("x",e,t,n),r,a)]}case"Mean":{const r=sx("axis",e,t,n),a=sx("keepDims",e,t,n);return[Ho(sx("x",e,t,n),r,a)]}case"Min":{const r=sx("axis",e,t,n),a=sx("keepDims",e,t,n);return[Ou(sx("x",e,t,n),r,a)]}case"Sum":{const r=sx("axis",e,t,n),a=sx("keepDims",e,t,n);return[zo(sx("x",e,t,n),r,a)]}case"All":{const r=sx("axis",e,t,n),a=sx("keepDims",e,t,n);return[_i(sx("x",e,t,n),r,a)]}case"Any":{const r=sx("axis",e,t,n),a=sx("keepDims",e,t,n);return[Fi(sx("x",e,t,n),r,a)]}case"ArgMax":{const r=sx("axis",e,t,n);return[Di(sx("x",e,t,n),r)]}case"ArgMin":{const r=sx("axis",e,t,n);return[id(sx("x",e,t,n),r)]}case"Prod":{const r=sx("axis",e,t,n),a=sx("keepDims",e,t,n);return[Ed(sx("x",e,t,n),r,a)]}case"Cumsum":{const r=sx("axis",e,t,n),a=sx("exclusive",e,t,n),s=sx("reverse",e,t,n);return[Lh(sx("x",e,t,n),r,a,s)]}case"Bincount":const r=sx("x",e,t,n),a=sx("weights",e,t,n),s=sx("size",e,t,n);return[$u(r,a,s)];case"DenseBincount":{const r=sx("x",e,t,n),a=sx("weights",e,t,n),s=sx("size",e,t,n),i=sx("binaryOutput",e,t,n);return[uv(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return Ni((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=sx("n",e,t,n),a=sx("axis",e,t,n);let s=sx("tensors",e,t,n);return s=s.slice(0,r),[no(s,a)]}case"Gather":{const r=sx("x",e,t,n),a=sx("indices",e,t,n);return[Eo(r,Hs(a,"int32"),0)]}case"GatherV2":{const r=sx("axis",e,t,n),a=sx("batchDims",e,t,n),s=sx("x",e,t,n),i=sx("indices",e,t,n);return[Eo(s,Hs(i,"int32"),r,a)]}case"Reverse":{const r=sx("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=sx("x",e,t,n);return[yl(s,a)]}case"ReverseV2":{const r=sx("axis",e,t,n),a=sx("x",e,t,n);return[yl(a,r)]}case"Slice":{const r=sx("begin",e,t,n),a=sx("size",e,t,n);return[wl(sx("x",e,t,n),r,a)]}case"StridedSlice":{const r=sx("begin",e,t,n),a=sx("end",e,t,n),s=sx("strides",e,t,n),i=sx("beginMask",e,t,n),o=sx("endMask",e,t,n),l=sx("ellipsisMask",e,t,n),u=sx("newAxisMask",e,t,n),c=sx("shrinkAxisMask",e,t,n),h=sx("x",e,t,n);return[_d(h,r,a,s,i,o,l,u,c)]}case"Pack":return Ni((()=>{const r=sx("axis",e,t,n),a=sx("tensors",e,t,n),s=a[0].shape,i=Rl(a[0]).shape,o=a.map((e=>{const t=ie(e.shape,s);if(!t&&!ie(Rl(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Ki(e,s)}));return[Al(o,r)]}));case"Unpack":{const r=sx("axis",e,t,n),a=sx("tensor",e,t,n);return Ol(a,r)}case"Tile":{const r=sx("reps",e,t,n);return[So(sx("x",e,t,n),r)]}case"Split":case"SplitV":{const r=sx("axis",e,t,n),a=sx("numOrSizeSplits",e,t,n),s=sx("x",e,t,n);return $l(s,a,r)}case"ScatterNd":{const r=sx("indices",e,t,n),a=sx("values",e,t,n),s=sx("shape",e,t,n);return[cv(r,a,s)]}case"GatherNd":{const r=sx("x",e,t,n),a=sx("indices",e,t,n);return[hv(r,a)]}case"SparseToDense":{const r=sx("sparseIndices",e,t,n),a=sx("outputShape",e,t,n),s=sx("sparseValues",e,t,n),i=sx("defaultValue",e,t,n);return[lv(r,s,a,s.dtype===i.dtype?i:Hs(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return Ni((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=tc.sparseFillEmptyRows(sx("indices",e,t,n),sx("values",e,t,n),sx("denseShape",e,t,n),sx("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=tc.sparseReshape(sx("inputIndices",e,t,n),sx("inputShape",e,t,n),sx("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[tc.sparseSegmentMean(sx("data",e,t,n),sx("indices",e,t,n),sx("segmentIds",e,t,n))];case"SparseSegmentSum":return[tc.sparseSegmentSum(sx("data",e,t,n),sx("indices",e,t,n),sx("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return Ni((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Ul(sx("x",e,t,n))];case"IFFT":return[Hl(sx("x",e,t,n))];case"RFFT":return[Gl(sx("x",e,t,n))];case"IRFFT":return[jl(sx("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return Ni((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=nc.stringNGrams(sx("data",e,t,n),sx("dataSplits",e,t,n),sx("separator",e,t,n),sx("nGramWidths",e,t,n),sx("leftPad",e,t,n),sx("rightPad",e,t,n),sx("padWidth",e,t,n),sx("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=nc.stringSplit(sx("input",e,t,n),sx("delimiter",e,t,n),sx("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[nc.stringToHashBucketFast(sx("input",e,t,n),sx("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return Ni((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Hs(sx("x",e,t,n),sx("dtype",e,t,n))];case"ExpandDims":{const r=sx("axis",e,t,n);return[Io(sx("x",e,t,n),r)]}case"Squeeze":{const r=sx("axis",e,t,n);return[Rl(sx("x",e,t,n),r)]}case"Reshape":return[Ki(sx("x",e,t,n),sx("shape",e,t,n))];case"MirrorPad":return[Cd(sx("x",e,t,n),sx("padding",e,t,n),sx("mode",e,t,n))];case"PadV2":case"Pad":return[ul(sx("x",e,t,n),sx("padding",e,t,n),sx("constantValue",e,t,n))];case"SpaceToBatchND":{const r=sx("blockShape",e,t,n),a=sx("paddings",e,t,n);return[wh(sx("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=sx("blockShape",e,t,n),a=sx("crops",e,t,n);return[ed(sx("x",e,t,n),r,a)]}case"DepthToSpace":{const r=sx("blockSize",e,t,n),a=sx("dataFormat",e,t,n).toUpperCase();return[dd(sx("x",e,t,n),r,a)]}case"BroadcastTo":return[Ml(sx("x",e,t,n),sx("shape",e,t,n))];case"BroadcastArgs":return[pv(sx("s0",e,t,n),sx("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=sx("keyDType",e,t,n),s=sx("valueDType",e,t,n),i=new iv(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=sx("tableHandle",e,t,n,r),s=sx("keys",e,t,n),i=sx("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=sx("tableHandle",e,t,n,r),s=sx("keys",e,t,n),i=sx("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=sx("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=ax(e.op);if(a&&a.customExecutor)return a.customExecutor(new jx(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Fe(a)?a.then((e=>[].concat(e))):[].concat(a)}class fv{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function mv(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const l=new Set,u=Object.keys(e).map((e=>ux(e)[0]));let c=[];null!=r&&(c=r.map((e=>ux(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(xv(e)||vv(e)||wv(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}const gv=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],yv=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],bv=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function xv(e){return gv.indexOf(e.op)>=0}function vv(e){return yv.indexOf(e.op)>=0}function wv(e){return bv.indexOf(e.op)>=0}class kv{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new kv(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=mv(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>ux(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));const l=new Set,u=[];for(;s.length>0;){const e=s.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&s.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[ux(e)[0]])),a=t.map((e=>ux(e)[0]));let s=a.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const l={},u={};return Ni((()=>{const n=new fv(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=ux(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=dv(t,r,n,this._resourceManager);if(Fe(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>ix(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[lx(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new fv(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>ix(e,i,s))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{!e||e.kept||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[ux(e)[0]])),i=n.map((e=>ux(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:h}=mv(e,o,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=ux(t),a=[];a[r]=e[t],d[n]=a}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(s,p,t,d,g,m,i,f,l);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!xv(e)&&!ix(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${e}`)}return d}processStack(e,t,n,r,a,s,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&sx("isConstant",e.node,r,n)&&([c]=ox(e.node.name,n)),null==r[e.node.name]){const h=dv(e.node,r,n,this._resourceManager);c||([c]=ox(e.node.name,n));const p=n.currentContext;Fe(h)?u.push(h.then((u=>(r[c]=u,n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=ox(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!ix(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!ix(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=ux(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value;te(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&te(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=ux(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=ux(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Nv{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Iv{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new Nv}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=ti(e,this.loadOptions);else{const r=(t=e,n=this.loadOptions,bs.getLoadHandlers(t,n));if(0===r.length)r.push(ti(e,this.loadOptions));else if(r.length>1)throw new Error(`Found more than one (${r.length}) load handlers for URL '${[e]}'`);this.handler=r[0]}var t,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=function(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,l=se(o);let u;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=us[n.dtype],c=e.slice(a,a+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=ys()),u=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}a+=l*o}else if("string"===i){const t=se(s.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));u.push(n),a+=t}}else{const r=us[i],s=e.slice(a,a+l*r);if("float32"===i)u=new Float32Array(s);else if("int32"===i)u=new Int32Array(s);else if("bool"===i)u=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{u=new Float32Array(s);const e=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],r[t]=u[2*t+1];const a=ls(e,o,"float32"),i=ls(r,o,"float32");n[t]=is(a,i),a.dispose(),i.dispose()}}a+=l*r}"complex64"!==i&&(n[t]=ls(u,o,i))}return n}(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new kv(Ax.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=Ax.Instance.transformGraph(e.modelInitializer);this.initializer=new kv(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=xs(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Ra||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Sv(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new Iv(e,t);return await n.load(),n}function Cv(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(Rv(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=Cv(e[s],t,n,r);a[s]=i}return r.delete(e),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function Tv(e,t=Ev){return $v(e,t)}function $v(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(Rv(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=$v(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function Ev(e){return null===e?null:Rv(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Rv(e){let t=!1;if(ze().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(977);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Ra)&&!(e instanceof Promise)&&!t)}function Av(e){return Cv(e,_v)}function _v(e){return e instanceof Ra?{value:e.clone(),recurse:!1}:Rv(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Fv{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Dv extends Fv{constructor(){super(Dv.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Dv.INITIAL_CAPACITY=32;class Ov{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Gv(this,e)}filter(e){return new Vv(this,e)}map(e){return new Uv(this,e)}mapAsync(e){return new Hv(this,e)}serialMapAsync(e){return new Hv(this,e).serial()}flatmap(e){return new qv(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Wv(this,e,t)}columnMajorBatch(e,t=!0,n=Ev){return this.rowMajorBatch(e,t).map((e=>Tv(e,n)))}concatenate(e,t){return new Kv(new Mv([this,e]),t)}take(e){return e<0||null==e?this:new Bv(this,e)}skip(e){return e<0||null==e?this:new Pv(this,e)}prefetch(e){return new Qv(this,e)}shuffle(e,t){return new Zv(this,e,t)}serial(){return new zv(this)}}class Mv extends Ov{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Av(e),done:!1}}}class Lv extends Ov{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class zv extends Ov{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Pv extends Ov{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Ii(e.value)}return this.upstream.next()}}class Bv extends Ov{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Wv extends Ov{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Vv extends Ov{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ii(e.value)}}}class Uv extends Ov{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Ua(e.value),n=this.transform(e.value),r=Ua(n);for(const e of t)Va(e,r)||e.dispose();return{value:n,done:!1}}}class Gv extends Ov{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Hv extends Ov{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Ua(e.value),n=await this.transform(e.value),r=Ua(n);for(const e of t)Va(e,r)||e.dispose();return{value:n,done:!1}}}class jv extends Ov{constructor(){super(),this.outputQueue=new Dv,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class qv extends jv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Ua(e.value),n=this.transform(e.value),r=Ua(n);this.outputQueue.pushAll(n);for(const e of t)Va(e,r)||e.dispose();return!0}}class Kv extends Ov{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var Xv,Yv;(Yv=Xv||(Xv={}))[Yv.FAIL=0]="FAIL",Yv[Yv.SHORTEST=1]="SHORTEST",Yv[Yv.LONGEST=2]="LONGEST";class Qv extends Ov{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Fv(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Zv extends Qv{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=hl.alea(n||ma().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Jv{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return te(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),ew((async()=>(await n.iterator()).columnMajorBatch(e,t,tw)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,ew((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,ew((async()=>(await t.iterator()).filter((t=>Ni((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return ew((async()=>(await t.iterator()).map((t=>Ni((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return ew((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return ew((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,ew((async()=>{return n=(a=async()=>({value:await t.iterator(),done:!1}),new Lv(a)).take(e),new Kv(n,r);var n,r,a}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,ew((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=hl.alea(t||ma().toString());return ew((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,ew((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function ew(e,t=null){return new class extends Jv{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function tw(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Ra||ye(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ra?Al(e):ls(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function nw(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&te("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}Jv.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const rw=rh;class aw extends X{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new K(this,wi())}nextDataId(){return aw.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,ze().get("IS_NODE")&&De("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&xe(n[0])){const a=n.map((e=>ga(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Mc(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>ya(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Gs(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return wi().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=ma();return e(),{kernelMs:ma()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){nw([e],"where");const t=this.readSync(e.dataId);return rw(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function sw(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(nw(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,l=o.data.get(i.dataId).values,u=se(i.shape),c=n||i.dtype,h=me(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],a);return o.makeTensorInfo(i.shape,c,h)}}function iw(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(nw(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,a);return o.makeTensorInfo(i.shape,u,c)}}aw.nextDataId=0,Ci("cpu",(()=>new aw),1);const ow=sw(zt,(e=>e>=0?e:Math.exp(e)-1)),lw={kernelName:zt,backendName:"cpu",kernelFunc:ow};function uw(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const cw={kernelName:tn,backendName:"cpu",kernelFunc:uw};function hw(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;nw([a],"leakyRelu");const i=se(a.shape),o=n.data.get(a.dataId).values,l=fe("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",l)}const pw={kernelName:ln,backendName:"cpu",kernelFunc:hw};function dw(e){return(t,n,r,a,s)=>{const i=wo(t,n),o=i.length,l=Ie(i),u=fe(s,se(i)),c=t.length,h=n.length,p=Ie(t),d=Ie(n),f=xo(t,i),m=xo(n,i);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<u.length;++t){const n=_e(t,o,l),s=n.slice(-c);f.forEach((e=>s[e]=0));const i=Ae(s,c,p),g=n.slice(-h);m.forEach((e=>g[e]=0));const y=Ae(g,h,d);u[t]=e(r[i],a[y])}return[u,i]}}const fw=dw(((e,t)=>e<0?t*e:e));function mw(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;nw([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=fw(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(l,r.dtype,o)}const gw={kernelName:Un,backendName:"cpu",kernelFunc:mw},yw=sw(Kn,(e=>Math.max(0,e))),bw={kernelName:Kn,backendName:"cpu",kernelFunc:yw},xw=sw(er,(e=>Math.min(Math.max(0,e),6))),vw={kernelName:er,backendName:"cpu",kernelFunc:xw};function ww(e){return(t,n,r)=>{const a=fe(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}const kw=ww((e=>1/(1+Math.exp(-e)))),Nw=sw(hr,(e=>1/(1+Math.exp(-e)))),Iw={kernelName:hr,backendName:"cpu",kernelFunc:Nw};function Sw(e,t,n,r,a){if("linear"===n)return uw({inputs:{x:t},backend:e});if("relu"===n)return yw({inputs:{x:t},backend:e});if("elu"===n)return ow({inputs:{x:t},backend:e});if("relu6"===n)return xw({inputs:{x:t},backend:e});if("prelu"===n)return mw({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return hw({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return Nw({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Cw(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const Tw={kernelName:ft,backendName:"cpu",kernelFunc:Cw};function $w(e,t,n="float32"){if("complex64"===n)return Cw({inputs:{real:$w(e,t,"float32"),imag:$w(e,t,"float32")},backend:e});const r=$e(se(t),n);return e.makeTensorInfo(t,n,r)}function Ew(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Rw={kernelName:jn,backendName:"cpu",kernelFunc:Ew};function Aw(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return uw({inputs:{x:a},backend:n});const e=$w(n,a.shape,a.dtype),t=Aw({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=Cw({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=Ew({inputs:{input:a},backend:n}),t=Aw({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!ge(a.dtype,s)){const e=uw({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=fa([0],a.dtype),[r,s]=dw(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}const _w={kernelName:ht,backendName:"cpu",kernelFunc:Aw};function Fw(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;nw([s,i],e);const l=o.data.get(s.dataId).values,u=o.data.get(i.dataId).values,c="string"===s.dtype?th(l):l,h="string"===s.dtype?th(u):u,p=r||s.dtype,[d,f]=t(s.shape,i.shape,c,h,p);return o.makeTensorInfo(f,p,d)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=Aw({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(a.dataId).values,c=Aw({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(s.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=Cw({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[l,u]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(u,a,l)}}}function Dw(e){return(t,n,r,a,s,i)=>{const o=wo(t,n),l=se(o),u=o.length,c=Ie(o),h=fe("float32",l),p=fe("float32",l),d=xo(t,o),f=xo(n,o),m=Mc(r,a),g=Mc(s,i),y=t.length,b=Ie(t),x=n.length,v=Ie(n);if(d.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,p[t]=a.imag}else for(let t=0;t<h.length;t++){const n=_e(t,u,c),r=n.slice(-y);d.forEach((e=>r[e]=0));const a=Ae(r,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));const i=Ae(s,x,v),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}const Ow=dw(((e,t)=>e+t)),Mw=Dw(((e,t,n,r)=>({real:e+n,imag:t+r}))),Lw=Fw(je,Ow,Mw),zw={kernelName:je,backendName:"cpu",kernelFunc:Lw};function Pw(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=se(a.shape),o=he(s,i),l=se(o);te(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const Bw={kernelName:Xn,backendName:"cpu",kernelFunc:Pw};function Ww(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;nw([a,s],"matMul");const l=a.shape.length,u=s.shape.length,c=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],p=i?a.shape[l-1]:a.shape[l-2],d=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=se(f),y=se(m);te(l>=2&&u>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([p,d]);te(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],v=Pw({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),w=Pw({inputs:{x:s},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],N=i?v.shape[2]:v.shape[1],I=o?w.shape[1]:w.shape[2],S=Math.max(g,y),C=n.data.get(v.dataId).values,T=n.data.get(w.dataId).values,$=Ie(v.shape),E=Ie(w.shape),[R,A,_]=i?[$[0],1,$[1]]:[$[0],$[1],1],[F,D,O]=o?[1,E[1],E[0]]:[E[1],1,E[0]],M=N*I,L=Gs([S,N,I],v.dtype),z=L.values,P=n.blockSize;for(let e=0;e<S;e++)for(let t=0;t<N;t+=P)for(let n=0;n<I;n+=P)for(let r=0;r<k;r+=P){const a=Math.min(t+P,N),s=Math.min(n+P,I),i=Math.min(r+P,k);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,g-1)*R,s=Math.min(e,y-1)*O;n+=C[r+o*A+a*_]*T[a*F+t*D+s]}z[e*M+(o*I+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}const Vw={kernelName:ot,backendName:"cpu",kernelFunc:Ww},Uw={kernelName:Vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let p,d,f;const m=[];p=Ww({inputs:{a,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(d=Lw({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=Sw(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};function Gw(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Hw={kernelName:Ue,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;nw(t,"abs");let r=new Float32Array(se(t.shape));return r=Gw(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}},jw=sw(Ge,(e=>Math.acos(e))),qw={kernelName:Ge,backendName:"cpu",kernelFunc:jw},Kw=sw(He,(e=>Math.acosh(e))),Xw={kernelName:He,backendName:"cpu",kernelFunc:Kw},Yw={kernelName:qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;nw(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),s=Gs(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function Qw(e,t,n,r,a){const s=t.length,i=se(t),o=Ie(t),l=Ie(a),u=fe(n,se(a));for(let t=0;t<i;++t){const n=_e(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];u[Ae(a,s,l)]=e[t]}return u}function Zw(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;nw(a,"transpose");const i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];const l=Qw(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(l,o,a.dtype),shape:o,dtype:a.dtype}}const Jw={kernelName:Or,backendName:"cpu",kernelFunc:Zw},ek={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;nw(a,"all");const o=pe(s,a.shape);let l=o;const u=Zo(l,a.shape.length);let c=a;null!=u&&(c=Zw({inputs:{x:a},backend:n,attrs:{perm:u}}),l=el(l.length,a.shape.length)),Qo("all",l,c.shape.length);const[h,p]=Xo(c.shape,l),d=se(p),f=$e(se(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=Pw({inputs:{x:g},backend:n,attrs:{shape:Yo(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},tk={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;nw(a,"any");const o=pe(s,a.shape);let l=o;const u=Zo(l,a.shape.length);let c=a;null!=u&&(c=Zw({inputs:{x:a},backend:n,attrs:{perm:u}}),l=el(l.length,a.shape.length)),Qo("any",l,c.shape.length);const[h,p]=Xo(c.shape,l),d=se(p),f=$e(se(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=Pw({inputs:{x:g},backend:n,attrs:{shape:Yo(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},nk={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;nw(a,"argMax");let i=pe(s,a.shape);const o=Zo(i,a.shape.length);let l=a;const u=[];null!=o&&(l=Zw({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=el(i.length,l.shape.length)),i=[i[0]],Qo("argMax",i,l.shape.length);const[c,h]=Xo(l.shape,i),p=$e(se(c),"int32"),d=se(h),f=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],r=0;for(let e=0;e<d;++e){const a=f[t+e];a>n&&(n=a,r=e)}p[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},rk={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;nw(a,"argMin");let i=pe(s,a.shape);const o=Zo(i,a.shape.length);let l=a;const u=[];null!=o&&(l=Zw({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=el(i.length,l.shape.length)),i=[i[0]],Qo("argMin",i,l.shape.length);const[c,h]=Xo(l.shape,i),p=$e(se(c),"int32"),d=se(h),f=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],r=0;for(let e=0;e<d;++e){const a=f[t+e];a<n&&(n=a,r=e)}p[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},ak=sw(Ze,(e=>Math.asin(e))),sk={kernelName:Ze,backendName:"cpu",kernelFunc:ak},ik=sw(Je,(e=>Math.asinh(e))),ok={kernelName:Je,backendName:"cpu",kernelFunc:ik},lk=sw(et,(e=>Math.atan(e))),uk={kernelName:et,backendName:"cpu",kernelFunc:lk},ck=dw(((e,t)=>Math.atan2(e,t))),hk=Fw(nt,ck),pk={kernelName:nt,backendName:"cpu",kernelFunc:hk},dk=sw(tt,(e=>Math.atanh(e))),fk={kernelName:tt,backendName:"cpu",kernelFunc:dk};function mk(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,d=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Gs(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){const v=y*i-p,w=Math.max(0,v),k=Math.min(a.inHeight,c+v),N=n+y*b;for(let n=0;n<a.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(a.inWidth,h+i);let y=f,b=0,v=0;for(let n=w;n<k;n+=l){const a=m+n*r[1];for(let n=c;n<p;n+=u){const i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,v++)}if(isNaN(y))break}g[N+n*x+t]="avg"===s?b/v:y}}}return m}function gk(e,t,n,r,a=!1,s=!1){const i=Gs(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=Gs(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){const i=n-g;for(let o=d;o<x;o+=c){const l=o-h,u=m.get(e,n,o,t);u>v&&(v=u,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*p+l)}}i.set(w,e,n,o,t)}}return i}function yk(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,c=a.dilationHeight,h=a.dilationWidth,p=a.effectiveFilterDepth,d=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Gs(a.outShape,n),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],N=a.outShape[3]*a.outShape[4],I=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){const S=w*i-m;let C=S;for(;C<0;)C+=u;const T=Math.min(a.inDepth,p+S),$=n+w*k;for(let n=0;n<a.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(a.inHeight,d+i),w=$+n*N;for(let n=0;n<a.outWidth;++n){const i=n*l-y;let o=i;for(;o<0;)o+=h;const d=Math.min(a.inWidth,f+i),g=w+n*I;let k=b,N=0,S=0;for(let n=C;n<T;n+=u){const a=x+n*r[1];for(let n=p;n<m;n+=c){const i=a+n*r[2];for(let n=o;n<d;n+=h){const a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(N+=a,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===s?N/S:k}}}}return x}const bk={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;nw(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;te(ji(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Mi(a.shape,s,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ie(u.inShape,u.outShape))c=uw({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=Ie(a.shape),r=mk(e,a.shape,a.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,a.dtype,r.values)}return c}},xk={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;nw(a,"avgPool3d");const c=Li(a.shape,s,i,1,o,l,u),h=yk(n.data.get(a.dataId).values,a.shape,a.dtype,Ie(a.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},vk={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;nw([a,s],"avgPool3DGrad");const c=Li(s.shape,i,o,1,l,u),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,N=v-1-c.padInfo.front,I=k-1-c.padInfo.left,S=w-1-c.padInfo.top,C=Gs(s.shape,"float32"),T=1/(f*m*g),$=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-N,i=r-S,o=a-I;let l=0;for(let n=0;n<v;n+=y){const r=(s+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){const a=(i+n)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){const s=(o+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(l+=$.get(e,r,a,s,t))}}}C.set(l*T,e,n,r,a,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},wk={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;nw([a,s],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Mi(i.shape,o,l,1,u),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=Gs(i.shape,"float32"),k=1/(d*f),N=n.data.get(a.dataId).values,I=Gs(a.shape,"float32",N);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=n-v,s=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(a+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const a=(s+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(i+=I.get(e,r,a,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},kk={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;te(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),te(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),te(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),nw([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,d=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let v=0,w=0,k=0,N=0;for(let e=0;e<c.length;++e)m[e]=f[v++]+(c[e]-h[w++])*d[k++]/Math.sqrt(p[N++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),N>=b&&(N=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};function Nk(e,t,n,r,a){const s=fi(r,t,n),i=se(n),o=Ie(r);if(s){const n=mi(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const l=Gs(r,a,"string"===a?th(e):e),u=Gs(n,a);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===a?nh(u.values):u.values}function Ik(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;nw(a,"slice");const[o,l]=gi(a,s,i);ni(a,o,l);const u=Nk(n.data.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}const Sk={kernelName:or,backendName:"cpu",kernelFunc:Ik},Ck={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;nw([a],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),l=xc(a.shape,s,o),u=vc(l.length,s.length),c=wc(a.shape,s,o),h=kc(i,s.length),p=Nc(c,i,s.length),d=Pw({inputs:{x:a},backend:n,attrs:{shape:l}}),f=Zw({inputs:{x:d},backend:n,attrs:{perm:u}}),m=Pw({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Ik({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function Tk(e,t,n,r,a){const s=se(r),i=$e(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function $k(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],i=Gs([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}const Ek={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=Tk(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},Rk={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=wo(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Ak=ww((e=>Math.ceil(e))),_k=iw(pt,Ak),Fk={kernelName:pt,backendName:"cpu",kernelFunc:_k},Dk=sw(dt,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Ok={kernelName:dt,backendName:"cpu",kernelFunc:Dk},Mk={kernelName:mt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(se(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function Lk(e,t,n,r){const a=me(n,se(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=se(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?th(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}function zk(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Pk={kernelName:rn,backendName:"cpu",kernelFunc:zk};function Bk(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=pe(a,t[0].shape)[0];let i=mc(t.map((e=>e.shape)),s);if(0===se(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>se(e.shape)>0));if(1===o.length)return uw({inputs:{x:o[0]},backend:n});if(fc(o.map((e=>e.shape)),s),"complex64"===o[0].dtype){const e=o.map((e=>Ew({inputs:{input:e},backend:n}))),t=o.map((e=>zk({inputs:{input:e},backend:n}))),r=Bk({inputs:e,backend:n,attrs:{axis:s}}),a=Bk({inputs:t,backend:n,attrs:{axis:s}}),i=Cw({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const l=o.map((e=>{const t=se(e.shape.slice(s));return Pw({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=mc(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=Lk(u,i,t[0].dtype,c),p=mc(o.map((e=>e.shape)),s),d=n.makeTensorInfo(p,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const Wk={kernelName:gt,backendName:"cpu",kernelFunc:Bk};function Vk(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;nw([a,s],"conv2d");const h=qi(l),p=zi(a.shape,s.shape,i,u,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,v=new Ca(p.outShape,a.dtype),w=Ie(a.shape),k=Ie(s.shape),N=w[0],I=x?w[1]:w[2],S=x?w[2]:1,C=x?1:w[1],T=v.strides[0],$=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,R=x?1:v.strides[1],A=n.data.get(a.dataId).values,_=n.data.get(s.dataId).values,F=v.values;for(let e=0;e<p.batchSize;++e){const t=e*N,n=e*T;for(let e=0;e<p.outHeight;++e){const r=n+e*$,a=e*p.strideHeight-b;for(let e=0;e<d;++e){const n=a+e*m;if(n<0||n>=p.inHeight)continue;const s=e*k[0],i=t+n*I;for(let e=0;e<p.outWidth;++e){const t=r+e*E,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const a=i+r*S;let o=s+e*k[1];for(let e=0;e<p.inChannels;++e){const n=A[a+e*C];for(let e=0;e<p.outChannels;++e)F[t+e*R]+=n*_[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const Uk={kernelName:yt,backendName:"cpu",kernelFunc:Vk},Gk={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;nw([a,s],"conv2dBackpropFilter");const h=qi(l),p=zi(a.shape,c,i,1,o,u,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new Ca(p.filterShape,"float32"),x=p.padInfo.left,v=p.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,N=new Ca(a.shape,a.dtype,w),I=new Ca(s.shape,s.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/d)),n=Math.min(p.outHeight,(p.inHeight+v-e)/d);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(p.outWidth,(p.inWidth+x-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-v;for(let e=a;e<s;++e){const n=r+e*f-x;l+=y?N.get(u,t,n,i)*I.get(u,c,e,o):N.get(u,i,t,n)*I.get(u,o,c,e)}}b.set(l,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Hk={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;nw([a,s],"conv2dBackpropInput");const h=Ie(s.shape),p=Ie(a.shape);let d=qi(u);const f=zi(i,s.shape,o,1,l,c,!1,d),m=new Ca(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:N,filterWidth:I,inChannels:S,inHeight:C,inWidth:T,outChannels:$,outHeight:E,outWidth:R,strideHeight:A,strideWidth:_}=f;d=f.dataFormat;const F=N-1-f.padInfo.top,D=I-1-f.padInfo.left,O="channelsLast"===d,M=m.strides[0],L=O?m.strides[1]:m.strides[2],z=O?m.strides[2]:1,P=O?1:m.strides[1],B=p[0],W=O?p[1]:p[2],V=O?p[2]:1,U=O?1:p[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let n=0;n<C;++n){const r=n-F,a=Math.max(0,Math.ceil(r/A)),s=Math.min(E,(N+r)/A);for(let i=0;i<T;++i){const o=i-D,l=Math.max(0,Math.ceil(o/_)),u=Math.min(R,(I+o)/_);let c=0;for(let n=a;n<s;++n){const a=n*A-r;for(let r=l;r<u;++r){const s=B*e+W*n+V*r,i=x*(N-1-a)+v*(I-1-(r*_-o))+w*t;for(let e=0;e<$;++e)c+=y[s+U*e]*b[i+e]}}g[M*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},jk={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;nw([a,s],"conv3d");const u=Pi(a.shape,s.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new Ca(u.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,N=v.values,I=Ie(a.shape),S=Ie(s.shape);for(let e=0;e<u.batchSize;++e){const t=e*I[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*v.strides[1],a=e*u.strideDepth-y;for(let e=0;e<c;++e){const n=a+e*d;if(n<0||n>=u.inDepth)continue;const s=e*S[0],i=t+n*I[1];for(let e=0;e<u.outHeight;++e){const t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const a=s+e*S[1],o=i+r*I[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<p;++e){const t=r+e*m;if(t<0||t>=u.inWidth)continue;const s=a+e*S[2],i=o+t*u.inChannels;let l=s;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)N[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},qk={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;nw([a,s],"conv3dBackpropFilterV2");const u=Ie(a.shape),c=Ie(s.shape),h=Pi(a.shape,l,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Ca(h.filterShape,"float32"),x=b.values,[v,w,k,N]=b.strides,I=n.data.get(s.dataId).values,[S,C,T,$]=c,E=n.data.get(a.dataId).values,[R,A,_,F]=u,D=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((D-e)/p)),n=Math.min(h.outDepth,(h.inDepth+D-e)/p),r=e*v;for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((M-a)/d)),i=Math.min(h.outHeight,(h.inHeight+M-a)/d),o=a*w+r;for(let r=0;r<y;++r){const l=Math.max(0,Math.ceil((O-r)/f)),u=Math.min(h.outWidth,(h.inWidth+O-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*N+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*R,y=m*S;for(let m=t;m<n;++m){const t=(e+m*p-D)*A+h,n=m*C+y;for(let e=s;e<i;++e){const s=(a+e*d-M)*_+t,i=e*T+n;for(let e=l;e<u;++e){const t=e*$+i;g+=E[(r+e*f-O)*F+s+o]*I[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Kk={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;nw([a],"conv3dBackpropInputV2");const u=Ie(a.shape),c=Ie(s.shape),h=Pi(l,s.shape,o,1,i),p=new Ca(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(a.dataId).values,[x,v,w,k]=u,N=n.data.get(s.dataId).values,[I,S,C,T]=c,{batchSize:$,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:_,inDepth:F,inHeight:D,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=h,U=E-1-h.padInfo.front,G=R-1-h.padInfo.top,H=A-1-h.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<_;++t)for(let n=0;n<F;++n){const r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(E+r)/B);for(let i=0;i<D;++i){const o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(R+o)/W);for(let c=0;c<O;++c){const h=c-H,p=Math.max(0,Math.ceil(h/V)),$=Math.min(P,(A+h)/V);let _=0;for(let n=a;n<s;++n){const a=n*B-r;for(let r=l;r<u;++r){const s=r*W-o;for(let i=p;i<$;++i){const o=x*e+v*n+w*r+k*i,l=I*(E-1-a)+S*(R-1-s)+C*(A-1-(i*V-h))+T*t;for(let e=0;e<M;++e)_+=b[o+e]*N[l+e]}}}d[f*e+m*n+g*i+y*c+t]=_}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},Xk=sw(Nt,(e=>Math.cos(e))),Yk={kernelName:Nt,backendName:"cpu",kernelFunc:Xk},Qk=sw(It,(e=>Math.cosh(e))),Zk={kernelName:It,backendName:"cpu",kernelFunc:Qk},Jk={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,p,d]=a.shape,f=s.shape[0],[m,g]=o,y=Gs([f,m,g,d],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=Ie(a.shape),k=Ie(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(a-n)*(h-1)/(m-1):0,f=g>1?(s-r)*(p-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<d;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}else if("bilinear"===l){const n=Math.floor(c),a=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?r*(p-1)+l*f:.5*(r+s)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const r=n+l*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<d;r++){let s=r+h*w[2]+n*w[1]+i*w[0];const u=v[s];s=r+m*w[2]+n*w[1]+i*w[0];const c=v[s];s=r+h*w[2]+a*w[1]+i*w[0];const p=v[s];s=r+m*w[2]+a*w[1]+i*w[0];const d=u+(c-u)*b,f=p+(v[s]-p)*b;s=r+l*k[2]+t*k[1]+e*k[0],y.values[s]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(p-1)+n*f:.5*(r+s)*(p-1);if(a<0||a>p-1){for(let r=0;r<d;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}continue}const o=Math.round(a),l=Math.round(c);for(let r=0;r<d;r++){const a=r+o*w[2]+l*w[1]+i*w[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=v[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},eN={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;nw(a,"cumsum");const l=Zo([s],a.shape.length);let u=a;null!=l&&(u=Zw({inputs:{x:a},backend:n,attrs:{perm:l}}));const c=el(1,a.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Pa(u.dtype,"int32"),p=$e(se(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?0:d[n];else{const r=m(e,t-1);p[n]=i?d[r]+p[r]:d[n]+p[r]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=Zw({inputs:{x:g},backend:n,attrs:{perm:Jo(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},tN={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=Tk(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=$k(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},nN={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;te("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),te(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=a.shape[0],l=a.shape[1],u=a.shape[2],c=a.shape[3],h=l*s,p=u*s,d=c/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<p;++t){const a=Math.floor(t/s),i=(r*s+t%s)*d;for(let t=0;t<d;++t){const r=t+i+c*(a+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,p,d],a.dtype,m)}};function rN(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;nw([a,s],"depthwiseConv2DNative");const c=Ie(a.shape),h=Ie(s.shape);let p=l;null==p&&(p=[1,1]),te(ji(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=zi(a.shape,s.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,v=b.top,w=d.outChannels/d.inChannels,k=new Ca(d.outShape,a.dtype),N=n.data.get(a.dataId).values,I=n.data.get(s.dataId).values,S=k.values;for(let e=0;e<d.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<d.outHeight;++e){const r=n+e*k.strides[1],a=e*d.strideHeight-v;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=d.inHeight)continue;const s=e*h[0],i=t+n*c[1];for(let e=0;e<d.outWidth;++e){const t=r+e*k.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=d.inWidth)continue;const a=s+e*h[1],o=i+r*d.inChannels;let l=t,u=a;for(let e=0;e<d.inChannels;++e){const t=N[o+e];for(let e=0;e<w;++e)S[l+e]+=t*I[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const aN={kernelName:Et,backendName:"cpu",kernelFunc:rN},sN={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;nw([a,s],"depthwiseConv2dNativeBackpropFilter");const h=zi(a.shape,c,i,o,l,u,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new Ca(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(a.dataId).values,w=new Ca(a.shape,a.dtype,v),k=n.data.get(s.dataId).values,N=new Ca(s.shape,s.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/p)),n=Math.min(h.outHeight,(h.inHeight+b-e)/p);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((y-r)/d)),s=Math.min(h.outWidth,(h.inWidth+y-r)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-b;for(let e=a;e<s;++e){const n=r+e*d-y;u+=w.get(l,t,n,o)*N.get(l,c,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},iN={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;nw([a,s],"depthwiseConv2DNativeBackpropInput");const h=Ie(a.shape),p=Ie(s.shape),d=zi(c,s.shape,i,o,l,u,!0),f=new Ca(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[v,w,k]=h,N=n.data.get(s.dataId).values,[I,S,C]=p,{batchSize:T,filterHeight:$,filterWidth:E,inChannels:R,inHeight:A,inWidth:_,outChannels:F,outHeight:D,outWidth:O,strideHeight:M,strideWidth:L}=d,z=$-1-d.padInfo.top,P=E-1-d.padInfo.left,B=F/R;for(let e=0;e<T;++e)for(let t=0;t<R;++t)for(let n=0;n<A;++n){const r=n-z,a=Math.max(0,Math.ceil(r/M)),s=Math.min(D,($+r)/M);for(let i=0;i<_;++i){const o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(O,(E+o)/L);let c=0;for(let n=a;n<s;++n){const a=n*M-r;for(let r=l;r<u;++r){const s=v*e+w*n+k*r,i=I*($-1-a)+S*(E-1-(r*L-o))+C*t;for(let e=0;e<B;++e)c+=x[s+(t*B+e)]*N[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},oN={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=se(r.shape),s=n.data.get(r.dataId).values,i=Gs([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},lN={kernelName:Ft,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(a.dataId).values,p=a.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:N,dilationHeight:I,dilationWidth:S,outShape:C}=Oi(r.shape,a.shape,s,i,"NHWC",o),T=se(C),$=C.length,E=me(r.dtype,T);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let s=0;s<b;++s){const i=s*w-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const s=n+t*I;if(s>=0&&s<f)for(let n=0;n<N;++n){const d=i+n*S;if(d>=0&&d<m){const i=Ae([e,s,d,o],c,Ie(r.shape)),f=Ae([t,n,o],p,Ie(a.shape)),m=u[i]+h[f];m>l&&(l=m)}}}E[Ae([e,t,s,o],$,Ie(C))]=l}}}return{dataId:l.write(fa(E,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},uN={kernelName:Ot,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Ce(r.shape,u.data.get(r.dataId).values),h=Ce(a.shape,u.data.get(a.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:N,dilationWidth:I,outShape:S}=Oi(r.shape,a.shape,i,o,"NHWC",l);te(s.rank===S.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${S.length}, but got ${s.rank}`));const C=Ce(S,u.data.get(s.dataId).values),T=Ee(a.shape,a.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){const r=n+t*N;if(r>=0&&r<d)for(let n=0;n<k;++n){const u=a+n*I;if(u>=0&&u<f){const a=c[e][r][u][s]+h[t][n][s];a>i&&(i=a,o=t,l=n)}}}T[o][l][s]+=C[e][t][r][s]}}}return{dataId:u.write(fa(T,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},cN={kernelName:Dt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Ce(r.shape,u.data.get(r.dataId).values),h=Ce(a.shape,u.data.get(a.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:N,dilationWidth:I,outShape:S}=Oi(r.shape,a.shape,i,o,"NHWC",l);te(s.rank===S.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${S.length}, but got ${s.rank}`));const C=Ce(S,u.data.get(s.dataId).values),T=Ee(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=a<0?0:a;for(let t=0;t<w;++t){const r=n+t*N;if(r>=0&&r<d)for(let n=0;n<k;++n){const u=a+n*I;if(u>=0&&u<f){const a=c[e][r][u][s]+h[t][n][s];a>i&&(i=a,o=r,l=u)}}}T[e][o][l][s]+=C[e][t][r][s]}}}return{dataId:u.write(fa(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},hN=dw(((e,t)=>e*t)),pN=Dw(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),dN=Fw(_n,hN,pN),fN={kernelName:_n,backendName:"cpu",kernelFunc:dN};function mN(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;nw(a,"sum"),o="bool"===a.dtype?Aw({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):uw({inputs:{x:a},backend:n});const l=o.shape.length,u=pe(s,o.shape),c=Zo(u,l);let h=u,p=o;null!=c&&(p=Zw({inputs:{x:o},backend:n,attrs:{perm:c}}),h=el(h.length,l)),Qo("sum",h,p.shape.length);const[d,f]=Xo(p.shape,h);let m=$w(n,d,Pa(p.dtype,"int32"));const g=se(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=Pw({inputs:{x:m},backend:n,attrs:{shape:Yo(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const gN={kernelName:fr,backendName:"cpu",kernelFunc:mN},yN={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=Hc(a,s.length);qc(i.length,l,s);const{path:u,steps:c}=Kc(o,l),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=jc(d,l[t]);let a;Xc(e)?a=s[t]:(a=Zw({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);ie(a.shape,i)||(a=Pw({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===p?p=a:(p=dN({inputs:{a,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=mN({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},bN={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;nw([r,a],"eluGrad");const s=new Float32Array(se(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},xN=dw(((e,t)=>e===t?1:0)),vN=Fw(Wt,xN,null,"bool"),wN={kernelName:Wt,backendName:"cpu",kernelFunc:vN},kN=Rc,NN=Ac,IN=_c,SN=Fc,CN=Dc,TN=Oc,$N=sw(Bt,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+kN*n);return t*(1-((((TN*r+CN)*r+SN)*r+IN)*r+NN)*r*Math.exp(-n*n))})),EN={kernelName:Bt,backendName:"cpu",kernelFunc:$N},RN=ww((e=>Math.exp(e))),AN=iw(Vt,RN),_N={kernelName:Vt,backendName:"cpu",kernelFunc:AN};function FN(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let l=s;return s<0&&(te(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),Pw({inputs:{x:a},backend:n,attrs:{shape:o}})}const DN={kernelName:Ut,backendName:"cpu",kernelFunc:FN},ON=ww((e=>Math.expm1(e))),MN=iw(Gt,ON),LN={kernelName:Gt,backendName:"cpu",kernelFunc:MN},zN=dw(((e,t)=>e/t)),PN=Fw(Mt,zN),BN={kernelName:Mt,backendName:"cpu",kernelFunc:PN},WN=dw(((e,t)=>e-t)),VN=Dw(((e,t,n,r)=>({real:e-n,imag:t-r}))),UN=Fw(Er,WN,VN),GN={kernelName:Er,backendName:"cpu",kernelFunc:UN};function HN(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],c=se(u),h=fe("float32",c),p=fe("float32",c);for(let e=0;e<a;e++){const r=Ik({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=Ik({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=Cw({inputs:{real:r,imag:a},backend:n}),{real:u,imag:c}=jN(i,t,n),d=Mc(u,c);for(let t=0;t<s;t++){const n=Bc(d,t);h[e*s+t]=n.real,p[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",p),m=Cw({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function jN(e,t,n){const r=se(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=qN(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",da(r,"float32")),i=uw({inputs:{x:s},backend:n}),l=BN.kernelFunc({inputs:{a:e,b:s},backend:n}),u=BN.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=Uc(a*r,t,n),l=Bc(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),Wc(r,s,i,a)}return r}(Mc(s,i),r,t);return Lc(e)}var o}function qN(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=Mc(e,t),i=n/2,o=zc(s),l=o.real,u=o.imag,c=[l.length],h=a.makeTensorInfo(c,"float32",l),p=a.makeTensorInfo(c,"float32",u),d=Cw({inputs:{real:h,imag:p},backend:a}),f=Pc(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),v=Cw({inputs:{real:b,imag:x},backend:a}),w=qN(l,u,i,r,a),k=w.real,N=w.imag,I=[k.length],S=a.makeTensorInfo(I,"float32",k),C=a.makeTensorInfo(I,"float32",N),T=Cw({inputs:{real:S,imag:C},backend:a}),$=qN(m,g,i,r,a),E=$.real,R=$.imag,A=[E.length],_=a.makeTensorInfo(A,"float32",E),F=a.makeTensorInfo(A,"float32",R),D=Cw({inputs:{real:_,imag:F},backend:a}),O=Vc(n,r),M=[O.real.length],L=a.makeTensorInfo(M,"float32",O.real),z=a.makeTensorInfo(M,"float32",O.imag),P=Cw({inputs:{real:L,imag:z},backend:a}),B=dN({inputs:{a:P,b:D},backend:a}),W=Lw({inputs:{a:T,b:B},backend:a}),V=UN({inputs:{a:T,b:B},backend:a}),U=Ew({inputs:{input:W},backend:a}),G=Ew({inputs:{input:V},backend:a}),H=zk({inputs:{input:W},backend:a}),j=zk({inputs:{input:V},backend:a}),q=Bk({inputs:[U,G],backend:a,attrs:{axis:0}}),K=Bk({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const KN={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=se(r.shape),s=r.shape[r.shape.length-1],i=Pw({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=HN(i,!1,n),l=Pw({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function XN(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||we(a),o=me(i,se(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}const YN={kernelName:jt,backendName:"cpu",kernelFunc:XN},QN={kernelName:qt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,s=fe(r.dtype,se(r.shape)),[i,o,l,u]=r.shape,c=a.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const r=e*u;for(let a=0;a<u;a++){const i=Math.round(l-e-1),o=t+n+r+a;let h=c[o];i>=0&&i<l&&(h=c[t+n+i*u+a]),s[o]=h}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ZN=ww((e=>Math.floor(e))),JN=iw(Kt,ZN),eI={kernelName:Kt,backendName:"cpu",kernelFunc:JN},tI=dw(((e,t)=>Math.floor(e/t))),nI=Fw(Xt,tI,null,"int32"),rI={kernelName:Xt,backendName:"cpu",kernelFunc:nI},aI={kernelName:Ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=Vk({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=Lw({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=Sw(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}},sI={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=rN({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=Lw({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=Sw(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function iI(e,t,n,r,a,s,i,o,l){const u=Gs([r,s],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<a;t++){const s=e[n*a+t];c+=s*i[t],r.push(s)}if(c<0||c>=l/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)u.values[n*s+e]=t.get(...t.indexToLoc(c*s+e))}return u}const oI={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=se(r.shape),i=a.shape,o=i[i.length-1],[l,u,c,h]=Ic(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const p=iI(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,u,o,c,h,r.shape,s);return n.makeTensorInfo(l,r.dtype,p.values)}};function lI(e,t,n){const r=Gs(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];const l=e.locToIndex(a);r.values[n]=e.values[l]}return r}const uI={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;nw([a,s],"gatherV2");let l=o;null==o&&(l=0);const u=se(s.shape),c=eh(a,s,pe(i,a.shape)[0],l),h=Pw({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=Pw({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}}),d=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize],f=n.bufferSync(p),m=lI(n.bufferSync(h),f,d);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.makeTensorInfo(c.outputShape,m.dtype,m.values)}},cI=dw(((e,t)=>e>t?1:0)),hI=Fw(Jt,cI,null,"bool"),pI={kernelName:Jt,backendName:"cpu",kernelFunc:hI},dI=dw(((e,t)=>e>=t?1:0)),fI=Fw(en,dI,null,"bool"),mI={kernelName:en,backendName:"cpu",kernelFunc:fI},gI={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=se(r.shape),s=r.shape[r.shape.length-1],i=Pw({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=HN(i,!0,n),l=Pw({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},yI=sw(an,(e=>Number.isFinite(e)?1:0),"bool"),bI={kernelName:an,backendName:"cpu",kernelFunc:yI},xI=sw(sn,(e=>Math.abs(e)===1/0?1:0),"bool"),vI={kernelName:sn,backendName:"cpu",kernelFunc:xI},wI=sw(on,(e=>Number.isNaN(e)?1:0),"bool"),kI={kernelName:on,backendName:"cpu",kernelFunc:wI},NI=dw(((e,t)=>e<t?1:0)),II=Fw(un,NI,null,"bool"),SI={kernelName:un,backendName:"cpu",kernelFunc:II},CI=dw(((e,t)=>e<=t?1:0)),TI=Fw(cn,CI,null,"bool"),$I={kernelName:cn,backendName:"cpu",kernelFunc:TI};function EI(e,t,n){const r=(t-e)/(n-1),a=$e(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}const RI={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=EI(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},AI=ww((e=>Math.log(e))),_I=iw(pn,AI),FI={kernelName:pn,backendName:"cpu",kernelFunc:_I},DI=sw(dn,(e=>Math.log1p(e))),OI={kernelName:dn,backendName:"cpu",kernelFunc:DI},MI=dw(((e,t)=>e&&t)),LI=Fw(fn,MI,null,"bool"),zI={kernelName:fn,backendName:"cpu",kernelFunc:LI},PI=sw(mn,(e=>e?0:1),"bool"),BI={kernelName:mn,backendName:"cpu",kernelFunc:PI},WI=dw(((e,t)=>e||t)),VI=Fw(gn,WI,null,"bool"),UI={kernelName:gn,backendName:"cpu",kernelFunc:VI},GI={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;nw(a,"LRN");const u=a.shape[3],c=u-1,h=n.data.get(a.dataId).values,p=se(a.shape),d=new Float32Array(p);function f(e){const t=e%u;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,c);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let e=0;e<p;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);d[e]=n}return n.makeTensorInfo(a.shape,a.dtype,d)}},HI={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;nw(i,"LRNGrad");const h=se(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%p,n=e-t+Math.max(0,t-o),r=e-t+Math.min(p,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=u*a+l;for(let t=n;t<r;t++){let n=-2*u*c*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-c)),n*=d[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function jI(e,t,n,r){const a=fe(r,se(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}function qI(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let l=a.shape;const u=l.length,c=pe(s,l);let h=c;const p=Zo(h,u);let d=o.data.get(a.dataId).values;if(null!=p){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];d=Qw(d,l,a.dtype,p,e),h=el(h.length,u),l=e}nw(a,"max"),Qo("max",h,u);const[f,m]=Xo(l,h),g=jI(d,se(m),f,a.dtype),y=o.write(g,f,a.dtype);let b=f;return i&&(b=Yo(f,c)),{dataId:y,shape:b,dtype:a.dtype}}const KI={kernelName:xn,backendName:"cpu",kernelFunc:qI},XI=dw(((e,t)=>Math.max(e,t))),YI=Fw(vn,XI),QI={kernelName:vn,backendName:"cpu",kernelFunc:YI},ZI={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;nw(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;te(ji(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Mi(a.shape,s,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ie(u.inShape,u.outShape))c=uw({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=Ie(a.shape),r=mk(e,a.shape,a.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,a.dtype,r.values)}return c}},JI={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;nw(a,"maxPool3d");const c=Li(a.shape,s,i,1,o,l,u),h=yk(n.data.get(a.dataId).values,a.shape,a.dtype,Ie(a.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},eS={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;nw([a,s],"maxPool3DGrad");const c=Li(s.shape,i,o,1,l,u),h=function(e,t){const n=Gs(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*a-d;let p=u;for(;p<0;)p+=o;const w=Math.min(t.inHeight,c+u);for(let a=0;a<t.outWidth;++a){const d=a*s-f;let k=d;for(;k<0;)k+=l;const N=Math.min(t.inWidth,h+d);let I=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let r=p;r<w;r+=o){const a=r-u;for(let s=k;s<N;s+=l){const i=s-d,o=e.get(m,t,r,s,g);o>=I&&(I=o,S=n*c*h+a*c+i)}}}n.set(S,m,y,r,a,g)}}}return n}(n.bufferSync(s),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,k=v-1-c.padInfo.left,N=x-1-c.padInfo.top,I=Gs(s.shape,"float32"),S=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-w,i=r-N,o=a-k;let l=0;for(let n=0;n<b;n+=m){const r=(s+n)/p;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){const s=(i+a)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<v;i+=y){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const p=b*x*v-1-h.get(e,r,s,u,t)===n*x*v+a*v+i?1:0;0!==p&&(l+=S.get(e,r,s,u,t)*p)}}}I.set(l,e,n,r,a,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},tS={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;nw([s,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=Mi(o.shape,l,u,1,c,h),d=n.data.get(o.dataId).values,f=Gs(p.outShape,o.dtype,gk(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=v-1-p.padInfo.left,k=x-1-p.padInfo.top,N=Gs(o.shape,"float32"),I=n.data.get(a.dataId).values,S=Gs(a.shape,"float32",I);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const a=n-k,s=r-w;let i=0;for(let n=0;n<x;n+=y){const r=(a+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let a=0;a<v;a+=b){const o=(s+a)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const l=x*v-1-f.get(e,r,o,t)===n*v+a?1:0;0!==l&&(i+=S.get(e,r,o,t)*l)}}N.set(i,e,n,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},nS={kernelName:Sn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;nw(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=Mi(r.shape,a,s,[1,1],i),[h,p]=function(e,t,n,r,a){const s=mk(e,0,n,Ie(t),a,"max"),i=gk(e,t,n,a,!0,r);return[s.values,i.values]}(u,r.shape,r.dtype,o,c),d=l.write(h,c.outShape,r.dtype),f=l.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},rS={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=pe(s,a.shape),l=se(Xo(a.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=Aw({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});u.push(h);const p=PN({inputs:{a:h,b:c},backend:n});u.push(p);const d=mN({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},aS={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;nw(a,"min");const o=pe(s,a.shape);let l=o;const u=Zo(l,a.shape.length);let c=a;null!=u&&(c=Zw({inputs:{x:a},backend:n,attrs:{perm:u}}),l=el(l.length,a.shape.length)),Qo("min",l,c.shape.length);const[h,p]=Xo(c.shape,l),d=se(p),f=$e(se(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=Pw({inputs:{x:g},backend:n,attrs:{shape:Yo(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},sS=dw(((e,t)=>Math.min(e,t))),iS=Fw($n,sS),oS={kernelName:$n,backendName:"cpu",kernelFunc:iS},lS={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;nw(a,"mirrorPad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+a.shape[t])),c="reflect"===i?0:1,h=n.data.get(a.dataId).values,p=a.shape.length,d=Ie(a.shape),f=se(o),m=o.length,g=Ie(o),y=fe(a.dtype,f);for(let e=0;e<f;e++){let t=_e(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=Ae(t,p,d);y[e]=h[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},uS=dw(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),cS=Fw(Rn,uS),hS={kernelName:Rn,backendName:"cpu",kernelFunc:cS};function pS(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=pe([o],a.shape),u=qI({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Yo(u.shape,l),h=Pw({inputs:{x:u},backend:n,attrs:{shape:c}}),p=UN({inputs:{a,b:h},backend:n}),d=AN({inputs:{x:p},backend:n}),f=mN({inputs:{x:d},backend:n,attrs:{axis:l,keepDims:!1}}),m=Pw({inputs:{x:f},backend:n,attrs:{shape:c}}),g=PN({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const dS={kernelName:yr,backendName:"cpu",kernelFunc:pS},fS={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;nw(a,"multinomial");const l=o?a:pS({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,p=[u,s],d=$e(se(p),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=hl.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();d[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){d[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",d)}};function mS(e,t,n){const r=da(-1,n);return hN([],t,r,e,n)}const gS={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;nw(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=mS(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},yS=yu,bS={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;nw(a,"NonMaxSuppression");const u=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:h}=yS(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},xS=bu,vS={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;nw(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:d}=xS(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},wS=xu,kS={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;nw(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=wS(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},NS=dw(((e,t)=>e!==t?1:0)),IS=Fw(Dn,NS,null,"bool"),SS={kernelName:Dn,backendName:"cpu",kernelFunc:IS},CS={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;nw(a,"oneHot");const l=se(a.shape),u=new Float32Array(l*s);u.fill(o);const c=n.data.get(a.dataId).values;for(let e=0;e<l;++e)c[e]>=0&&c[e]<s&&(u[e*s+c[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",u)}};function TS(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Ew({inputs:{input:r},backend:n}),t=TS({inputs:{x:e},backend:n}),a=zk({inputs:{input:r},backend:n}),s=TS({inputs:{x:a},backend:n}),i=Cw({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return XN({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const $S={kernelName:Pr,backendName:"cpu",kernelFunc:TS},ES={kernelName:zn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=Ew({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=zk({inputs:{input:a},backend:r}),i=TS({inputs:{x:s},backend:r}),o=Cw({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return XN({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function RS(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return FN({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ne(s,e.shape,"All tensors passed to stack must have matching shapes"),te(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=Bk({inputs:t.map((e=>{const t=FN({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const AS={kernelName:Bn,backendName:"cpu",kernelFunc:RS},_S={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;nw(a,"pad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(a.dataId).values,c=se(a.shape),h=a.shape.length,p=Ie(a.shape),d=se(o),f=o.length,m=Ie(o),g=fe(a.dtype,d);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[Ae(_e(e,h,p).map(((e,t)=>e+l[t])),f,m)]=u[e];return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},FS=dw(((e,t)=>Math.pow(e,t))),DS=Fw(Vn,FS),OS={kernelName:Vn,backendName:"cpu",kernelFunc:DS};function MS(e,t,n,r){const[a,s]=Xo(e,r),i=Pa(t,"int32"),o=$e(se(a),i),l=se(s);for(let e=0;e<o.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}const LS={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;nw(a,"prod");const o=a.shape.length,l=pe(s,a.shape),u=Zo(l,o);let c=l,h=a;const p=[];null!=u&&(h=Zw({inputs:{x:a},backend:n,attrs:{perm:u}}),p.push(h),c=el(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=MS(h.shape,h.dtype,d,c);let y=m;return i&&(y=Yo(m,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function zS(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return $e(0,r);const a=$e(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}const PS={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=zS(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},BS=sw(qn,(e=>1/e)),WS={kernelName:qn,backendName:"cpu",kernelFunc:BS},VS={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;nw(a,"resizeBilinear");const l=Ie(a.shape),[u,c]=o,[h,p,d,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(se([h,u,c,f])),y=[s&&u>1?p-1:p,s&&c>1?d-1:d],b=[s&&u>1?u-1:u,s&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(p-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+s*l[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(d-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],p=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],s=t+(m[p+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},US={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;nw([s,a],"resizeBilinearGrad");const o=Ie(a.shape),[l,u,c,h]=a.shape,[,p,d]=s.shape,f=new Float32Array(l*u*c*h),m=[i&&p>1?u-1:u,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let v=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<p;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=t+r*o[1],i=t+a*o[1],l=n-r,p=1-l;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),a=t-n,u=1-a,d=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],w=p*u,k=p*a,N=l*u,I=l*a;for(let e=0;e<h;e++){const t=x[v++];f[d+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*N,f[y+e]+=t*I}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},GS={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;nw(a,"resizeNearestNeighbor");const l=Ie(a.shape),[u,c]=o,[h,p,d,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*u*c*f),y=[s&&u>1?p-1:p,s&&c>1?d-1:d],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let r=Math.min(p-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*l[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(d-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*l[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],a.dtype,g)}},HS={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;nw([s,a],"resizeNearestNeighborGrad");const o=Ie(a.shape),l=Ie(s.shape),[u,c,h,p]=a.shape,[,d,f]=s.shape,m=new Float32Array(u*c*h*p),g=n.data.get(s.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,N=2*Math.ceil(w)+2,I=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-N/2);for(let r=0;r<h;r++){const s=n+r*o[2],u=Math.floor(r*k),y=Math.floor(u-I/2);for(let n=0;n<p;n++){let o=0;for(let s=0;s<N;s++){const u=s+a;if(u<0||u>=d)continue;const p=t+u*l[1],m=u*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){const t=e+y;if(t<0||t>=f)continue;const a=p+t*l[2],s=t*v;r===Math.min(h-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},jS={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;nw(a,"reverse");const i=a.shape.length,o=pe(s,a.shape);if(0===i)return uw({inputs:{x:a},backend:n});const l=new Ca(a.shape,a.dtype),u=n.bufferSync(a);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},qS={kernelName:Wr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=fe(r.dtype,se(r.shape)),[u,c,h,p]=r.shape,[d,f]=bc(i,c,h),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*p;for(let e=0;e<c;e++){const n=e*(h*p);for(let r=0;r<h;r++){const a=r*p;for(let i=0;i<p;i++){const o=[u,e,r,i],b=o[2],x=o[1];let v=(b-d)*g-(x-f)*m,w=(b-d)*m+(x-f)*g;v=Math.round(v+d),w=Math.round(w+f);let k=s;"number"!=typeof s&&(k=3===i?255:s[i]),v>=0&&v<h&&w>=0&&w<c&&(k=y[t+w*(h*p)+v*p+i]),l[t+n+a+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},KS=sw(nr,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),XS={kernelName:nr,backendName:"cpu",kernelFunc:KS},YS=ww((e=>1/Math.sqrt(e))),QS=iw(rr,YS),ZS={kernelName:rr,backendName:"cpu",kernelFunc:QS};function JS(e,t,n,r,a,s,i,o,l,u){const c=[r/a,a],h=e.values,p=t.values;if(0===r)return Gs(n,t.dtype);const d=Gs(c,t.dtype);d.values.fill(l);for(let e=0;e<s;e++){const s=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];s.push(n),l+=n*o[t]}if(l<0||l>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)u?d.values[l*a+n]+=p[e*a+n]:d.values[l*a+n]=0===t.rank?p[0]:p[e*a+n]}return d}const eC={kernelName:ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Tc(0,a,i),p=JS(n.bufferSync(a),n.bufferSync(s),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}},tC={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;nw([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,c=Pa(a.dtype,s.dtype),h=$e(se(a.shape),c);let p=0;const d=0===i||i>1||1===a.shape.length?1:se(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<d;t++)1===o[e]?h[p++]=l[e]:h[p++]=u[e];return n.makeTensorInfo(a.shape,c,h)}},nC=$c,rC=Ec,aC=sw(ir,(e=>e>=0?rC*e:nC*(Math.exp(e)-1))),sC={kernelName:ir,backendName:"cpu",kernelFunc:aC},iC=sw(cr,(e=>e<0?-1:e>0?1:0)),oC={kernelName:cr,backendName:"cpu",kernelFunc:iC},lC=sw(lr,(e=>Math.sin(e))),uC={kernelName:lr,backendName:"cpu",kernelFunc:lC},cC=sw(ur,(e=>Math.sinh(e))),hC={kernelName:ur,backendName:"cpu",kernelFunc:cC},pC=Math.log(1.1920928955078125e-7)+2,dC=sw(pr,(e=>{const t=e>-pC,n=e<pC,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),fC={kernelName:pr,backendName:"cpu",kernelFunc:dC},mC={kernelName:mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;nw([a],"spaceToBatchND");const o=se(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);const u=_S.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),c=xc(u.shape,s,o,!1),h=vc(c.length,s.length,!1),p=wc(u.shape,s,o,!1),d=Pw({inputs:{x:u},backend:n,attrs:{shape:c}}),f=Zw({inputs:{x:d},backend:n,attrs:{perm:h}}),m=Pw({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};function gC(e,t,n,r,a,s,i){const o=t[0],l=s[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${o}`);return[me(n,0),[0,h],me(a,0),u,c]}let p=!0,d=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=l)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${l}`);++f[n],p=p&&n>=d,d=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],s=me(n,t*h),p=me(a,t),d=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],a=d[n],i=(0===n?0:f[n-1])+a;d[n]++;for(let n=0;n<h;++n)s[i*h+n]=e[t*h+n];p[i]=r[t],c[t]=i}for(let e=0;e<l;++e)if(0===d[e]){const t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;p[t]=i}return[s,[t,h],p,u,c]}}const yC={kernelName:br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[h,p,d,f,m]=gC(o,r.shape,r.dtype,l,a.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function bC(e,t,n,r,a){const s=se(r),i=t[0],o=a.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=a[e];if(-1===t){if(-1!==c)throw new Error(`only one output dimension may be -1, not both ${c} and ${e}`);c=e,l.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/u);if(u*e!==s)throw new Error(`Input to reshape is a SparseTensor with ${s}\n          dense values, but the requested shape requires a multiple of ${u}. inputShape=${r} outputShape= ${l}`);l[c]=e}const h=se(l);if(h!==s)throw new Error(`Input to reshape is a tensor with ${s} dense values, but the requested shape has ${h}. inputShape=${r} outputShape=${l}`);const p=r.length,d=[];if(p>0){d[p-1]=1;for(let e=p-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const m=me(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<p;++r)n+=e[t*p+r]*d[r];for(let e=0;e<o;++e)m[t*o+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[i,o],l]}const xC={kernelName:xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,c,h]=bC(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};function vC(e,t,n,r,a,s=!1,i=0){const o=r.length;if(o!==a.length)throw new Error("segmentIds and indices should have same size.");const l=[t[0],e.length/t[0]],u=l[1],c=o>0?a[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const p=me(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&p.fill(i),[p,h];if(c<=0)throw new Error("segment ids must be >= 0");let d=0,f=1,m=0,g=a[d];for(;;){let t=0;if(f<o){if(t=a[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(`Segment id ${g} out of range [0, ${c}), possibly because segmentIds input is not sorted.`);g>m&&p.fill(i,m*u,g*u);for(let t=d;t<f;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(`Bad: indices[${t}] == ${r[t]} out of range [0, ${l[0]})`);for(let t=0;t<u;t++)p[g*u+t]+=e[n*u+t]}if(s)for(let e=0;e<u;e++)p[g*u+e]/=f-d;if(d=f,++f,m=g+1,g=t,f>o)break}return m<c&&p.fill(i,m*u,c*u),[p,h]}const wC={kernelName:vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,c]=vC(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},kC={kernelName:wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,c]=vC(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},NC={kernelName:kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=Tc(0,a,o),d=JS(n.bufferSync(a),n.bufferSync(s),o,p,c,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,d.dtype,d.values)}},IC={kernelName:gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=pe(i,a.shape)[0],l=Qc(a,s,o),u=new Array(a.shape.length).fill(0),c=a.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=Ik({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},SC=ww((e=>Math.sqrt(e))),CC=sw(dr,(e=>Math.sqrt(e))),TC={kernelName:dr,backendName:"cpu",kernelFunc:CC},$C={kernelName:Ir,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;nw(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},EC=dw(((e,t)=>{const n=e-t;return n*n})),RC=Fw(Nr,EC),AC={kernelName:Nr,backendName:"cpu",kernelFunc:RC},_C=sw(Br,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),FC={kernelName:Br,backendName:"cpu",kernelFunc:_C};function DC(e,t,n,r){const a=Gs(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}const OC={kernelName:Sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;nw(a,"stridedSlice");const{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=yi(a.shape,s,i,o,l,u,c,h,p),x=Pw({inputs:{x:a},backend:n,attrs:{shape:y}});let v;if(d){const e=Ik({inputs:{x},backend:n,attrs:{begin:f,size:g}});v=Pw({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))v=n.makeTensorInfo(b,a.dtype,[]);else{const e=DC(b,n.bufferSync(x),m,f);v=n.makeTensorInfo(e.shape,e.dtype,e.values)}const w=Pw({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}};class MC{constructor(e,t,n,r,a,s){this.separator=ga(e),this.nGramWidths=t,this.leftPad=ga(n),this.rightPad=ga(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),c=s-(l+u),h=t+(l>0?0:i-o);let p=0;p+=l*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=u*this.rightPad.length,p+=(l+u+c-1)*this.separator.length,n[r+i]=new Uint8Array(p);const d=n[r+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,s=me("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}const i=new Array(s[a]);for(let n=0;n<a;++n){const r=t[n];let a=s[n];if(this.nGramWidths.forEach((s=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,l,s),a+=l})),this.preserveShort&&a===s[n]){const s=t[n+1]-t[n];if(0===s)continue;const o=s+2*this.padWidth,l=1;this.createNGrams(e,r,i,a,l,o)}}return[i,s]}}function LC(e,t,n,r,a,s,i,o){return new MC(n,r,a,s,i,o).compute(e,t)}const zC={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=LC(p,d,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function PC(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function BC(e,t,n){const r=e.length,a=[];let s=0,i=0;const o=new Array(r);for(let l=0;l<r;++l){const r=a.length;PC(e[l],t,n,a);const u=a.length-r;o[l]=u,s+=u,i=Math.max(i,u)}const l=me("int32",2*s),u=new Array(s),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=a[h],++h;return[l,u,c]}const WC={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=BC(o,l,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function VC(e,t){const n=me("int32",e.length);for(let r=0;r<e.length;++r)n[r]=pa(e[r]).modulo(t).getLowBitsUnsigned();return n}const UC={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=VC(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},GC=sw(Rr,(e=>Math.tan(e))),HC={kernelName:Rr,backendName:"cpu",kernelFunc:GC},jC=sw(Ar,(e=>Math.tanh(e)));function qC(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Gs(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}const KC=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function XC(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);XC(e,t,Math.max(n,Math.floor(t-s*o/a+l)),Math.min(r,Math.floor(t+(a-s)*o/a+l)))}const a=e[t];let s=n,i=r;for(ee(e,n,t),KC(e[r],a)>0&&ee(e,n,r);s<i;){for(ee(e,s,i),s++,i--;KC(e[s],a)<0;)s+=1;for(;KC(e[i],a)>0;)i-=1}0===KC(e[n],a)?ee(e,n,i):(i+=1,ee(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function YC(e,t,n,r,a){const s=t[t.length-1],[i,o]=[e.length/s,s],l=fe(n,i*r),u=fe("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o);let i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(XC(i,r),i=i.slice(0,r)),a&&i.sort(KC);const c=t*r,h=l.subarray(c,c+r),p=u.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,p[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[Gs(c,n,l),Gs(c,"int32",u)]}const QC={kernelName:Dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,p,d]=a.shape,[f,m]=null!=u?u:[h,p],g=[c,f,m,d],y=Ie(a.shape),b=y[0],x=y[1],v=y[2],w=fe(a.dtype,se(g));w.fill(l);const k=r.data.get(a.dataId).values,N=r.data.get(s.dataId).values;for(let e=0;e<c;++e){const t=1===s.shape[0]?N:N.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<d;++a){let s;const u=t[6]*r+t[7]*n+1;if(0===u)continue;const c=(t[0]*r+t[1]*n+t[2])/u,d=(t[3]*r+t[4]*n+t[5])/u,f=ZC(c,p,o),m=ZC(d,h,o);switch(i){case"nearest":s=eT(k,h,p,b,x,v,e,m,f,a,l);break;case"bilinear":s=tT(k,h,p,b,x,v,e,m,f,a,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*b+n*x+r*v+a]=s}return r.makeTensorInfo(g,a.dtype,w)}return{dataId:r.write(w,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function ZC(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Z(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return Z(0,n,t-1)}(e,t);case"nearest":return function(e,t){return Z(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function JC(e,t,n,r,a,s,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:c}function eT(e,t,n,r,a,s,i,o,l,u,c){return JC(e,t,n,r,a,s,i,Math.round(o),Math.round(l),u,c)}function tT(e,t,n,r,a,s,i,o,l,u,c){const h=Math.floor(o),p=Math.floor(l),d=h+1,f=p+1;return(d-o)*((f-l)*JC(e,t,n,r,a,s,i,h,p,u,c)+(l-p)*JC(e,t,n,r,a,s,i,h,f,u,c))+(o-h)*((f-l)*JC(e,t,n,r,a,s,i,d,p,u,c)+(l-p)*JC(e,t,n,r,a,s,i,d,f,u,c))}function nT(e,t,n,r){const a=pe(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const i={},o=new Int32Array(n[a]),l=new Ca(s,r,e),u=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}const h=s.slice();h[1]=Object.keys(i).length;const p=new Ca(h,r);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(l.get(n,e,r),n,t,r)}));const d=n.slice();return d[a]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const rT={kernelName:zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;nw(a,"unsortedSegmentSum");const o=[],l=[],u=a.shape.length-s.shape.length;let c=s;for(let e=0;e<u;++e){const t=FN({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=da(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=vN({inputs:{a:r,b:c},backend:n}),i=Aw({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=dN({inputs:{a:i,b:a},backend:n}),h=mN({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(s),l.push(i),l.push(u),l.push(h)}const h=RS({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},aT=[Uw,Hw,qw,Xw,zw,Yw,ek,tk,nk,rk,sk,ok,uk,pk,fk,bk,xk,vk,wk,Vw,kk,Ck,Ek,Rk,_w,Fk,Ok,Tw,Mk,Wk,Gk,Hk,Uk,qk,Kk,jk,Yk,Zk,Jk,eN,tN,nN,aN,sN,iN,oN,lN,cN,uN,BN,yN,lw,bN,wN,EN,_N,DN,LN,KN,YN,QN,eI,rI,aI,sI,oI,uI,pI,mI,cw,gI,Pk,bI,vI,kI,pw,SI,$I,RI,FI,OI,zI,BI,UI,GI,HI,QI,ZI,JI,eS,tS,nS,KI,rS,aS,oS,lS,hS,fS,fN,gS,bS,vS,kS,SS,CS,ES,AS,_S,OS,gw,LS,PS,Rw,WS,bw,vw,Bw,VS,US,GS,HS,jS,qS,XS,ZS,eC,tC,sC,Iw,oC,uC,hC,Sk,dS,fC,mC,yC,xC,wC,kC,NC,IC,TC,$C,AC,FC,OC,zC,WC,UC,GN,gN,HC,{kernelName:Ar,backendName:"cpu",kernelFunc:jC},{kernelName:_r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;nw(a,"tile");const i=qC(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;nw(a,"topk");const o=n.data.get(a.dataId).values,[l,u]=YC(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},Jw,QC,{kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;nw(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=nT(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);const c=new Array(i).fill(0),h=a.shape.slice();h[s]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[s]=e;const t=Ik({inputs:{x:a},backend:n,attrs:{begin:c,size:h}});p[e]=Pw({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return p}},rT,$S];for(const e of aT)Yr(e);const sT={},iT={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function oT(e){if(!(e in sT)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete sT[e]}),!1),1===e?t.getContext("webgl",iT)||t.getContext("experimental-webgl",iT):t.getContext("webgl2",iT)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;sT[e]=t}const t=sT[e];return t.isContextLost()?(delete sT[e],oT(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),sT[e])}var lT,uT,cT;function hT(e,t){return[t,e]}function pT(e){const t=se(e);return le(Math.ceil(t/4))}function dT(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function fT(e,t){const n=e;let r,a,s,i,o,l,u,c,h,p;return 2===ze().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT),l=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function mT(e,t){const n=t();return ze().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function gT(e){return!!(ze().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function yT(e,t){return ST(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(lT||(lT={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(uT||(uT={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(cT||(cT={}));const bT=/ERROR: [0-9]+:([0-9]+):/g;function xT(e,t){if(mT(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function vT(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(mT(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),mT(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),mT(e,(()=>e.enableVertexAttribArray(o))),!0)}function wT(e,t,n,r){mT(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),mT(e,(()=>e.activeTexture(e.TEXTURE0+n))),mT(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),mT(e,(()=>e.uniform1i(n,r)))}function kT(e,t,n){mT(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),mT(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function NT(e,t){mT(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),mT(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function IT(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function ST(e,t,n){const r=mT(e,(()=>t()));if(null==r)throw new Error(n);return r}function CT(e,t=2){return se(e.slice(0,e.length-t))}function TT(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function $T(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[CT(e),...TT(e)]),t}function ET(e){return e%2==0}function RT(e,t){if(ie(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(ET(n)&&ET(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&ET(e[0])&&ET(t[0])}let AT,_T;function FT(e,t){return null!=e.getExtension(t)}function DT(e){try{if(null!=oT(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function OT(e){const t=fT(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function MT(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&te("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const LT=ze();function zT(){let e,t,n,r,a,s,i,o,l,u;return 2===ze().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function PT(e,t,n="index"){const r=Ie(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function BT(e,t,n="index"){const r=Ie(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function WT(e){const t=Ie(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}LT.registerFlag("HAS_WEBGL",(()=>LT.getNumber("WEBGL_VERSION")>0)),LT.registerFlag("WEBGL_VERSION",(()=>DT(2)?2:DT(1)?1:0)),LT.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),LT.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===LT.get("WEBGL_VERSION"))),LT.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),LT.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),LT.registerFlag("WEBGL_PACK",(()=>LT.getBool("HAS_WEBGL"))),LT.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>LT.getBool("WEBGL_PACK"))),LT.registerFlag("WEBGL_PACK_CLIP",(()=>LT.getBool("WEBGL_PACK"))),LT.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>LT.getBool("WEBGL_PACK"))),LT.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>LT.getBool("WEBGL_PACK"))),LT.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>LT.getBool("WEBGL_PACK"))),LT.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>LT.getBool("WEBGL_PACK"))),LT.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>LT.getBool("WEBGL_PACK"))),LT.registerFlag("WEBGL_PACK_REDUCE",(()=>LT.getBool("WEBGL_PACK"))),LT.registerFlag("WEBGL_LAZILY_UNPACK",(()=>LT.getBool("WEBGL_PACK"))),LT.registerFlag("WEBGL_CONV_IM2COL",(()=>LT.getBool("WEBGL_PACK"))),LT.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==AT){const t=oT(e);AT=t.getParameter(t.MAX_TEXTURE_SIZE)}return AT}(LT.getNumber("WEBGL_VERSION")))),LT.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==_T){const t=oT(e);_T=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,_T)}(LT.getNumber("WEBGL_VERSION")))),LT.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=LT.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=oT(e);return t=FT(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:FT(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),LT.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>LT.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Qa())),LT.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=oT(e);if(1===e){if(!FT(t,"OES_texture_float"))return!1}else if(!FT(t,"EXT_color_buffer_float"))return!1;return OT(t)}(LT.getNumber("WEBGL_VERSION")))),LT.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!LT.getBool("WEBGL_FORCE_F16_TEXTURES")&&LT.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),LT.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=oT(e);if(1!==e){if(FT(t,"EXT_color_buffer_float"))return OT(t);const e="EXT_color_buffer_half_float";if(FT(t,e)){const n=t.getExtension(e);return function(e,t){const n=fT(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!FT(t,"OES_texture_float")&&!!FT(t,"WEBGL_color_buffer_float")&&OT(t)}(LT.getNumber("WEBGL_VERSION")))),LT.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=LT.getNumber("WEBGL_VERSION"))&&null!=oT(e).fenceSync;var e})),LT.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>LT.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),LT.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),LT.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Qa()&&LT.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),LT.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),LT.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),LT.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),LT.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const VT="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:UT}=r;function GT(e,t,n){const r=[];if(e.forEach((e=>{const t=se(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=e$(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),s=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?jT(e,r):HT(e,r);const s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=UT(e.shapeInfo.logicalShape,t.logicalShape),l=JT(i),u=i-s;let c;const h=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let p="";p=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let d="return outputValue;";const f=1===se(e.shapeInfo.logicalShape),m=1===se(t.logicalShape);if(1!==s||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&ie(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=JT(l),c=UT(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", "),`\n    float ${a}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=zT(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${qT}\n    ${KT}\n    ${XT}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ie(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return ie(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${BT(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=PT(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${BT(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=PT(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=PT(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=PT(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=YT),[h,l,c,a,u,s,n.userCode].join("\n")}function HT(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=QT(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${ZT(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=QT(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&ie(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=de(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${HT(t$(e,l),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${n$(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${ZT(e)}\n      }\n    `;const u=s[0],c=s[1],h=QT(r);return 1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=de(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${HT(t$(e,u),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${n$(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${ZT(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===s&&null==d)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===i&&null==d)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=QT(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=de(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${HT(t$(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${n$(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${ZT(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(d===o&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(d===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=QT(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=de(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${HT(t$(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${n$(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${ZT(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${QT(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=de(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${HT(t$(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${n$(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${ZT(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${QT(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function jT(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${zT().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=zT();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=zT();if(null!=s&&ie(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${jT(t$(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${n$(s,r)});\n        }\n      `}const o=zT();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=zT();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(s[i-1]/2);let p=h*Math.ceil(s[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)d=`int b${e}, `+d,p*=s[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const qT="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",KT="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",XT="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",YT="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function QT(e){return`offset${e}`}function ZT(e){const t=e.name,n=se(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function JT(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function e$(e,t,n){const{newShape:r,keptDims:a}=de(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!ie(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function t$(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function n$(e,t){return t.map((t=>e[t])).join(", ")}function r$(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!ie(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!ie(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function a$(e){return ze().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class s${constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=lT.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=zT();this.outputShape=e,this.enableShapeUniforms=a$(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?BT(["r","c","d"],e):PT(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class i${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=lT.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=zT();this.outputShape=e,this.enableShapeUniforms=a$(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?BT(["r","c","d"],e):PT(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class o${constructor(e){this.variableNames=["A"],this.outTexUsage=uT.DOWNLOAD;const t=zT();this.outputShape=e,this.userCode=`\n      ${VT}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class l${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=uT.DOWNLOAD;const t=zT();this.outputShape=e,this.userCode=`\n      ${VT}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class u${constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=zT();this.outputShape=e,this.enableShapeUniforms=a$(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":WT(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class c${constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=zT();this.outputShape=e,this.enableShapeUniforms=a$(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":WT(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function h$(e,t,n,r,a,s){!function(e,t){const n=ze().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return ST(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return mT(e,(()=>e.bindTexture(o,i))),mT(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),mT(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),mT(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),mT(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),mT(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))),mT(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function p$(e){return e.internalFormatFloat}function d$(e){return e.internalFormatHalfFloat}function f$(e){return e.downloadTextureFormat}function m$(e){return e.internalFormatPackedFloat}function g$(e){return e.internalFormatPackedHalfFloat}class y${constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=ze().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){sT[e]=t}(t,e)):this.gl=oT(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===ze().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=yT(this.gl,e),FT(this.gl,t))this.textureHalfFloatExtension=yT(this.gl,t);else if(ze().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),FT(this.gl,r))this.colorBufferHalfFloatExtension=yT(this.gl,r);else if(ze().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",FT(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!FT(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=ST(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return mT(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),mT(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=ST(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return mT(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),mT(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return ST(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=fT(this.gl,this.textureHalfFloatExtension)}get debug(){return ze().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;mT(e,(()=>e.finish())),mT(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),mT(e,(()=>e.deleteFramebuffer(this.framebuffer))),mT(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),mT(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),mT(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=hT(t,n);return h$(e,a,s,p$(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=hT(t,n);return h$(e,a,s,d$(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=hT(t,n);return h$(e,a,s,f$(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){mT(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?mT(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):mT(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),mT(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,l;mT(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),mT(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),mT(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=dT(t,n);return h$(e,a,s,g$(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=dT(t,n);return h$(e,a,s,m$(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(NT(this.gl,this.framebuffer),this.outputTexture=null),mT(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=hT(t,n),i=new Uint8Array(t*n*4);return mT(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return function(e,t,n,r,a,s,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=dT(e,t);return n*r*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();mT(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return mT(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),mT(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),mT(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(ze().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return mT(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=ST(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(mT(e,(()=>e.shaderSource(n,t))),mT(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=bT.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>ue((t+1).toString(),s)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,r-1),u=i.slice(r-1,r),c=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${ue(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e);null==this.vertexShader&&(this.vertexShader=function(e){const t=zT();return function(e,t){const n=ST(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(mT(e,(()=>e.shaderSource(n,t))),mT(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const r=function(e){return ST(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return mT(t,(()=>t.attachShader(r,this.vertexShader))),mT(t,(()=>t.attachShader(r,n))),function(e,t){if(mT(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,r),this.debug&&xT(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(e,t,n){return mT(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),vT(e,t,"clipSpacePos",n,3,20,0)&&vT(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&mT(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&xT(this.gl,this.program),mT(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return ST(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),mT(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),wT(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=dT(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&xT(this.gl,this.program),IT(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),mT(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),mT(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=yT(this.gl,2===ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ce((()=>this.disposed||this.isQueryAvailable(e,ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||ce((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),kT(this.gl,e,this.framebuffer),this.debug&&IT(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(kT(this.gl,this.outputTexture,this.framebuffer),this.debug&&IT(this.gl)):NT(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;kT(r,e,this.framebuffer),this.debug&&IT(r),this.outputTexture=e,mT(r,(()=>r.viewport(0,0,t,n))),mT(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),mT(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:b$,bincountImpl:x$,bincountReduceImpl:v$,ceilImpl:w$,concatImpl:k$,equalImpl:N$,expImpl:I$,expm1Impl:S$,floorImpl:C$,gatherNdImpl:T$,gatherV2Impl:$$,greaterImpl:E$,greaterEqualImpl:R$,lessImpl:A$,lessEqualImpl:_$,linSpaceImpl:F$,logImpl:D$,maxImpl:O$,maximumImpl:M$,minimumImpl:L$,multiplyImpl:z$,negImpl:P$,notEqualImpl:B$,prodImpl:W$,rangeImpl:V$,rsqrtImpl:U$,sigmoidImpl:G$,simpleAbsImpl:H$,sliceImpl:j$,sparseFillEmptyRowsImpl:q$,sparseReshapeImpl:K$,sparseSegmentReductionImpl:X$,sqrtImpl:Y$,stridedSliceImpl:Q$,stringNGramsImpl:Z$,stringSplitImpl:J$,stringToHashBucketFastImpl:eE,subImpl:tE,tileImpl:nE,topKImpl:rE,transposeImpl:aE,uniqueImpl:sE}=N;function iE(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function oE(e,t){return 1===t?[e]:iE(e,t)}class lE{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=oE("rc",t),r=JT(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class uE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=a$(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}(["r","c","d"],"inputShape"):PT(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":WT(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class cE{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=pE(t,n),a=dE(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=hE(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===cT.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===cT.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===cT.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===cT.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===cT.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=pE(n,r),s=dE(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=hE(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=ze().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function hE(e,t,n,r,a){const s=function(e,t){switch(e){case cT.PACKED_2X2_FLOAT32:return m$(t);case cT.PACKED_2X2_FLOAT16:return g$(t);case cT.UNPACKED_FLOAT32:return p$(t);case cT.UNPACKED_FLOAT16:return d$(t);case cT.PACKED_4X1_UNSIGNED_BYTE:return f$(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=dT(e[0],e[1]);i=t*n}else{const[t,n]=hT(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function pE(e,t){if(e===uT.UPLOAD)return cT.PACKED_2X2_FLOAT32;if(e===uT.RENDER||null==e)return function(e){return ze().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?cT.PACKED_2X2_FLOAT32:cT.UNPACKED_FLOAT32:e?cT.PACKED_2X2_FLOAT16:cT.UNPACKED_FLOAT16}(t);if(e===uT.DOWNLOAD||e===uT.PIXELS)return cT.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function dE(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class fE{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=a$(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const mE="return abs(x);",gE="return x;";class yE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=a$(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class bE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=oE("rc",t),r=JT(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const xE=rh,vE={},wE=ze().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class kE extends X{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ze().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=oT(ze().getNumber("WEBGL_VERSION"));this.binaryCache=((t=ze().getNumber("WEBGL_VERSION"))in vE||(vE[t]={}),vE[t]),this.gpgpu=new y$(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new cE(this.gpgpu),this.numMBBeforeWarning=null==ze().global.screen?1024:ze().global.screen.height*ze().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new K(this,wi())}nextDataId(){return kE.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((ze().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ze().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:uT.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(ze().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:uT.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new yE(i,gE):new fE(i,gE);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=ma()),c="complex64"===r?Mc(this.readSync(a.real.dataId),this.readSync(a.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=ma()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new yE(r,gE):new fE(r,gE);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!ze().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ze().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==s&&ze().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...pT(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=Mc(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=se(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;mT(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&wi().removeDataId(e,this),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>ya(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Gs(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!gT(n)){if(ze().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=se(t);if(ze().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...pT(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=ze().getBool("WEBGL_PACK")&&!0===r,i=s?$T(t):t,o=s?new l$(i):new o$(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=ae(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=ae(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ma(),endMs:null}}endTimer(e){return ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ma(),e)}async getQueryTime(e){if(ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=wE){return ze().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&se(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){De("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return xE(e.shape,t)}packedUnaryOp(e,t,n){const r=new yE(e.shape,t),a=this.compileAndRun(r,[e],n);return wi().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=H$(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(ze().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,mE,e.dtype);const t=new fE(e.shape,mE),n=this.compileAndRun(t,[e]);return wi().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&xe(n[0])){const a=n.map((e=>ga(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return wi().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new bE(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new lE(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[CT(e.shape),...TT(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[CT(t),...TT(t)],s=new uE(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=$T(r);let i;const o=pT(s);i=n?new i$(s):new s$(s);const l=[o];return{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,l,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===lT.DENSE){const t=pT(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===se(s.shape))return i.values=fe(s.dtype,0),s;const o=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&se(t.shape)<=ze().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!RT(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const u={shape:s.shape,texData:i,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=e$(e.packedInputs,t.shape,s);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=Ie(o);h=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const p=t.shape.length,d=2===o.length&&ie(t.shape,s),f=1===se(t.shape),m=xo(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&ie(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${p}_${g}_${i?l:""}_${o.length}_${f}_${m}_${d}_${u}_${c}_${h}_${y}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a+`${ze().getNumber("WEBGL_VERSION")}`,s}(e,l,u),h=this.getAndSaveBinary(c,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=GT(a,i,t),l=e.createProgram(o);let u=null;const c=e.getUniformLocation(l,"NAN",!1);1===ze().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(l,"INFINITY",!1));const h=!1,p={},d={},f={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];p[r]=e.getUniformLocation(l,r,h),p[`offset${r}`]=e.getUniformLocation(l,`offset${r}`,h),t.enableShapeUniforms&&(d[`${r}Shape`]=e.getUniformLocation(l,`${r}Shape`,h),f[`${r}TexShape`]=e.getUniformLocation(l,`${r}TexShape`,h))}let m,g,y;t.enableShapeUniforms&&(m=e.getUniformLocation(l,"outShape",h),y=e.getUniformLocation(l,"outShapeStrides",h),g=e.getUniformLocation(l,"outTexShape",h));const b=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{b[n]=e.getUniformLocation(l,t.name,h)})),{program:t,source:o,webGLProgram:l,uniformLocations:p,customUniformLocations:b,inShapeInfos:s,outShapeInfo:i,infLoc:u,nanLoc:c,inShapesLocations:d,inTexShapesLocations:f,outShapeLocation:m,outShapeStridesLocation:y,outTexShapeLocation:g}}(this.gpgpu,e,l,u))),p=null!=this.activeTimers;let d;p&&(d=this.startTimer()),function(e,t,n,r,a){t.program.enableShapeUniforms||(r$(t.inShapeInfos,n),r$([t.outShapeInfo],[r]));const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===ze().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],l=t.inTexShapesLocations[`${a}TexShape`];if(o){const{uniformShape:r}=e$(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(se(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=Ie(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{const s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,h,l,u,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)}));const f=ze().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=ma();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!ze().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(ze().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Ni((()=>{if(!ze().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=ze().getBool("DEBUG");ze().set("DEBUG",!1);const t=this.abs($i(1e-8)).dataSync()[0];if(ze().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const l=null!=this.activeTimers;let u;l&&(u=ma());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=ze().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?J(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=de(e);e=t.newShape}let r=se(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=CT(e);let n=2,a=2;return e.length&&([n,a]=TT(e)),r=t*(n/2)*(a/2),le(r).map((e=>2*e))}return le(r)}(n,o),t.texShape=c),null!=a){const e=$T(n);let s,i=c[1],h=c[0];const p=a instanceof Uint8Array;o?([i,h]=dT(c[0],c[1]),s=new c$(e,p)):s=new u$(e,p);const d=this.makeTensorInfo([h,i],r);this.texData.get(d.dataId).usage=p?uT.PIXELS:uT.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(d.dataId),i,h,a);const f=[[h,i]],m=!0,g=this.runWebGLProgram(s,[d],r,f,m),y=this.texData.get(g.dataId);t.texture=y.texture,t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,this.disposeIntermediateTensorInfo(d),this.texData.delete(g.dataId),t.values=null,l&&(this.uploadWaitMs+=ma()-u)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*be(t)}}kE.nextDataId=0,Za()&&Ci("webgl",(()=>new kE),2);class NE{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=wo(t,n),this.enableShapeUniforms=a$(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class IE{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=wo(t,n);const a=this.outputShape.length;this.enableShapeUniforms=a$(a);let s="";if(r)if(0===a||1===se(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${JT(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=oE("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function SE(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const CE={kernelName:tn,backendName:"webgl",kernelFunc:SE};function TE(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=SE({inputs:{x:r},backend:n}),l=SE({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}const $E={kernelName:ft,backendName:"webgl",kernelFunc:TE},EE="return (a < 0.) ? b * a : a;",RE="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",AE={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",da(s,"float32")),o=ze().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new IE(RE,a.shape,i.shape):new NE(EE,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],a.dtype);return n.disposeIntermediateTensorInfo(i),l}},_E="return (a < 0.) ? b * a : a;",FE="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",DE={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=ze().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new IE(FE,r.shape,a.shape):new NE(_E,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}};function OE({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,o=s,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=ze().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new yE(i.shape,t):new fE(i.shape,e),o.runWebGLProgram(u,[i],l)}}function ME({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new NE(e,l.shape,u.shape);return c.runWebGLProgram(i,[a,s],Pa(n.dtype,r.dtype))})),s=TE({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),s}const h=s||Pa(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=a){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?th(e):e,r="string"===l.dtype?th(t):t,[s,i]=a(l.shape,u.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=s,o}let p;return p=ze().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new IE(t,l.shape,u.shape,n):new NE(e,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function LE(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?FE:_E;if("leakyrelu"===e)return t?RE:EE;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class zE{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=a$(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class PE{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=wo(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const BE="return a * b;";function WE(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=Pa(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new PE("return areal * breal - aimag * bimag;",r.shape,a.shape),i=new PE("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],l=n.runWebGLProgram(s,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=TE({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=z$(r.shape,a.shape,e.values,t.values,s),l=n.makeTensorInfo(o,s);return n.texData.get(l.dataId).values=i,l}let i;return i=ze().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new IE(BE,r.shape,a.shape):new NE(BE,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}const VE={kernelName:_n,backendName:"webgl",kernelFunc:WE};function UE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=se(a.shape),l=he(s,o),u=se(l);te(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(a.dataId);return!c.isPacked||RT(a.shape,l)||null!==c.texture&&RT(c.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){const r=[CT(e.shape),...TT(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[CT(t),...TT(t)],i=new uE(s,r),o=[r],l=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(a,l,i)}const GE={kernelName:Xn,backendName:"webgl",kernelFunc:UE};class HE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${oe(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class jE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function qE(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=yc(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:l,outSize:u}=a[i];let c,h;c="mean"===n?0===i?new HE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new HE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new jE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=s,s=r.runWebGLProgram(c,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}class KE{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=JT(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class XE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=JT(this.rank),a=iE("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function YE(e,t,n){const r=ze().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new XE(e.shape,t):new KE(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function QE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){const a=t,s=e.shape.length,i=pe(a,e.shape);let o=i;const l=Zo(o,s),u=null!=l;let c=e;u&&(c=YE(e,l,r),o=el(o.length,s)),Qo("sum",o,s);const[h,p]=Xo(c.shape,o);let d=h;n&&(d=Yo(h,i));const f=se(p),m=UE({inputs:{x:c},attrs:{shape:[se(e.shape)/f,f]},backend:r}),g=qE(m,Ba(e.dtype),"sum",r),y=UE({inputs:{x:g},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),y}(a,s,i,n)}const ZE={kernelName:fr,backendName:"webgl",kernelFunc:QE};function JE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=a.shape[s[e]];let u;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=aE(e,a.shape,a.dtype,s,l);u=i.makeTensorInfo(l,a.dtype),i.texData.get(u.dataId).values=t}else u=YE(a,s,i);return u}const eR={kernelName:Or,backendName:"webgl",kernelFunc:JE};function tR({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],p=r?t.shape[c-1]:t.shape[c-2],d=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=se(m),b=se(g);te(u>=2&&c>=2&&(y===b||1===y||1===b),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const x=(y>b?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([d,f]);te(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[y,h,d]:[y,d,h],w=r?[b,f,p]:[b,p,f],k=UE({inputs:{x:e},backend:a,attrs:{shape:v}}),N=UE({inputs:{x:t},backend:a,attrs:{shape:w}}),I=[k,N],S=Math.max(y,b),C=n?k.shape[1]:k.shape[2],T=null!=s,$=null!=i,E="leakyrelu"===l,R=null!=l?LE(l,!0):null;let A;if((1===d||1===f)&&C>1e3&&!1===(T||$||E||null!=R)){let e=k,t=N;n&&(e=JE({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),I.push(e)),r&&(t=JE({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),I.push(t));const s=1===f;let i=e;1!==f&&(i=UE({inputs:{x:e},backend:a,attrs:{shape:[S,C,1]}}),I.push(i));const o=1===f?2:1;let l=t;s&&(l=UE({inputs:{x:t},backend:a,attrs:{shape:[S,1,C]}}),I.push(l));const u=WE({inputs:{a:i,b:l},backend:a});A=QE({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),I.push(u)}else{const l=Pa(e.dtype,t.dtype),u=new zE(v,w,[S,d,f],n,r,T,R,$,E),c=[k,N];if(null!=s&&c.push(s),$&&c.push(i),E){const e=a.makeTensorInfo([],"float32",da(o,"float32"));c.push(e),I.push(e)}A=a.runWebGLProgram(u,c,l)}const _=UE({inputs:{x:A},backend:a,attrs:{shape:x}});I.push(A);for(const e of I)a.disposeIntermediateTensorInfo(e);return _}const nR={kernelName:Vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return tR({a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},rR="return abs(x);",aR={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=H$(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=ze().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new yE(r.shape,rR):new fE(r.shape,rR),n.runWebGLProgram(a,[r],r.dtype)}},sR=OE({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),iR={kernelName:Ge,backendName:"webgl",kernelFunc:sR},oR=OE({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),lR={kernelName:He,backendName:"webgl",kernelFunc:oR},uR="return a + b;",cR=ME({opSnippet:uR,packedOpSnippet:uR,supportsComplex:!0,cpuKernelImpl:b$}),hR={kernelName:je,backendName:"webgl",kernelFunc:cR};class pR{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class dR{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const fR={kernelName:qe,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return SE({inputs:{x:a[0]},backend:r});if(a.length>ze().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>Pa(e,t))),i=a.map((e=>e.shape)),o=ze().getBool("WEBGL_PACK")?new dR(a[0].shape,i):new pR(a[0].shape,i);return r.runWebGLProgram(o,a,s)}},mR={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=pe(s,a.shape);let u=l;const c=Zo(u,o);let h=a;null!=c&&(h=JE({inputs:{x:a},backend:n,attrs:{perm:c}}),u=el(u.length,o)),Qo("all",u,o);const[p,d]=Xo(h.shape,u),f=UE({inputs:{x:h},backend:n,attrs:{shape:[-1,se(d)]}}),m=qE(f,f.dtype,"all",n);let g;return g=UE(i?{inputs:{x:m},backend:n,attrs:{shape:Yo(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},gR={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=pe(s,a.shape);let u=l;const c=Zo(u,o);let h=a;null!=c&&(h=JE({inputs:{x:a},backend:n,attrs:{perm:c}}),u=el(u.length,o)),Qo("any",u,o);const[p,d]=Xo(h.shape,u),f=UE({inputs:{x:h},backend:n,attrs:{shape:[-1,se(d)]}}),m=qE(f,f.dtype,"any",n);let g;return g=UE(i?{inputs:{x:m},backend:n,attrs:{shape:Yo(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class yR{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class bR{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,te(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=JT(o),u=oE("coords",o);let c,h;if(1===s){h=o+1;const e=JT(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=oE("sourceLocR",h-1).concat("inIdx.r"),g=oE("sourceLocG",h-1).concat("inIdx.g"),y=oE("sourceLocB",h-1).concat("inIdx.b"),b=oE("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function xR(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=yc(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new yR(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=xR(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function vR(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=yc(a[a.length-1]),i=new bR(a,s,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const r=vR(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function wR(e,t,n,r){const a=[n];if(Qo("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!ze().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=Xo(i.shape,a),u=se(l),c=UE({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=xR(e,c,r);n.push(h);const p=UE({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return vR(e,t,r)}const kR={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=pe(s,a.shape);const o=Zo(i,a.shape.length);let l=a;const u=[];null!=o&&(l=JE({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=el(i.length,l.shape.length)),Qo("argMax",[i[0]],l.shape.length);const c=wR(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},NR={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=pe(s,a.shape);const o=Zo(i,a.shape.length);let l=a;const u=[];null!=o&&(l=JE({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=el(i.length,l.shape.length)),Qo("argMin",[i[0]],l.shape.length);const c=wR(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},IR=OE({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),SR={kernelName:Ze,backendName:"webgl",kernelFunc:IR},CR=OE({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),TR={kernelName:Je,backendName:"webgl",kernelFunc:CR},$R=OE({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),ER={kernelName:et,backendName:"webgl",kernelFunc:$R},RR=ME({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),AR={kernelName:nt,backendName:"webgl",kernelFunc:RR},_R=OE({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),FR={kernelName:tt,backendName:"webgl",kernelFunc:_R};class DR{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class OR{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(s/4),k=s%4,N=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${N}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${N}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const MR={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;MT(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;te(ji(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Mi(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ie(u.inShape,u.outShape))return SE({inputs:{x:a},backend:n});const c=new DR(u,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}},LR={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=Li(a.shape,s,i,[1,1,1],o,l,u),h=new OR(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};class zR{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class PR{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const BR={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Li(i.shape,o,l,[1,1,1],u,c),p=new PR(h);return n.runWebGLProgram(p,[a],i.dtype)}},WR={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;MT([a,s],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Mi(i.shape,o,l,1,u),h=new zR(c);return n.runWebGLProgram(h,[a],i.dtype)}},VR={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return tR({a,b:s,transposeA:i,transposeB:o,backend:n})}};class UR{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],wo(e,t),wo(e,n);let i="0.0";null!=r&&(wo(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(wo(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class GR{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],wo(e,t),wo(e,n);let i="vec4(0.0)";null!=r&&(wo(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(wo(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const HR={kernelName:Yt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=e;te(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),te(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),te(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,a,s];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const p=ze().getBool("WEBGL_PACK_NORMALIZATION")?new GR(r.shape,a.shape,s.shape,c,h,l):new UR(r.shape,a.shape,s.shape,c,h,l);return t.runWebGLProgram(p,u,u[0].dtype)}};class jR{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=JT(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return qR.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${qR[t]} = start[${t}] + coords.${qR[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const qR=["x","y","z","w","u","v"];class KR{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=JT(this.rank),n=oE("coords",this.rank),r=oE("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function XR(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=gi(a,s,i);if(ni(a,o,l),0===se(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=j$(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}const{isPacked:u}=n.texData.get(a.dataId),c=fi(a.shape,o,l);if(u||!c){const e=ze().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new KR(l):new jR(l),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=mi(t,Ie(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,n)}const YR={kernelName:or,backendName:"webgl",kernelFunc:XR},QR={kernelName:lt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;te(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),l=xc(a.shape,s,o),u=vc(l.length,s.length),c=wc(a.shape,s,o),h=kc(i,s.length),p=Nc(c,i,s.length),d=[],f=UE({inputs:{x:a},backend:n,attrs:{shape:l}}),m=JE({inputs:{x:f},backend:n,attrs:{perm:u}}),g=UE({inputs:{x:m},backend:n,attrs:{shape:c}}),y=XR({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},ZR={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=x$(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}},JR=ME({opSnippet:"return float(a != b);",cpuKernelImpl:B$,dtype:"bool"}),eA={kernelName:Dn,backendName:"webgl",kernelFunc:JR};function tA(e){const{inputs:t,backend:n}=e,{input:r}=t;return SE({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const nA={kernelName:jn,backendName:"webgl",kernelFunc:tA},rA={kernelName:ht,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return SE({inputs:{x:s},backend:r});const t=il(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=TE({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=tA({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!ge(s.dtype,i)){const e=SE({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new fE(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",fe("bool",1)),t=JR({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},aA="return ceil(x);",sA=OE({opSnippet:aA,packedOpSnippet:aA,cpuKernelImpl:w$}),iA={kernelName:pt,backendName:"webgl",kernelFunc:sA};class oA{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class lA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const uA={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;o=ze().getBool("WEBGL_PACK_CLIP")?new lA(a.shape):new oA(a.shape);const l=[[s],[i]];return n.runWebGLProgram(o,[a],a.dtype,l)}};class cA{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function hA(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const pA={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new cA(r.shape),i=[hA(r,a.complexTensorInfos.real),hA(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class dA{constructor(e){this.outputShape=[],this.outputShape=mc(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class fA{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=mc(e,t);const n=this.outputShape,r=n.length,a=JT(r),s=oE("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${mA(i,l,t)}),\n            vec2(${mA(u,l,t)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${mA(i,l,d)}),\n          vec2(${mA(u,l,d)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function mA(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function gA(e){const{inputs:t,backend:n}=e,{input:r}=t;return SE({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const yA={kernelName:rn,backendName:"webgl",kernelFunc:gA};function bA(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>tA({inputs:{input:e},backend:n}))),a=e.map((e=>gA({inputs:{input:e},backend:n}))),s=bA(r,t,n),i=bA(a,t,n),o=TE({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=se(e.shape.slice(t));return UE({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=mc(a.map((e=>e.shape)),1),o=1===a[0].shape[0],l=k$(s,i,r,o),u=mc(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>ze().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=bA(e.slice(0,r),t,n),s=bA(e.slice(r),t,n),i=bA([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(ze().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new fA(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:i}=function(e,t,n){const r=mc(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>UE({inputs:{x:e},attrs:{shape:[-1,se(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new dA(s.map((e=>e.shape))),l=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const u=UE({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),u}function xA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=pe(a,t[0].shape)[0],i=mc(t.map((e=>e.shape)),s);if(0===se(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>se(e.shape)>0));return 1===o.length?SE({inputs:{x:o[0]},backend:n}):(fc(o.map((e=>e.shape)),s),bA(o,s,n))}const vA={kernelName:gt,backendName:"webgl",kernelFunc:xA};class wA{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class kA{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class NA{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=a$(this.outputShape.length);const{dataFormat:n}=t,r=zT(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function IA({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[];if((1!==h&&1!==p||!(c>1e3))&&u.isPacked&&d&&null!=u.texture&&l[2]%2!=0&&ie(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,te(RT(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const d=UE({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(d);const g=tR({a:h,b:d,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),y=r.texData.get(g.dataId);te(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,y.shape=n.outShape,f=SE({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const u=UE({inputs:{x:e},backend:r,attrs:{shape:[1,d?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=UE({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=tR({a:u,b:c,transposeA:!1,transposeB:!1,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});f=UE({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function SA({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=l*u*c,g=p*h,y=[m,g],b=[],x=UE({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),v=UE({inputs:{x:t},backend:r,attrs:{shape:[1,m,se(t.shape)/m]}});b.push(x),b.push(v);const w=new NA(y,n),k=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],N=r.runWebGLProgram(w,[x],"float32",k),I=UE({inputs:{x:N},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(N),b.push(I);const S=null!=a,C=null!=s,T="leakyrelu"===o,$=o?LE(o,!0):null,E=new zE(I.shape,v.shape,[1,g,n.outChannels],!0,!1,S,$,C,T),R=[I,v];if(a&&R.push(a),C&&R.push(s),T){const e=r.makeTensorInfo([],"float32",da(i,"float32"));R.push(e),b.push(e)}const A=r.runWebGLProgram(E,R,"float32"),_=UE({inputs:{x:A},backend:r,attrs:{shape:f?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});b.push(A);for(const e of b)r.disposeIntermediateTensorInfo(e);return _}const CA={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=qi(l),p=zi(a.shape,s.shape,i,u,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(ze().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])d=SA({x:a,filter:s,convInfo:p,backend:n});else{const e=new wA(p);d=n.runWebGLProgram(e,[a,s],"float32")}else d=IA({x:a,filter:s,convInfo:p,backend:n});const f=UE({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class TA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $A{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class EA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class RA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const AA={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=qi(l),p=zi(a.shape,c,i,1,o,u,!1,h),d=new TA(p);return n.runWebGLProgram(d,[a,s],"float32")}},_A={kernelName:xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=qi(u),p=zi(i,s.shape,o,1,l,c,!1,h),d=new $A(p);return n.runWebGLProgram(d,[a,s],"float32")}},FA={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=Pi(a.shape,s.shape,i,l,o),c=new kA(u);return n.runWebGLProgram(c,[a,s],"float32")}},DA={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=Pi(a.shape,l,i,1,o),c=new EA(u);return n.runWebGLProgram(c,[a,s],"float32")}},OA={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=Pi(l,s.shape,o,1,i),c=new RA(u);return n.runWebGLProgram(c,[a,s],"float32")}},MA=OE({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),LA={kernelName:Nt,backendName:"webgl",kernelFunc:MA},zA=OE({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),PA={kernelName:It,backendName:"webgl",kernelFunc:zA};class BA{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const WA={kernelName:Ct,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new BA(a.shape,s.shape,o,l,u);return n.runWebGLProgram(c,[a,s,i],"float32")}};class VA{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${UA(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${JT(r)} coords = getOutputCoords();\n        int end = ${GA(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${GA(r,"coords")} = idx;\n          val += getX(${UA(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function UA(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function GA(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const HA={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length,u=Zo([s],l);let c=a;null!=u&&(c=JE({inputs:{x:a},backend:n,attrs:{perm:u}}));const h=el(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const p=c.shape[h];let d=SE({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){const t=new VA(c.shape,!1,o),r=[[e]],a=d;d=n.runWebGLProgram(t,[d],d.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){const e=new VA(c.shape,i,o),t=d;d=n.runWebGLProgram(e,[d],d.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=JE({inputs:{x:d},backend:n,attrs:{perm:Jo(u)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),e}return d}},jA={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=x$(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=v$(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class qA{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const KA={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;te(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],c="NHWC"===i?a.shape[3]:a.shape[1],h=l*s,p=u*s,d=c/(s*s),f=new qA("NHWC"===i?[o,h,p,d]:[o,d,h,p],s,i);return n.runWebGLProgram(f,[a],a.dtype)}};class XA{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=a$(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class YA{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=a$(this.outputShape.length);const s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;for(let e=0;e<u;e++){for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+=`\n        xR = xRCorner + ${e} * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      `;for(let t=0;t<(h+1)/2;t++){const n=2*t;if(p+=`\n          xC = xCCorner + ${n*l};\n          `,1===o){if(n<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n              `,p+=1===l&&n>0?`\n                xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xC${n} = xTexelC${n};\n                `,n+1<c)){const e=i%2==0?J(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                    xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${n+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${n+1}Ready = 1;\n                  }\n                  `,l>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                      xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${n}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                  `):p+=1===e?`\n                    xC${n+1} = xTexelC${n};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                      xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${n+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${n+1}Ready = 1;\n                    }\n\n                    xC${n+1} = xTexelC${n+1};\n                    `}}else n<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${n+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n              `,n+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${n+1}.zw = vec2(0.);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(\n                  xTexelC${n}.xy, xTexelC${n+1}.xy);\n              `,n+1<c&&(p+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                `)));n<c&&(p+=`\n            wTexel = getW(${e}, ${n}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,n+1<c&&(p+=`\n              wTexel = getW(${e}, ${n+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n        }\n      "}let d="",f="";n&&(d=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const QA={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),te(ji(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=zi(a.shape,s.shape,i,c,o,u,!0);let p;p=ze().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new YA(h):new XA(h);const d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[a,s],"float32",d)}};class ZA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class JA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const e_={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=zi(a.shape,c,i,o,l,u,!0),p=new ZA(h);return n.runWebGLProgram(p,[a,s],"float32")}},t_={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=zi(c,s.shape,i,o,l,u,!0),p=new JA(h);return n.runWebGLProgram(p,[a,s],"float32")}};class n_{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const r_={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=se(r.shape),i=UE({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new n_(s),l=n.runWebGLProgram(o,[i],i.dtype),u=UE({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class a_{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const s_={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=Oi(a.shape,s.shape,i,o,"NHWC",l);let c;const h=new a_(u);c=n.runWebGLProgram(h,[a,s],"float32");const p=UE({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}},i_={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=Hc(a,s.length);qc(i.length,l,s);const{path:u,steps:c}=Kc(o,l),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=jc(d,l[t]);let a;Xc(e)?a=s[t]:(a=JE({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);ie(a.shape,i)||(a=UE({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===p?p=a:(p=WE({inputs:{a,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=QE({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},o_=OE({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),l_={kernelName:zt,backendName:"webgl",kernelFunc:o_},u_={kernelName:Pt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=ze().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new IE("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new NE("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},c_=ME({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:N$}),h_={kernelName:Wt,backendName:"webgl",kernelFunc:c_},p_=OE({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Rc};\n  float a1 = ${Ac};\n  float a2 = ${_c};\n  float a3 = ${Fc};\n  float a4 = ${Dc};\n  float a5 = ${Oc};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),d_={kernelName:Bt,backendName:"webgl",kernelFunc:p_},f_="return exp(x);",m_=OE({opSnippet:f_,packedOpSnippet:f_,cpuKernelImpl:I$}),g_={kernelName:Vt,backendName:"webgl",kernelFunc:m_};function y_(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let l=a;return a<0&&(te(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),UE({inputs:{x:s},backend:r,attrs:{shape:o}})}const b_={kernelName:Ut,backendName:"webgl",kernelFunc:y_},x_="return exp(x) - 1.0;",v_=OE({opSnippet:x_,packedOpSnippet:x_,cpuKernelImpl:S$}),w_={kernelName:Gt,backendName:"webgl",kernelFunc:v_};class k_{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function N_(e,t,n){const r=n.texData.get(e.dataId),a=se(e.shape),s=e.shape[e.shape.length-1],i=UE({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,l=new k_("real",o,t),u=new k_("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),p=n.runWebGLProgram(u,c,"float32"),d=TE({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=UE({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(d),f}const I_={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return N_(r,!1,n)}};class S_{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function C_(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||we(a),"string"===s){const e=me(s,se(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new S_(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}const T_={kernelName:jt,backendName:"webgl",kernelFunc:C_};class $_{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const E_={kernelName:qt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new $_(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},R_="return floor(x);",A_=OE({opSnippet:R_,packedOpSnippet:R_,cpuKernelImpl:C$}),__={kernelName:Kt,backendName:"webgl",kernelFunc:A_},F_=ME({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),D_={kernelName:Xt,backendName:"webgl",kernelFunc:F_};class O_{constructor(e){this.variableNames=["A"];const t=zT(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class M_{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=zT(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const L_={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[u,l],h=[u,l,s];(o||i)&&(null==z_&&(z_=document.createElement("canvas").getContext("2d")),z_.canvas.width=l,z_.canvas.height=u,z_.drawImage(a,0,0,l,u),a=z_.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=uT.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);const d=ze().getBool("WEBGL_PACK")?new M_(h):new O_(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let z_;const P_={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=qi(c),g=zi(a.shape,s.shape,l,h,u,p,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(ze().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=SA({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===d,l=d?LE(d,!1):null,u=new wA(g,e,l,t,r),c=[a,s];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",da(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(u,c,"float32")}else y=IA({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const x=UE({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},B_={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r,f=[];let m=c;null==m&&(m=[1,1]),te(ji(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=zi(a.shape,s.shape,l,m,u,h,!0),y=ze().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?LE(p,y):null,x=[a,s],v=null!=i,w=null!=o,k="leakyrelu"===p;if(v&&x.push(i),w&&x.push(o),k){const e=n.makeTensorInfo([],"float32",da(d,"float32"));x.push(e),f.push(e)}let N;N=y?new YA(g,v,b,w,k):new XA(g,v,b,w,k);const I=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=n.runWebGLProgram(N,x,"float32",I);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};class W_{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=JT(t.length),a=JT(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const V_={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=se(r.shape),[l,u,c,h]=Ic(r,a),p=UE({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),d=UE({inputs:{x:r},backend:n,attrs:{shape:[se(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=T$(e,t,r.dtype,u,i,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}const f=new W_(i,h,[u,c]),m=n.runWebGLProgram(f,[d,p],d.dtype),g=UE({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class U_{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=JT(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function G_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=eh(a,s,pe(i,a.shape)[0],o),u=se(s.shape),c=[],h=UE({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=UE({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});c.push(h),c.push(p);const d=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(p),t=n.bufferSync(h),r=$$(t,e,d);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const f=new U_(h.shape,d),m=n.runWebGLProgram(f,[h,p],h.dtype);c.push(m);const g=UE({inputs:{x:m},backend:n,attrs:{shape:l.outputShape}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}const H_={kernelName:Qt,backendName:"webgl",kernelFunc:G_},j_=ME({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:E$,dtype:"bool"}),q_={kernelName:Jt,backendName:"webgl",kernelFunc:j_},K_=ME({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:R$}),X_={kernelName:en,backendName:"webgl",kernelFunc:K_},Y_={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return N_(r,!0,n)}},Q_=OE({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Z_={kernelName:an,backendName:"webgl",kernelFunc:Q_},J_=OE({opSnippet:"return float(isinf(x));",dtype:"bool"}),eF={kernelName:sn,backendName:"webgl",kernelFunc:J_},tF=OE({opSnippet:"return float(isnan(x));",dtype:"bool"}),nF={kernelName:on,backendName:"webgl",kernelFunc:tF},rF=ME({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:A$,dtype:"bool"}),aF={kernelName:un,backendName:"webgl",kernelFunc:rF},sF=ME({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:_$,dtype:"bool"}),iF={kernelName:cn,backendName:"webgl",kernelFunc:sF},oF={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=F$(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},lF=OE({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:D$}),uF={kernelName:pn,backendName:"webgl",kernelFunc:lF},cF=OE({opSnippet:"return log(1.0 + x);"}),hF={kernelName:dn,backendName:"webgl",kernelFunc:cF},pF=ME({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),dF={kernelName:fn,backendName:"webgl",kernelFunc:pF},fF=OE({opSnippet:"return float(!(x >= 1.0));"}),mF={kernelName:mn,backendName:"webgl",kernelFunc:fF},gF=ME({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),yF={kernelName:gn,backendName:"webgl",kernelFunc:gF};class bF{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class xF{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const vF={kernelName:yn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=ze().getBool("WEBGL_PACK_NORMALIZATION")?new xF(a.shape,s,i,o,l):new bF(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)}};class wF{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const kF={kernelName:bn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new wF(a.shape,o,l,u,c);return n.runWebGLProgram(h,[a,s,i],a.dtype)}};function NF(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=pe(s,a.shape);let u=l;const c=Zo(u,o),h=null!=c,p=n.shouldExecuteOnCPU([a]);let d=a;if(h){if(p){const e=n.texData.get(d.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const r=aE(e,a.shape,a.dtype,c,t);d=n.makeTensorInfo(t,a.dtype),n.texData.get(d.dataId).values=r}else d=YE(a,c,n);u=el(u.length,o)}Qo("max",u,o);const[f,m]=Xo(d.shape,u);let g,y=f;if(i&&(y=Yo(f,l)),p){const e=n.texData.get(d.dataId).values,t=O$(e,se(m),y,a.dtype);g=n.makeTensorInfo(y,a.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const a=se(t),s=UE({inputs:{x:e},attrs:{shape:[se(e.shape)/a,a]},backend:r}),i=qE(s,e.dtype,"max",r),o=UE({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const IF={kernelName:xn,backendName:"webgl",kernelFunc:NF},SF=ME({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:M$}),CF={kernelName:vn,backendName:"webgl",kernelFunc:SF},TF={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;MT(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;te(ji(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Mi(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ie(u.inShape,u.outShape))return SE({inputs:{x:a},backend:n});const c=new DR(u,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}},$F={kernelName:Nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=Li(a.shape,s,i,[1,1,1],o,u,l),h=new OR(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};class EF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class RF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,d=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const AF={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Li(i.shape,o,l,[1,1,1],u,c),p=new OR(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new RF(h),m=n.runWebGLProgram(f,[a,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}},_F={kernelName:kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;MT([s,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=Mi(o.shape,l,u,1,c,h),d=new DR(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new EF(p),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},FF={kernelName:Sn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;te(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];te(ji(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));const c=Mi(r.shape,a,s,u,i),[h,p]=function(e,t,n,r){let a=new DR(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new DR(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,c,l);return[h,p]}},DF={kernelName:Cn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=pe(s,r.shape);let u=l;const c=Zo(u,o),h=null!=c,p=i.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=aE(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=YE(r,c,i);d.push(f),u=el(u.length,o)}Qo("sum",u,o);const[m,g]=Xo(f.shape,u);let y=m;a&&(y=Yo(m,l));const b=function(e,t,n,r){const a=se(t),s=UE({inputs:{x:e},attrs:{shape:[se(e.shape)/a,a]},backend:r}),i=qE(s,"float32","mean",r),o=UE({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of d)i.disposeIntermediateTensorInfo(e);return b}},OF={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=pe(s,a.shape);let u=l;const c=Zo(u,o);let h=a;null!=c&&(h=JE({inputs:{x:a},backend:n,attrs:{perm:c}}),u=el(u.length,a.shape.length)),Qo("min",u,o);const[p,d]=Xo(h.shape,u),f=UE({inputs:{x:h},backend:n,attrs:{shape:[-1,se(d)]}}),m=qE(f,f.dtype,"min",n);let g;return g=UE(i?{inputs:{x:m},backend:n,attrs:{shape:Yo(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},MF=ME({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:L$}),LF={kernelName:$n,backendName:"webgl",kernelFunc:MF};class zF{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=JT(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class PF{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=JT(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=oE("rc",r),l=oE("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const BF={kernelName:En,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,i=ze().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PF(r.shape,a,s):new zF(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},WF=ME({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),VF={kernelName:Rn,backendName:"webgl",kernelFunc:WF};class UF{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const GF=ME({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),HF={kernelName:Mt,backendName:"webgl",kernelFunc:GF},jF="return a - b;",qF=ME({opSnippet:jF,packedOpSnippet:jF,supportsComplex:!0,cpuKernelImpl:tE}),KF={kernelName:Er,backendName:"webgl",kernelFunc:qF};function XF(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=pe([s],a.shape),o=NF({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Yo(o.shape,i),u=UE({inputs:{x:o},backend:n,attrs:{shape:l}}),c=qF({inputs:{a,b:u},backend:n}),h=m_({inputs:{x:c},backend:n}),p=QE({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=UE({inputs:{x:p},backend:n,attrs:{shape:l}}),f=GF({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const YF={kernelName:yr,backendName:"webgl",kernelFunc:XF},QF={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:XF({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new UF(u,c,s),p=[[i]],d=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),d}},ZF="return -x;",JF={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=P$(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=ze().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new yE(r.shape,ZF):new fE(r.shape,ZF),n.runWebGLProgram(a,[r],r.dtype)}},eD=yu,tD={kernelName:On,backendName:"webgl",kernelFunc:function(e){De("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),c=n.readSync(s.dataId),{selectedIndices:h}=eD(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},nD=bu,rD={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){De("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:d}=nD(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},aD=xu,sD={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){De("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=aD(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class iD{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const oD={kernelName:Pn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=se(a.shape),u=new iD(l,s,i,o),c=UE({inputs:{x:a},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],a.dtype);n.disposeIntermediateTensorInfo(c);const p=UE({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(h),p}};function lD(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=tA({inputs:{input:r},backend:n}),t=lD({inputs:{x:e},backend:n}),a=gA({inputs:{input:r},backend:n}),s=lD({inputs:{x:a},backend:n}),i=TE({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return C_({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const uD={kernelName:Pr,backendName:"webgl",kernelFunc:lD},cD={kernelName:zn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=tA({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=gA({inputs:{input:a},backend:r}),i=lD({inputs:{x:s},backend:r}),o=TE({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return C_({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},hD={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return y_({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ne(s,e.shape,"All tensors passed to stack must have matching shapes"),te(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=xA({inputs:t.map((e=>{const t=y_({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class pD{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=JT(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class dD{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=JT(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=oE("rc",r),l=oE("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const fD=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===se(a.shape)){const e=s.map(((e,t)=>e[0]+a.shape[t]+e[1]));return C_({backend:n,attrs:{shape:e,value:i,dtype:a.dtype}})}const o=ze().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dD(a.shape,s,i):new pD(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},mD={kernelName:Wn,backendName:"webgl",kernelFunc:fD},gD=ME({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),yD={kernelName:Vn,backendName:"webgl",kernelFunc:gD},bD={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=[],u=pe(s,a.shape);let c=u;const h=Zo(c,o);let p,d=a;if(null!=h&&(d=JE({inputs:{x:a},backend:n,attrs:{perm:h}}),c=el(c.length,o),l.push(d)),Qo("prod",c,o),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:r,outDtype:a}=W$(d.shape,d.dtype,e,c);p=n.makeTensorInfo(r,a,t)}else{const[e,t]=Xo(d.shape,c),r=se(t),s=UE({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),i=qE(s,Ba(a.dtype),"prod",n);p=UE({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(s),l.push(i)}if(i){l.push(p);const e=Yo(p.shape,u);p=UE({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},xD=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=V$(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},vD={kernelName:Hn,backendName:"webgl",kernelFunc:xD},wD=OE({opSnippet:"return 1.0 / x;"}),kD={kernelName:qn,backendName:"webgl",kernelFunc:wD},ND=OE({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ID={kernelName:Kn,backendName:"webgl",kernelFunc:ND},SD=OE({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),CD={kernelName:er,backendName:"webgl",kernelFunc:SD};class TD{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class $D{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const ED={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,c=ze().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new $D(a.shape,l,u,s,i):new TD(a.shape,l,u,s,i);return n.runWebGLProgram(c,[a],"float32")}};class RD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const AD={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new RD(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class _D{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class FD{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const DD={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,c=ze().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new FD(a.shape,l,u,s,i):new _D(a.shape,l,u,s,i);return n.runWebGLProgram(c,[a],a.dtype)}};class OD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const MD={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new OD(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class LD{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=JT(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class zD{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=oE("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=JT(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const PD={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=pe(s,a.shape);if(0===i)return SE({inputs:{x:a},backend:n});const l=ze().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zD(a.shape,o):new LD(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}};class BD{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const WD={kernelName:Wr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new BD(r.shape,s),[u,c]=bc(i,r.shape[1],r.shape[2]),h=[[u,c,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},VD=OE({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),UD={kernelName:nr,backendName:"webgl",kernelFunc:VD},GD=OE({opSnippet:"return inversesqrt(x);",cpuKernelImpl:U$}),HD={kernelName:rr,backendName:"webgl",kernelFunc:GD};class jD{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=JT(a.length),l=JT(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const qD={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Tc(0,a,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,a.dtype);const d=UE({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=UE({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new jD(l,o,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=UE({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class KD{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=JT(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const XD={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new KD(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Pa(a.dtype,s.dtype))}},YD=OE({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${$c};\n  float scale = ${Ec};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),QD={kernelName:ir,backendName:"webgl",kernelFunc:YD},ZD="return 1.0 / (1.0 + exp(-1.0 * x));",JD=OE({opSnippet:ZD,packedOpSnippet:ZD,cpuKernelImpl:G$}),eO={kernelName:hr,backendName:"webgl",kernelFunc:JD},tO=OE({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),nO={kernelName:cr,backendName:"webgl",kernelFunc:tO},rO=OE({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),aO={kernelName:lr,backendName:"webgl",kernelFunc:rO},sO=OE({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),iO={kernelName:ur,backendName:"webgl",kernelFunc:sO},oO=OE({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),lO={kernelName:pr,backendName:"webgl",kernelFunc:oO},uO={kernelName:mr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;te(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);const u=[],c=fD({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=xc(c.shape,s,o,!1),p=vc(h.length,s.length,!1),d=wc(c.shape,s,o,!1),f=UE({inputs:{x:c},backend:n,attrs:{shape:h}}),m=JE({inputs:{x:f},backend:n,attrs:{perm:p}}),g=UE({inputs:{x:m},backend:n,attrs:{shape:d}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},cO={kernelName:br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=q$(o,r.shape,r.dtype,l,a.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},hO={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,c,h]=K$(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},pO={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,c]=X$(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},dO={kernelName:wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,c]=X$(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},fO={kernelName:kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=Tc(0,a,o),p=new jD(u,l,a.shape.length,s.shape.length,c,[h,1],!1),d=n.runWebGLProgram(p,[s,a,i],s.dtype),f=UE({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),f}},mO={kernelName:gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=pe(i,a.shape)[0],l=Qc(a,s,o),u=a.shape.length,c=new Array(u).fill(0),h=a.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=XR({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},gO="return sqrt(x);",yO=OE({opSnippet:gO,packedOpSnippet:gO,cpuKernelImpl:Y$}),bO={kernelName:dr,backendName:"webgl",kernelFunc:yO},xO={kernelName:Ir,backendName:"webgl",kernelFunc:OE({opSnippet:"return x * x;"})},vO="return (a - b) * (a - b);",wO=ME({opSnippet:vO,packedOpSnippet:vO}),kO={kernelName:Nr,backendName:"webgl",kernelFunc:wO},NO={kernelName:Br,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new fE(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class IO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=JT(n.length),s=JT(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const SO={kernelName:Sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=yi(a.shape,s,i,o,l,u,c,h,p),x=UE({inputs:{x:a},backend:n,attrs:{shape:y}});let v;if(d){const e=XR({inputs:{x},backend:n,attrs:{begin:f,size:g}});v=UE({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))v=n.makeTensorInfo(b,a.dtype,[]);else if(n.shouldExecuteOnCPU([x])){const e=n.texData.get(x.dataId).values,t=Gs(x.shape,x.dtype,e),r=Q$(b,t,m,f);v=n.makeTensorInfo(b,x.dtype,r.values)}else{const e=new IO(f,m,b);v=n.runWebGLProgram(e,[x],x.dtype)}const w=UE({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},CO={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=Z$(p,d,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},TO={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=J$(o,l,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},$O={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=eE(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},EO=OE({opSnippet:"return tan(x);"}),RO={kernelName:Rr,backendName:"webgl",kernelFunc:EO},AO=OE({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),_O={kernelName:Ar,backendName:"webgl",kernelFunc:AO};class FO{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=JT(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function DO(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>ya(e))):e,r=Gs(a.shape,a.dtype,t),i=nE(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new FO(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}const OO={kernelName:_r,backendName:"webgl",kernelFunc:DO};class MO{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class LO{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function zO(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function PO(e){let t=1;for(;t<e;)t*=2;return t}const BO={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=ze().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=ze().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([a])||c<o||s>l){const e=n.readSync(a.dataId),[t,r]=rE(e,u,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[a,C_({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(a.dataId),p=null!==h&&h.isPacked,d=p?n.unpackTensor(a):a,f=se(u)/c,m=UE({inputs:{x:d},attrs:{shape:[f,c]},backend:n});p&&zO(n,d);const g=PO(s),y=PO(c);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(e,t,r)=>{const a=x(),s=new MO(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),zO(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new LO([f,e/2]),a=[[c],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),zO(n,s);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,b.shape)}let w=b;b=XR({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),zO(n,w);let k=G_({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});zO(n,m);const N=u.slice(0,-1);N.push(s),w=b,b=UE({inputs:{x:b},attrs:{shape:N},backend:n}),zO(n,w);const I=k;return k=UE({inputs:{x:k},attrs:{shape:N},backend:n}),zO(n,I),[k,b]}};class WO{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const VO={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,p,d]=a.shape,[f,m]=null!=u?u:[h,p],g=new WO(h,p,i,o,l,[c,f,m,d]);return n.runWebGLProgram(g,[a,s],"float32")}},UO={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;MT(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=sE(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},GO={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(u[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[s]=1;const f=new Array(l);for(let e=0;e<f.length;e++){p[s]=e;const t=XR({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),r=UE({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class HO{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const jO=[vF,kF,nR,aR,iR,lR,hR,fR,mR,gR,kR,NR,SR,TR,AR,ER,FR,LR,MR,BR,WR,VR,HR,QR,ZR,rA,iA,uA,pA,$E,vA,AA,_A,CA,DA,OA,FA,LA,PA,WA,HA,jA,KA,e_,t_,QA,r_,s_,i_,l_,u_,h_,d_,g_,b_,w_,I_,T_,E_,__,D_,L_,P_,B_,V_,H_,q_,X_,CE,Y_,yA,Z_,eF,nF,AE,aF,iF,oF,hF,uF,dF,mF,yF,IF,$F,TF,AF,_F,FF,CF,DF,OF,LF,BF,VF,QF,VE,JF,tD,rD,sD,eA,oD,cD,hD,mD,yD,DE,bD,vD,nA,HF,kD,CD,ID,GE,ED,AD,DD,MD,PD,WD,UD,HD,qD,XD,QD,eO,nO,aO,iO,YR,YF,lO,uO,cO,hO,pO,dO,fO,mO,bO,xO,kO,NO,SO,CO,TO,$O,KF,ZE,RO,_O,OO,BO,VO,eR,UO,GO,{kernelName:zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[];let u=0;const c=Zo([u],o);let h=a;null!=c&&(h=JE({inputs:{x:a},backend:n,attrs:{perm:c}}),l.push(h),u=el(1,o)[0]);const p=Jc(h.shape,u,i),d=se([h.shape[u]]),f=UE({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});l.push(f);const m=Ba(a.dtype),g=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],u=Zc(o,s),c=new HO({windowSize:u,inSize:o,batchSize:i,numSegments:s},t),h=n.compileAndRun(c,[e,r],a);if(l.push(h),h.shape[1]===s)return h;const p=xD({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),d=DO({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});return l.push(p),l.push(d),g(h,t,d,a,s)},y=UE({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){l.push(y);const e=Jo(c);b=JE({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},uD];for(const e of jO)Yr(e);const qO=n.p+"white_model.json";var KO=function(e){R(i,e);var t,n,r,a,s=(r=i,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=D(r);if(a){var n=D(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return F(this,e)});function i(e){return C(this,i),s.call(this,e)}return $(i,[{key:"componentDidMount",value:(n=M(P().mark((function e(){var t=this;return P().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,L(D(i.prototype),"componentDidMount",this).call(this);case 2:if(!("indexedDB"in window)){e.next=16;break}return e.prev=3,e.next=6,Sv("indexeddb://white_model");case 6:this.whiteModel=e.sent,e.next=16;break;case 9:return e.prev=9,e.t0=e.catch(3),e.next=13,Sv(qO);case 13:return this.whiteModel=e.sent,e.next=16,this.whiteModel.save("indexeddb://white_model");case 16:this.boardCanvas.addEventListener("click",function(){var e=M(P().mark((function e(n){var r,a;return P().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=t.convertPosToCord(n),0===t.boardState[r.y][r.x]){e.next=3;break}return e.abrupt("return");case 3:return t.processHumanDecision(r),t.checkEnd()&&alert("end"),e.next=7,t.getAiDecision();case 7:a=e.sent,t.processAiDecision(a),t.checkEnd()&&alert("end");case 10:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}());case 17:case"end":return e.stop()}}),e,this,[[3,9]])}))),function(){return n.apply(this,arguments)})},{key:"processHumanDecision",value:function(e){this.drawBlackStone(e),this.boardState[e.y][e.x]=1}},{key:"processAiDecision",value:function(e){this.drawWhiteStone(e),this.boardState[e.y][e.x]=-1}},{key:"getAiDecision",value:(t=M(P().mark((function e(){var t,n,r,a,s,i;return P().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=ls(this.boardState,[20,20],"float32"),t=Ki(t,[1,20,20,1]),n=this.whiteModel.predict(t),e.t0=Array,e.next=6,n.data();case 6:e.t1=e.sent,r=e.t0.from.call(e.t0,e.t1),a=r.map((function(e,t){return[e,t]})),s=a.sort((function(e,t){return t[0]-e[0]})),i=0;case 11:if(!(i<s.length)){e.next=17;break}if(0!==this.boardState[Math.floor(s[i][1]/20)][s[i][1]%20]){e.next=14;break}return e.abrupt("return",{x:s[i][1]%20,y:Math.floor(s[i][1]/20)});case 14:i++,e.next=11;break;case 17:return e.abrupt("return",{x:-1,y:-1});case 18:case"end":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})}]),i}(q);var XO=function(e){R(a,e);var t,n,r=(t=a,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=D(t);if(n){var a=D(this).constructor;e=Reflect.construct(r,arguments,a)}else e=r.apply(this,arguments);return F(this,e)});function a(){return C(this,a),r.apply(this,arguments)}return $(a,[{key:"render",value:function(){return I.createElement("div",null,I.createElement(KO,null))}}]),a}(I.Component);const YO=n.p+"cc14b7ae0269acbe7b474b65edf9dc7d.png",QO=n.p+"ca4ba09257758bec2f38ae1408bca70a.png";function ZO(e,t,n){var r=document.createElement("link");r.setAttribute("rel","apple-touch-icon"),r.setAttribute("href",e),r.setAttribute("sizes",t),r.setAttribute("type",n),document.getElementsByTagName("head")[0].appendChild(r)}S.render(I.createElement(XO,null),document.getElementById("top")),ZO(YO,"512x512","image/png"),ZO(QO,"192x192","image/png"),"serviceWorker"in navigator&&window.addEventListener("load",(function(){navigator.serviceWorker.register("/sw.js")}))})()})();